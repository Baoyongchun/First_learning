{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/app/module-spb/main/other/index.vue?3b3c","webpack:///./src/components/app/module-spb/main/zrr/index.vue?0a74","webpack:///./src/components/common/other/scrollbar/index.vue?6a4b","webpack:///./src/components/common/form/auto-complete/index.vue?e300","webpack:///./src/js/app/message/fdMessage.js","webpack:///./src/components/app/module-spb/cxx/aside-tree/index.vue?6530","webpack:///./src/components/app/module-spb/main/jg/index.vue?4f93","webpack:///./src/components/app/module-spb/main/jbxx/index.vue?713d","webpack:///./src/components/common/notice/message/index.vue?d83b","webpack:///./src/components/app/module-spb/cxx/cxx-content/date-group/index.vue?2d98","webpack:///./src/components/common/popup/index.vue?7c7a","webpack:///./src/pages/page-spb/index.vue?351c","webpack:///./src/components/common/notice/alert/index.vue?4f0a","webpack:///./src/components/app/module-spb/cxx/index.vue?617d","webpack:///./src/components/app/module-spb/cxx/cxx-content/cascade-connection/index.vue?5bb1","webpack:///./src/App.vue?6438","webpack:///src/App.vue","webpack:///./src/App.vue","webpack:///./src/App.vue?b998","webpack:///./src/components/app/unit-test/test1?415a","webpack:///./src/components/app/unit-test/test1","webpack:///./src/components/app/unit-test/test1/index.vue","webpack:///./src/components/app/unit-test/test1/index.vue?667c","webpack:///./src/components/app/unit-test/test2?6b93","webpack:///./src/components/app/unit-test/test2","webpack:///./src/components/app/unit-test/test2/index.vue","webpack:///./src/components/app/unit-test/test2/index.vue?c595","webpack:///./src/components/app/unit-test/test3","webpack:///./src/components/app/unit-test/test3?747c","webpack:///./src/components/app/unit-test/test3/request/request.js","webpack:///./src/pages/page-unit?8cde","webpack:///./src/pages/page-unit","webpack:///./src/components/app/unit-test/test3/index.vue","webpack:///./src/components/app/unit-test/test3/index.vue?ca5c","webpack:///./src/pages/page-unit/index.vue","webpack:///./src/pages/page-unit/index.vue?6dd3","webpack:///./src/components/app/module-spb/cxx/aside-tree/extend/cache.js","webpack:///./src/components/app/module-spb/cxx/aside-tree/extend/filterDataList.js","webpack:///./src/components/app/module-spb/cxx/aside-tree?c0ee","webpack:///./src/components/app/module-spb/cxx/aside-tree","webpack:///./src/components/app/module-spb/cxx/aside-tree/extend/navList.js","webpack:///./src/components/app/module-spb/cxx/aside-tree/extend/toggle.js","webpack:///./src/components/app/module-spb/cxx/aside-tree/extend/multiple.js","webpack:///./src/components/app/module-spb/cxx/aside-tree/index.vue","webpack:///./src/components/app/module-spb/cxx/aside-tree/index.vue?fdc5","webpack:///./src/components/app/module-spb/cxx/cxx-content/date-group","webpack:///./src/components/app/module-spb/cxx/cxx-content/date-group?02d4","webpack:///./src/components/app/module-spb/cxx/cxx-content/date-group/index.vue","webpack:///./src/components/app/module-spb/cxx/cxx-content/date-group/index.vue?0124","webpack:///./src/components/app/module-spb/cxx/cxx-content/checked-area?b9da","webpack:///./src/components/app/module-spb/cxx/cxx-content/checked-area","webpack:///./src/components/app/module-spb/cxx/cxx-content/checked-area/index.vue","webpack:///./src/components/app/module-spb/cxx/cxx-content/checked-area/index.vue?f994","webpack:///./src/components/app/module-spb/cxx/cxx-content/cascade-connection/extend/search-list.js","webpack:///./src/components/app/module-spb/cxx/cxx-content/cascade-connection/extend/cache.js","webpack:///./src/components/app/module-spb/cxx/cxx-content/cascade-connection?36a4","webpack:///./src/components/app/module-spb/cxx/cxx-content/cascade-connection","webpack:///./src/components/app/module-spb/cxx/cxx-content/cascade-connection/extend/multiple.js","webpack:///./src/components/app/module-spb/cxx/cxx-content?60a7","webpack:///./src/components/app/module-spb/cxx/cxx-content","webpack:///./src/components/app/module-spb/cxx/cxx-content/cascade-connection/index.vue","webpack:///./src/components/app/module-spb/cxx/cxx-content/cascade-connection/index.vue?bb40","webpack:///./src/components/app/module-spb/cxx/cxx-content/extend/globalEvent.js","webpack:///./src/components/app/module-spb/cxx/cxx-content/request/request.js","webpack:///./src/components/app/module-spb/cxx/cxx-content/extend/contentOriginData.js","webpack:///./src/components/app/module-spb/cxx/cxx-content/extend/contentItemHandler.js","webpack:///./src/components/app/module-spb/cxx/cxx-content/extend/dateConfig.js","webpack:///./src/components/app/module-spb/cxx/cxx-content/extend/checkedAreaConfig.js","webpack:///./src/components/app/module-spb/cxx/cxx-content/extend/cascadeConnectionConfig.js","webpack:///./src/components/app/module-spb/cxx?c92d","webpack:///./src/components/app/module-spb/cxx","webpack:///./src/components/app/module-spb/cxx/cxx-content/index.vue","webpack:///./src/components/app/module-spb/cxx/cxx-content/index.vue?484c","webpack:///./src/components/app/module-spb/cxx/extend/globalEvent.js","webpack:///./src/components/app/module-spb/cxx/request/request.js","webpack:///./src/components/app/module-spb/cxx/extend/asideTreeConfig.js","webpack:///./src/components/app/module-spb/cxx/extend/contentConfig.js","webpack:///./src/components/app/module-spb/cxx/extend/dOperate.js","webpack:///./src/components/app/module-spb/cxx/extend/popupConfig.js","webpack:///./src/components/app/module-spb/cxx/index.vue","webpack:///./src/components/app/module-spb/cxx/index.vue?6891","webpack:///./src/components/app/module-spb/main/common/validateType.js","webpack:///./src/components/app/module-spb/main/jbxx?d848","webpack:///./src/components/app/module-spb/main/jbxx","webpack:///./src/components/app/module-spb/main/jbxx/extend/globalEvent.js","webpack:///./src/components/app/module-spb/main/jbxx/extend/dataConfig.js","webpack:///./src/components/app/module-spb/main/jbxx/index.vue","webpack:///./src/components/app/module-spb/main/jbxx/index.vue?f577","webpack:///./src/components/app/module-spb/main/common/createCxxDataItem.js","webpack:///./src/components/app/module-spb/main/common/cxdxCommon.js","webpack:///./src/components/app/module-spb/main/zrr","webpack:///./src/components/app/module-spb/main/zrr?33e4","webpack:///./src/components/app/module-spb/main/zrr/extend/globalEvent.js","webpack:///./src/components/app/module-spb/main/zrr/index.vue","webpack:///./src/components/app/module-spb/main/zrr/index.vue?7314","webpack:///./src/components/app/module-spb/main/jg","webpack:///./src/components/app/module-spb/main/jg?5355","webpack:///./src/components/app/module-spb/main/jg/extend/globalEvent.js","webpack:///./src/components/app/module-spb/main/jg/index.vue","webpack:///./src/components/app/module-spb/main/jg/index.vue?1a9d","webpack:///./src/components/app/module-spb/main/other","webpack:///./src/components/app/module-spb/main/other?3beb","webpack:///./src/components/app/module-spb/main/other/extend/globalEvent.js","webpack:///./src/components/app/module-spb/main/other/index.vue","webpack:///./src/components/app/module-spb/main/other/index.vue?7281","webpack:///./src/components/app/module-spb/importQueryObject?d992","webpack:///./src/components/app/module-spb/importQueryObject","webpack:///./src/components/app/module-spb/importQueryObject/extend/globalEvent.js","webpack:///./src/components/app/module-spb/importQueryObject/request/request.js","webpack:///./src/components/app/module-spb/importQueryObject/extend/popupConfig.js","webpack:///./src/components/app/module-spb/importQueryObject/index.vue","webpack:///./src/components/app/module-spb/importQueryObject/index.vue?1681","webpack:///./src/components/app/module-spb/splz/extend/popupConfig.js","webpack:///./src/components/app/module-spb/splz?3382","webpack:///./src/components/app/module-spb/splz","webpack:///./src/components/app/module-spb/splz/extend/globalEvent.js","webpack:///./src/components/app/module-spb/splz/request/request.js","webpack:///./src/components/app/module-spb/splz/extend/dOperate.js","webpack:///./src/components/app/module-spb/main?bb23","webpack:///./src/components/app/module-spb/main","webpack:///./src/components/app/module-spb/splz/index.vue","webpack:///./src/components/app/module-spb/splz/index.vue?cb46","webpack:///./src/components/app/module-spb/main/extend/globalEvent.js","webpack:///./src/components/app/module-spb/main/extend/dOperateData.js","webpack:///./src/components/app/module-spb/main/extend/globalMethods.js","webpack:///./src/components/app/module-spb/main/extend/bindEvent.js","webpack:///./src/components/app/module-spb/main/request/request.js","webpack:///./src/pages/page-spb?134d","webpack:///./src/pages/page-spb","webpack:///./src/components/app/module-spb/main/index.vue","webpack:///./src/components/app/module-spb/main/index.vue?71b9","webpack:///./src/pages/page-spb/index.vue","webpack:///./src/pages/page-spb/index.vue?10a5","webpack:///./src/router/index.js","webpack:///./src/components/config/component-config.js","webpack:///./src/components/globalBus/index.js","webpack:///./src/components/common/notice/message","webpack:///./src/components/common/notice/message?942b","webpack:///./src/components/common/notice/message/index.vue","webpack:///./src/components/common/notice/message/index.vue?7675","webpack:///./src/components/common/notice/message/message.js","webpack:///./src/components/common/notice/ajax-loading","webpack:///./src/components/common/notice/ajax-loading?2824","webpack:///./src/components/common/notice/ajax-loading/index.vue","webpack:///./src/components/common/notice/ajax-loading/index.vue?b707","webpack:///./src/components/common/notice/ajax-loading/ajax-loading.js","webpack:///./src/components/common/notice/alert","webpack:///./src/components/common/notice/alert?fd86","webpack:///./src/components/common/notice/alert/index.vue","webpack:///./src/components/common/notice/alert/index.vue?2b65","webpack:///./src/components/common/notice/alert/alert.js","webpack:///./src/components/common/form/auto-complete/extend/clickoutside/index.js","webpack:///./src/components/common/form/auto-complete/request/request.js","webpack:///./src/components/common/form/auto-complete?b6dd","webpack:///./src/components/common/form/auto-complete","webpack:///./src/components/common/form/auto-complete/extend/autocomplete.js","webpack:///./src/components/common/form/auto-complete/extend/setScrollBarPosition.js","webpack:///./src/components/common/form/auto-complete/extend/search-list.js","webpack:///./src/components/common/form/auto-complete/index.vue","webpack:///./src/components/common/form/auto-complete/index.vue?2d30","webpack:///./src/components/common/popup","webpack:///./src/components/common/popup?0814","webpack:///./src/components/common/popup/index.vue","webpack:///./src/components/common/popup/index.vue?b097","webpack:///./src/components/common/other/scrollbar/extend/component-config.js","webpack:///./src/components/common/other/scrollbar/extend/event.js","webpack:///./src/components/common/other/scrollbar/extend/getScrollBarSize.js","webpack:///./src/components/common/other/scrollbar/vertical-scrollbar","webpack:///./src/components/common/other/scrollbar/vertical-scrollbar?6000","webpack:///./src/components/common/other/scrollbar/vertical-scrollbar/index.vue","webpack:///./src/components/common/other/scrollbar/vertical-scrollbar/index.vue?e95e","webpack:///./src/components/common/other/scrollbar/horizontal-scrollbar","webpack:///./src/components/common/other/scrollbar/horizontal-scrollbar?e02f","webpack:///./src/components/common/other/scrollbar/horizontal-scrollbar/index.vue","webpack:///./src/components/common/other/scrollbar/horizontal-scrollbar/index.vue?b252","webpack:///./src/components/common/other/scrollbar","webpack:///./src/components/common/other/scrollbar?304e","webpack:///./src/components/common/other/scrollbar/index.vue","webpack:///./src/components/common/other/scrollbar/index.vue?0d64","webpack:///./src/components/common/index.js","webpack:///./src/js/app/directive/clickoutside/index.js","webpack:///./src/js/app/directive/tips/adjustTipsPosition.js","webpack:///./src/js/app/directive/tips/index.js","webpack:///./src/js/app/directive/fdDirective.js","webpack:///./src/js/app/filter/fdFilter.js","webpack:///./src/js/app/filter/capitalize/index.js","webpack:///./src/js/app/filter/dateFormate/index.js","webpack:///./src/js/app/dataTable/fdDataTable.js","webpack:///./src/js/server-config.js","webpack:///./src/js/config.js","webpack:///./src/components/tools/extend/debounce.js","webpack:///./src/components/tools/extend/event.js","webpack:///./src/components/tools/extend/performance.js","webpack:///./src/components/tools/extend/log.js","webpack:///./src/components/tools/extend/console.js","webpack:///./src/components/tools/extend/browser.js","webpack:///./src/components/tools/extend/ajax.js","webpack:///./src/components/tools/extend/setHtmlFontSize.js","webpack:///./src/js/app/common/fdGlobal.js","webpack:///./src/components/tools/extend/throttle.js","webpack:///./src/components/tools/extend/getEvent.js","webpack:///./src/components/tools/extend/stopEvent.js","webpack:///./src/components/tools/extend/setScrollBarPosition.js","webpack:///./src/js/app/common/fdRequest.js","webpack:///./src/components/tools/extend/getUrlParams.js","webpack:///./src/js/app/common/preRequest.js","webpack:///./src/main.js","webpack:///./src/components/common/other/scrollbar/extend/requestAnimationFrame.js","webpack:///./src/components/app/module-spb/importQueryObject/index.vue?5bfd","webpack:///./src/App.vue?983c","webpack:///./src/components/app/module-spb/cxx/cxx-content/index.vue?7f65","webpack:///./src/components/app/module-spb/cxx/cxx-content/checked-area/index.vue?bd89","webpack:///./src/components/common/notice/ajax-loading/index.vue?fcb7","webpack:///./src/components/app/module-spb/main/index.vue?e23a","webpack:///./src/components/app/module-spb/splz/index.vue?8e0c"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_6_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_2_node_modules_less_loader_dist_cjs_js_ref_6_3_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0__","__WEBPACK_IMPORT_KEY__","indexOf","onmessage","event","_data","toString","JSON","parse","e","cmd","console","info","log","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_6_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_2_node_modules_less_loader_dist_cjs_js_ref_6_3_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_49ea52ef_lang_less_scoped_true___WEBPACK_IMPORTED_MODULE_0__","src_Appvue_type_script_lang_js_","methods","[object Object]","path","this","$router","App","componentNormalizer","_h","$createElement","_c","_self","attrs","id","unit_test_test1_vue_type_script_lang_js_","message","test1","staticClass","_v","_s","unit_test_test2_vue_type_script_lang_js_","test2","_vm","on","click","$event","clickChange","unit_test_test3_vue_type_script_lang_js_","mixins","queryData","_startTime","fdGlobal","performance","getCurrentTime","Promise","resolve","reject","_showLog","showLog","_name","_method","fdConfig","url","methodGet","_url","serverUrl","query","age","consoleLogRequest","ajax","method","params","responseType","then","_serverData","execute","consoleLogResponse","props","test","type","index","requestUserData","pages_page_unit_vue_type_script_lang_js_","components","unitTest1","unitTest2","unitTest3","_l","item","domProps","textContent","clickGetData","page_unit","cache","cResetCache","cacheObject","Map","set","delete","cxx_aside_tree_vue_type_script_lang_js_","dataItem","extend","eToggleExtendHandler","eToggleCollpaseHandler","$emit","currentNavList","activeItem","dataList","globalBus","_dataList","filterDataList","transformDataList","setCurrentNavList","pItem","beforeClickHander","canSelectHandler","disabled","setActiveItem","leaf","eToggleHandler","multiple","mClickItem","cInitCache","forEach","singleRecursion","dataItemP","dAddProperty","dChildren","itemC","cAddCache","dKey","Array","isArray","checked","addMultipleProperty","hasExtendArrow","hasExtendArrowHandler","otherProperty","mSetCurrentValue","mSetCheckedData","mCheckedCache","mCurrentValue","mCheckedData","clear","newValue","forceUpdate","_value","mBeforeAdjustHandle","mResetCheckedData","mOperateCheckedData","mEmitEvent","mInitCheckedData","map","_dataItem","cGetCache","sjyList","startDate","endDate","mAddCheckedItem","_pItem","dpKey","mDeleteCheckedItem","checkedHandler","emitEvent","mSetCurrentCheckedData","filterKeys","ywActiveItem","filterYwActiveItem","filterControl","parseInt","category","_filterPKeys","keys","filterShowKeysObject","_targetItem","_childrenKeys","children","_targetItemC","filterControlGroup1ShowKeys","childCategory","filterControlGroup2ShowKeys","filterControlGroup3ShowKeys","showKeysObject","_showKeysObject","001001","003001","004002","001002","004004","001004","001003","002001","002002","004003","004005","004006","filterSetShowKeys","default","String","dName","checkedDataList","Function","vm","_falg1","_falg2","_falg3","parentId","_falg4","_falg5","_falg6","_falg7","_falg8","init","update","mWatchValueHandle","scrollbar","jsScrollbar","callback","setFilterYwActiveItem","initNavList","aside_tree","show","ready","readyScrollbar","mousedown","clickItem","directives","rawName","expression","modifiers","ellipsis","class","active","show-extend","data-ellipsis","adjustEllipsis","_e","itemChild","stopPropagation","cxx_content_date_group_vue_type_script_lang_js_","Number","startLabel","startPlaceholder","endLabel","endPlaceholder","disabledToday","startGreaterThanEndTipsInfo","tipsHandler","Artery","warning","startEndMinSpace","showEndDate","Boolean","currentStartDate","currentEndDate","watch","newDate","changeStartDate","changeEndDate","date","_startDate","transferDate","valueOf","_endDate","emitTipsEvent","dateString","_dateString","split","_date","_newDate","Date","setUTCFullYear","_len","_times","setUTCHours","date_group","innerHTML","options","placeholder","transfer","change","model","$$v","cxx_content_checked_area_vue_type_script_lang_js_","labelCategory","deleteText","maxCount","currentList","computed","setCurrentList","count","clearCurrentList","deleteCurrentList","checked_area","label","currentListCount","tipsInfo","clickDeleteAll","not-allowed","clickDeleteItem","search_list","limit","placeholderSearch","mAdjustRepeatItem","slCurrentDataCache","slCurrentData","slSetCurrentData","slGetCurrentData","extend_cache","has","repeatCache","repeatCacheId","cxx_content_cascade_connection_vue_type_script_lang_js_","_repeatItem","operateParentCheckedStatus","_pRepeatItem","maxcount","_pDataItem","every","adjustParentCheckedStatus","selectMaxCount","size","addKindActiveItemProperty","dAddOtherPropertyCallback","dAddClassCallback","hasSearch","showWarningTips","warningTips","adjustEllipsisHandler","searchValue","currentDataList","dataEmptyText","currentItem","destroy","setSearchValue","initCurrentDataList","cDestroyCache","setCurrentDataList","slInitCurrentData","kindActiveItem","slAddCurrentDataItem","className","_flag","operateChildrenCheckedStatus","sClickItem","setKindActiveItem","cxx_cxx_content_vue_type_script_lang_js_","dateGroup","checkedArea","cascadeConnection","localSearch","remoteRequestMethod","select","slSelect","scopedSlots","_u","fn","ref","has-search","checkbox","clickSelectAll","indexC","clickNodeItem","itemCC","indexCC","bindGlobalEvent","unbindGlobalEvent","$on","isEmptyy","$off","code","methodPost","cxx","getContentList","getTime","isDebug","cxlx","qyCodeType","contentObject","all","getRemoteContentListData","jsTreeObject","dCurrentCxxDataItem","requestCxxContentListData","serverData","cacheContentData","Error","selectItem","asideTree","setSelectedItem","operateDateGroup","operateEmptyContent","emptyContent","operateCheckedArea","zhxxItemHandler","yjlsItemHandler","jrlcItemHandler","djxxItemHandler","hdxxItemHandler","bdcjzcxItemHandler","getContentListData","updateCascadeConnection","jsCascadeConnection","_checkedDatalist","yhjrjgHandler","getContentListDataYys","filter","xcdw","transformHdxxList","transformDjxxList","_sjyList","_sjyListKeys","stringify","yysHandler","selectedItem","updateDateGroup","now","setFullYear","getFullYear","showDateGroup","startDateLabel","endDateLabel","dateGroupObject","jsDateGroup","flag","setShowDateGroupStatus","resetDateGroup","setDateLabel","setShowEndDate","emitGlobalEvent","checkedAreaObject","jsCheckedArea","resetCheckedArea","setCheckedAreaList","updateCascadeConnectionChecked","cascadeConnectionObject","updateCheckedArea","operateConnectItemData","djxxItemConnectHandler","hdxxItemConnectHandler","_hdxxNodeItem","_djxxNodeItem","adjustExist","some","showCxx","checkedAreaList","isEmpty","typeArr","val","nodeItem","_checkedAreaList","_currentNodeItem","mUpdateItemCheckedStatus","error","join","setEmptyContent","zqcyItemHandler","zqcybdItemHandler","module_spb_cxx_vue_type_script_lang_js_","cxxContent","hide","changeDate","readyDateGroup","staticStyle","margin-left","margin-right","selectType","color","font-size","changeCheckedArea","readyCheckedArea","readyCascadeConnection","changeCascadeConnection","showCxxPopup","getCxxAsideTree","requestCxxAsideTreeData","jsTreeDataList","treeObject","cxxList","dSetPreSelectedItem","dSelectedItem","dSetSelectedItem","dSetCxxList","nsrdjxxItemConnectHandler","zzszyfpxxItemConnectHandler","zqcyItemConnectHandler","zqcybdItemConnectHandler","dPreSelectedItem","jsContentObject","_info","start","end","watchSelectItem","checkedDatalist","dCxxList","dShowCxxModelSource","dSetShowCxxModelSource","dSetCurrentCxxDataItem","resetContent","resetAsideTree","moduleName","updateContent","popupTitle","popupStatus","popupConfirm","text","showCxxModelSource","updateTree","setPopupStatus","dResetCxxData","dGetCxxList","_cxxList","showMainArea","isShowCheckedTip","initTreeData","clickToggleContentArea","title","confirm","cancel","clickCancel","clickConfirm","show-main-area","selectTree","changeTree","readyTree","readyContent","validateType","checkLxdh","validate","checkMobilePhone","phone","checkLicensePlate","qgdCheck","kddhCheck","cardNumber","toLowerCase","isPassport","isNotHz","RegExp","main_jbxx_vue_type_script_lang_js_","setQueryData","cCxh","dSqrq","cSqdwMc","cSqbmMc","cCbrMc","cQqrId","rules","required","validator","cXzqqrId","invalid","requestDataUrl","spb","getOrganChildren","validateState","cLxfs","_validateObject","nCxsy","fdDataTable","getCodeTypeDataList","syCodeType","cGlajxsh","cDcdxxm","cGgdw","cZw","nZj","getCodeTypePinyinDataList","zJCodeType","cPermission","gbglqxCodeType","nMgxx","bcsm","bz","tJbxx","cCbrId","cQqrMc","cXzqqrMc","cSqbmId","cSqdwId","cBh","commonUrlParams","nZt","cCxbs","changeBcsm","chk_value","arrayCheckBox","document","getElementsByName","validateRequired","validateValidator","currentElement","$refs","modelToQuery","updateLabel","_validateFlag","getQueryData","defaultValue","array","jbxx","_f","_m","readonly","input","target","composing","$set","maxlength","select-type","select-scope","clearable","can-search","arguments","argsArray","changeHandler","concat","filterable","select-selected","selectSelected","pinyin-search","colspan","createCxxDataItem","cCxxList","cxdxCommon","dataAddCount","nZjlx","pos","setDataAddCount","deleteDataListItem","checkRepeat","_dataAddCount","_currentTotalCount","$parent","dGetSpbDataListSize","batchAddData","addDataItem","createDataItem","len","resetDataAddCount","setDataItemExistValue","isNaN","_residueTotalCount","existValue","isExistValue","getTipsContent","dataKeys","cKey","_existValueFlag","nXh","clearOriginData","clearDataList","operateOriginDataList","main_zrr_vue_type_script_lang_js_","updateCxxData","saveFlag","zjlxList","zjlxCodeType","zjList","gbglqxList","mustSetcCxxList","initDataList","randomId","Math","random","toFixed","cXm","cZjhm","gbglqx","showGth","dataRepeat","mustSetcXm","mustSetnZjlx","mustSetcZjhm","mustSetnZj","mustSetgbglqx","getStrLength","str","replace","getCodeToName","getItemTipsName","querySelector","toUpperCase","_cZjhmObject","values","dataIndexList","itemIndex","issfz","zrr","inputHandler","refInFor","changeSelect","repeat","show-gth","blur","preventDefault","checkIdcard","clickShowModal","clickClearCxx","clickCopyItem","clickAdd","inputDataAddCountHandler","main_jg_vue_type_script_lang_js_","zzlxCodeType","cMc","cTyshxxdm","cCxxMc","mustSetcMc","mustSetcTyshxxdm","tipsError","_cTyshxxdmObject","jg","checkbackCardId","showErrorText","main_other_vue_type_script_lang_js_","user","cxlxList","cxlxCodeType","categoryCxlx","bankcardList","bankCodes","dxssLx","requestBankCodes","isDisabled","mustSetcName","mustSetcGbglqx","isNotHmsslb","isNotZrr","mustSethmsslb","hmsslb","cValue","cName","cGbglqx","mustSetnCxlx","mustSetcxlx","mustSetcValue","bankcardshow","setCurrentPlaceholder","bankCardTips","codeItem","tCode","startsWith","mapItem","tName","_cValueObject","bankCode","getBankCode","other","tips","itemBank","indexBank","text-align","fd-must-set","noneCursor","nonePointer","changeSelect2","changeSelect1","width","line-height","module_spb_importQueryObject_vue_type_script_lang_js_","showDrcxdxPopup","dataParams","confirmDrcxdx","jbxxBh","showDrcxdx","elementParamsCbh","addCountTotal","jsZrr","jsJg","jsQt","clearUploadFiles","files","_params","uploadBdcdxKey","requestConfirmDrcxdx","operateConfirmData","success","cxZrrList","cxDwList","cxOtherList","uploadBdcdxUrl","uploadBdcdx","importConfirmButtonLoading","importConfirmButtonLoadingText","popup","file","response","_this","scroll02","uploadBdcdxEle","clearFiles","fileList","importQueryObject","close","action","accept","before-upload","handleBeforeUpload","on-success","handleSuccess","on-error","handleError","show-upload-list","icon","speed","module_spb_splz_vue_type_script_lang_js_","showSplzPopup","cyspr","spjl","multipleSplz","status","saveType","sprIds","tjbxx","showSplz","paramsElement","paramElement","dOperateInitCysprData","dOperateInitSpjlData","dOperateInitMultipleFlag","clearSprIdOrName","deleteAllSpr","selectSprList","xyhj","substring","dOperateSaveTypeDefaultData","notice","spr","ids","cysprList","selected","selectedNum","splzOrganTree","checkedIdsArr","jsSplzTree","checkedIds","requestCysprData","requestSpjlData","spjlData","xh","requestMultipleSplz","isMultiple","obj","requestSaveTypeDefaultData","cXsxx","_dataFlag","opener","parent","postMessage","nextSpr","currentSpr","isShowSprMenu","isShowZzry","requestDataSplzZzryUrl","getOrganChildrenSplz","names","param","sprDetail","oldValue","constructor","moreValue","cancelCysprData","cancelSprSelectData","cancelZzjgryData","closeCheckedIndex","module_spb_main_vue_type_script_lang_js_","popupCxx","splz","clickSpr","xzsprInputFocus","clickDelOnlySpr","clickZzryOrCyspr","fd-no-show-zzry","show-icon","navigation","single","clickTitle","closeSprMenu","border","pageable-data","prop","gInvalidHandler","operateCxrlxdh","cTelephone","cMobilePhone","paramsCbh","requestEditDefaultData","reFreshOtherList","dEmitUpdateModuleData","requestDefaultData","requestApprovalMethodType","approvalMethodType","dOperateSpjlByCbh","isEdit","cId","requestGetShjlByJbxxCid","jsJbxx","getDataListSize","dGetSpbData","requestSave","pMessage","dUpdatePageData","dSaveOperateHandler","gShowMessage","zt","dataBj","_dataParams","adjustExistValue","gGoToFirstCxdxElement","dOperateAdjustExistValueTjxsspb","gGoToFirstErrorElement","dOperateSaveAjax","openSpb","location","href","serverConfig","ckSpbUrl","dRepeatFlag","dSetRepeatFlag","$Alert","content","dOperateAdjustExistValueScxxspb","otherList","frame","getElementById","createElement","height","body","appendChild","src","xzCxdxMb","_element","querySelectorAll","_scrollContain","setScrollBarPosition","duration","gHideMessage","gMessage","classList","contains","unbindEvent","dOperateSave","dOperateTjxsspb","dOperateScxxspb","gGownloadTemplate","gBodyClickHandler","off","getDefaultData","getShjlByJbxxCid","getSpbData","dOperateInitEditData","dOperateInitData","dOperateInitApprovalMethodType","bindEvent","jbxxObject","zrrObject","jgObject","qtObject","pages_page_spb_vue_type_script_lang_js_","moduleSpb","readyJbxx","eClickdownloadTemplate","eClickDrcxdx","readyZrr","readyJg","readyQt","eClickSave","eClickScxxspb","created","page_spb","pageTest","pageCxx","template","vue_esm","use","vue_router_esm","router","routes","redirect","component","component_config","commonUserInfo","setCommonUrlParams","setCommonUserInfo","iconTypes","loading","notice_message_vue_type_script_lang_js_","timer","clearTimeout","removeChild","$el","setTimeout","wrapClasses","mouseenter","mouseleave","message_message","_options","_props","instance","render","h","$mount","jsMessage","notice_ajax_loading_vue_type_script_lang_js_","ajax_loading","warpClass","ajax_loading_ajax_loading","createdInstance","ajaxLoading","currentShow","notice_alert_vue_type_script_lang_js_","animateName","zIndex","modal","currentValue","opacity0","popupClasses","popupHeaderClasses","popupBodyClasses","popupFooterClasses","_style","destory","notice_alert","style","alert_alert","createInstance","clickoutside","el","binding","documentHandler","__vueClickOutside__","addEventListener","removeEventListener","_axiosOprionsMap","form_auto_complete_vue_type_script_lang_js_","_axiosOptions","_key","axios_default","remoteUrl","remoteExtendsParams","_ajaxOptions","remoteMethod","requestDataList","delay","focusing","atcActiveIndex","remoting","setFocusing","slSetVisible","jsInput","atcSetActiveIndex","atcScrollBarAnimate","$nextTick","_activeElement","element","scrollContain","distance","_distance","rectTarget","getBoundingClientRect","rectContain","bottomOverflowDistance","bottom","scrollTop","abs","topOverflowDistance","top","jsSearchListContain","slVisible","keyCode","atcUp","atcDown","atcEnterHandle","handleInput","inputTimer","atcResetActiveItem","slOperateData","slRemoteSearch","slSelectListItem","showEmptyText","emptyText","multipleSearch","_query","_pattern","slGetSearchPattern","_atcActiveIndex","_label","slFilterData","setCurrentItem","setRemoting","finally","requestRemoteData","pclickoutside","scrollBar","setCurrentValue","immediate","clickClear","resetCurrentItem","hideSearchList","auto_complete","focus","keyup","handleKeyup","keydown","handleKeydown","handleFocus","handleBlur","_t","common_popup_vue_type_script_lang_js_","showClose","hidePopup","setCurrentShow","clickClose","clickOther","extend_component_config","extend_event","handler","capture","attachEvent","detachEvent","barSize","getScrollBarSize","fresh","elementStyle","position","left","pointerEvents","visibility","overflow","offsetWidth","clientWidth","countScrollBarSize","vertical_scrollbar_vue_type_script_lang_js_prefixCls","scrollbarClass","scrollbar_vertical_scrollbar_vue_type_script_lang_js_","cscrollAreaHeight","cscrollWrapperHeight","cscrollTop","tweenTime","scrollbarMinSize","pressExtendScrollbarSize","clientHeight","dragging","startY","endY","scrollBarPostion","scrollAreaHeight","scrollWrapperHeight","scrollbarHeight","max","initParams","cancelAnimationFrame","requestAnimationFrameTimerPosition","requestAnimationFrameTimer","setScrollPostion","getEvent","_event","returnValue","requestAnimationFrameTimerPositionLastTime","_currentTime","requestAnimationFrame","_scrollBarPostion","validRealScrollDistance","validScrollDistance","setScrollBarPostion","onDrag","stopDrag","stopEvent","changedTouches","setDragStatus","setStartY","pageY","setEndY","operateScrollTop","min","emitChangeScrollTop","_currentPercent","_moveDistance","clientY","ceil","moveScrollbar","moveDistance","times","vertical_scrollbar","clickGoto","touchstart","startDrag","horizontal_scrollbar_vue_type_script_lang_js_on","horizontal_scrollbar_vue_type_script_lang_js_off","horizontal_scrollbar_vue_type_script_lang_js_prefixCls","scrollbarCls","scrollbar_horizontal_scrollbar_vue_type_script_lang_js_","cscrollAreaWidth","cscrollWrapperWidth","cscrollLeft","startX","endX","scrollAreaWidth","scrollWrapperWidth","scrollbarWidth","scrollLeft","setStartX","pageX","setEndX","operateScrollLeft","emitChangeScrollLeft","clientX","horizontal_scrollbar","scrollbar_vue_type_script_lang_js_prefixCls","scrollbar_vue_type_script_lang_js_on","scrollbar_vue_type_script_lang_js_off","other_scrollbar_vue_type_script_lang_js_","verticalScrollbar","horizontalScrollbar","attributeFilter","showScrollbar","isMobile","hasVerticalScrollBar","hasHorizontalScrollBar","isNotWebkit","navigator","userAgent","scrollBarSize","scrollbarAreaClasses","scrollbarContentClasses","bindResponseTypeObserve","unbindResponseTypeObserve","requestAnimationFrameTimerPositionTop","requestAnimationFrameTimerPositionLeft","scrollArea","scrollWidth","scrollHeight","mutationObserver","disconnect","MutationObserver","observerConfig","attributes","childList","characterData","subtree","attributeOldValue","characterDataOldValue","mutationsList","observer","refresh","observe","emitScroll","scrollHandle","delayTimer","wheelDirection","validRealScrollLeftDistance","validRealScrollTopDistance","scrollToLower","scrollToUpper","shiftKey","wheelDeltaY","operateWheelHandle","deltaY","moveTheScrollbar","currentPercent","animateFlag","_top","_left","_moveDistanceTop","_moveDistanceLeft","_distanceTop","_distanceLeft","distanceTop","distanceLeft","excuteCallback","agent","isIphone","isAndroid","isIPad","isIPod","isIEMobile","isWebOS","isBlackBerry","isOperaMini","scroll","wheel","wheelHandle","mousewheel","mousewheelHandle","touchmove","touchend","changeScrollTop","handleChangeScrollTop","changeScrollLeft","handleChangeScrollLeft","autoComplete","install","installed","a","$Message","$AjaxLoading","API","directive_clickoutside","tips_adjustTipsPosition","_winW","innerWidth","_winH","innerHeight","_elementW","_elementH","_position","TIPS_OPTIONS","z-index","background-color","font","max-width","padding","border-radius","box-shadow","word-break","offsetDistance","TIPS","DOM","_tipsDom","add","setAttribute","hideTips","showTips","resultLeft","resultTop","setValue","setClass","createTips","_category","arg","_className","_tipsStyle","_ellipsis","_show","dataset","parentNode","setStyle","setTipsPostion","onmouseenter","__vueMouseMove","onmouseleave","directive","charAt","isZhCN","dateStr","y","getMonth","getDate","_fdDataTable","table1001","table01","table02","table03","table04","table99","table1002","table1","table2","table3","table4","table5","table6","table7","table8","table9","table10","table11","table12","table13","table14","table1003","table1004","table1005","table0","table1006","table15","table16","table17","table18","table19","table20","table21","table22","table23","table24","table25","table26","table27","table28","table29","table30","table31","table32","table33","table34","table35","table36","table37","table38","table39","table40","table41","table42","table43","table44","table45","table46","table47","table48","table49","table50","table51","table52","table53","table54","table55","table56","table1007","table1008","table1009","table1010","table1011","table1012","table1013","table1014","table1015","table1016","table1017","table1018","table1019","table1020","table05","table06","table07","table08","table09","table1021","table1022","table57","table58","table59","table60","table61","table62","table63","table64","table65","table66","table67","table68","table69","table70","table71","table1023","table1024","table100","table300","table400","table600","table801","table9999","table902","table903","table904","table1025","table1026","table1027","table1028","table1029","table1030","table","table1031","table1032","table1033","codeType","_targetObj","getCodeTypeObject","_dataObject","server_config","login","getCodes","applyAgain","formPlus","config_config","methodPut","methodDelete","methodPatch","artery","tools_extend_event","time","_recodeTime","_body","_recodeTimePanel","_button","onclick","stop","innerText","performancePanel","setStartTime","startTime","methodName","_isTestMethod","_color","_expenseTime","_maxExpenseTime","_item","_recodeLog","_logPanelWrap","_logPanel","recodeLogFlag","information","_information","_itemBr","extend_console","requestData","responseData","dir","textStatus","errorThrown","logInfo","opera","browser","isIe","version","getVersion","isOpera","isChrome","isSafari","isWebkit","isMac","isQuirks","compatMode","isGecko","product","v1","match","v2","parseFloat","geckoRelease","isIeCompat","isIe11Compat","documentMode","isIe10Compat","isIe9Compat","isIe8Compat","isIe7Compat","isIe6Compat","isCompatible","mobile","extend_browser","globalBefore","globalAfter","finish","interceptors","request","config","_config","headers","forbidGlobal","before","after","SetHtmlSize","htmlElement","mergeOptions","author","updateTime","defaultOptions","minWidth","minHeight","fontSize","visualWidth","visualHeight","setHtmlSize","htmlSize","resizeHandle","setHtmlObject","FdGlobal","axios","debounce","contentText","waiting","_delay","_arguments","later","throttle","_lastTime","setHtmlFontSize","fdRequest","requestCode","requestAdjustLogin","extend_getUrlParams","_urlParams","reduce","b","decodeURIComponent","preRequest","operateUrlParams","adjustLogined","gw_code","origin","encodeURIComponent","projectName","operateCode","_gbglqxList","_gbglqxCodeType","_zjList","_zjCodeType","_syList","cxsyList","_syCodeType","_cxlxList","cxdxlxList","_cxlxCodeType","_zjlxList","_zjlxCodeType","_zzlxList","zzlxList","_zzlxCodeType","setCodeTypeData","dist_artery_ui_default","productionTip","cookie","_preRequestArr","beforeCreateTime","lastTime","vendors","vendorsLen","currentTime","timeDifference","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_6_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_2_node_modules_less_loader_dist_cjs_js_ref_6_3_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_6_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_2_node_modules_less_loader_dist_cjs_js_ref_6_3_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_0f8034aa_lang_less_scoped_true___WEBPACK_IMPORTED_MODULE_0__"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,KACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,OAAAC,UAAAC,eAAAC,KAAAC,EAAAX,IAAAW,EAAAX,IACAK,EAAAO,KAAAD,EAAAX,GAAA,IAEAW,EAAAX,GAAA,EAEA,IAAAD,KAAAG,EACAK,OAAAC,UAAAC,eAAAC,KAAAR,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAJ,KAAAK,MAAAD,EAAAb,OAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAX,EAAAY,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAIA,OAAAD,EAIA,IAAAQ,KAKAhB,GACAiB,IAAA,GAGAZ,KAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,IACAK,EAAAL,EACAgC,GAAA,EACAF,YAUA,OANAhB,EAAAd,GAAAW,KAAAoB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA5B,OAAA+B,eAAAT,EAAAM,GAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,oBAAAa,eAAAC,aACApC,OAAA+B,eAAAT,EAAAa,OAAAC,aAAwDC,MAAA,WAExDrC,OAAA+B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAzC,OAAA0C,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAzC,OAAA+B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA/C,OAAAC,UAAAC,eAAAC,KAAA2C,EAAAC,IAGtD7B,EAAA8B,EAAA,KAEA,IAAAC,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAA5C,KAAAuC,KAAAK,GACAA,EAAA5C,KAAAf,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAJ,MAAA,kBAEAM;;;;;2FCvJAO,EAAAgB,EAAAmB,GAAA,IAAAC,EAAApC,0bAAA,gBAAAqC,KAAAD,GAAA,WAAAE,QAAAD,GAAA,YAAAZ,GAAAzB,EAAAS,EAAA0B,EAAAV,EAAA,kBAAAW,EAAAX,KAAA,CAAAY;;;;;;;;;;;;;;;2FCAArC,EAAAgB,EAAAmB,GAAA,IAAAC,EAAApC,0bAAA,gBAAAqC,KAAAD,GAAA,WAAAE,QAAAD,GAAA,YAAAZ,GAAAzB,EAAAS,EAAA0B,EAAAV,EAAA,kBAAAW,EAAAX,KAAA,CAAAY;;;;;2FCAArC,EAAAgB,EAAAmB,GAAA,IAAAC,EAAApC,waAAA,gBAAAqC,KAAAD,GAAA,WAAAE,QAAAD,GAAA,YAAAZ,GAAAzB,EAAAS,EAAA0B,EAAAV,EAAA,kBAAAW,EAAAX,KAAA,CAAAY;;;;;2FCAArC,EAAAgB,EAAAmB,GAAA,IAAAC,EAAApC,waAAA,gBAAAqC,KAAAD,GAAA,WAAAE,QAAAD,GAAA,YAAAZ,GAAAzB,EAAAS,EAAA0B,EAAAV,EAAA,kBAAAW,EAAAX,KAAA,CAAAY;;;;;oFCaAL,OAAAO,UAAA,SAAAC,GACA,GAAAA,EAAAnE,KAAA,CACA,IAAAoE,KACA,IACAA,EAAA,oBAAA3D,OAAAC,UAAA2D,SAAAzD,KAAAuD,EAAAnE,MAAAsE,KAAAC,MAAAJ,EAAAnE,SACS,MAAAwE,GACTJ,GAAqBK,IAAA,SACrBd,OAAAe,QAAAC,KAAA,oDACAhB,OAAAe,QAAAE,IAAAT,EAAAnE,MAEA,OAAAoE,EAAAK,KACA,oBACAd,OAAAe,QAAAE,IAAA,cACA,MACA,qBACAjB,OAAAe,QAAAE,IAAA;;;;;2FC5BAjD,EAAAgB,EAAAmB,GAAA,IAAAC,EAAApC,0bAAA,gBAAAqC,KAAAD,GAAA,WAAAE,QAAAD,GAAA,YAAAZ,GAAAzB,EAAAS,EAAA0B,EAAAV,EAAA,kBAAAW,EAAAX,KAAA,CAAAY;;;;;2FCAArC,EAAAgB,EAAAmB,GAAA,IAAAC,EAAApC,0bAAA,gBAAAqC,KAAAD,GAAA,WAAAE,QAAAD,GAAA,YAAAZ,GAAAzB,EAAAS,EAAA0B,EAAAV,EAAA,kBAAAW,EAAAX,KAAA,CAAAY;;;;;;;;;;;;;;;;;;;;2FCAArC,EAAAgB,EAAAmB,GAAA,IAAAC,EAAApC,0bAAA,gBAAAqC,KAAAD,GAAA,WAAAE,QAAAD,GAAA,YAAAZ,GAAAzB,EAAAS,EAAA0B,EAAAV,EAAA,kBAAAW,EAAAX,KAAA,CAAAY;;;;;;;;;;2FCAArC,EAAAgB,EAAAmB,GAAA,IAAAe,EAAAlD,gcAAA,gBAAAqC,KAAAa,GAAA,WAAAZ,QAAAD,GAAA,YAAAZ,GAAAzB,EAAAS,EAAA0B,EAAAV,EAAA,kBAAAyB,EAAAzB,KAAA,CAAAY;;;;;2FCAArC,EAAAgB,EAAAmB,GAAA,IAAAC,EAAApC,4cAAA,gBAAAqC,KAAAD,GAAA,WAAAE,QAAAD,GAAA,YAAAZ,GAAAzB,EAAAS,EAAA0B,EAAAV,EAAA,kBAAAW,EAAAX,KAAA,CAAAY;;;;;;;;;;;;;;;;;;;;;;;;;2FCAArC,EAAAgB,EAAAmB,GAAA,IAAAC,EAAApC,sZAAA,gBAAAqC,KAAAD,GAAA,WAAAE,QAAAD,GAAA,YAAAZ,GAAAzB,EAAAS,EAAA0B,EAAAV,EAAA,kBAAAW,EAAAX,KAAA,CAAAY;;;;;;;;;;2FCAArC,EAAAgB,EAAAmB,GAAA,IAAAC,EAAApC,oYAAA,gBAAAqC,KAAAD,GAAA,WAAAE,QAAAD,GAAA,YAAAZ,GAAAzB,EAAAS,EAAA0B,EAAAV,EAAA,kBAAAW,EAAAX,KAAA,CAAAY;;;;;2FCAArC,EAAAgB,EAAAmB,GAAA,IAAAC,EAAApC,waAAA,gBAAAqC,KAAAD,GAAA,WAAAE,QAAAD,GAAA,YAAAZ,GAAAzB,EAAAS,EAAA0B,EAAAV,EAAA,kBAAAW,EAAAX,KAAA,CAAAY;;;;;;;;;;2FCAArC,EAAAgB,EAAAmB,GAAA,IAAAC,EAAApC,waAAA,gBAAAqC,KAAAD,GAAA,WAAAE,QAAAD,GAAA,YAAAZ,GAAAzB,EAAAS,EAAA0B,EAAAV,EAAA,kBAAAW,EAAAX,KAAA,CAAAY;;;;;;;;;;2FCAArC,EAAAgB,EAAAmB,GAAA,IAAAC,EAAApC,4cAAA,gBAAAqC,KAAAD,GAAA,WAAAE,QAAAD,GAAA,YAAAZ,GAAAzB,EAAAS,EAAA0B,EAAAV,EAAA,kBAAAW,EAAAX,KAAA,CAAAY;;;;;;;;;;;;;;oMCAmIc,GCQnIzC,KAAA,MACA0C,SACAC,UAAAC,GACAC,KAAAC,QAAArE,MAAAmE,oCCQeG,EAXC3E,OAAA4E,EAAA,QAAA5E,CACdqE,ECTF,WAA0B,IAAaQ,EAAbJ,KAAaK,eAA0BC,EAAvCN,KAAuCO,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,OAAOC,GAAA,SAAYH,EAAA,wBDY7H,EACA,KACA,KACA,0BEfwEI,GCUxEvD,KAAA,QACArC,KAAA,MACgB6F,QAAA,WCMDC,EAXCrF,OAAA4E,EAAA,QAAA5E,CACdmF,ECRQ,WAAgB,IAAaN,EAAbJ,KAAaK,eAA0BC,EAAvCN,KAAuCO,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBO,YAAA,aAAuBP,EAAA,MAAvGN,KAAuGc,GAAvGd,KAAuGe,GAAvGf,KAAuGW,YAAvGX,KAAuGc,GAAA,KAAAR,EAAA,KAAvGN,KAAuGc,GAAA,2BDWjI,EACA,KACA,KACA,cEdwEE,GCUxE7D,KAAA,QACArC,KAAA,MACgB6F,QAAA,UAEhBd,SACAC,YAAAa,GACAX,KAAAW,aCEeM,EAXC1F,OAAA4E,EAAA,QAAA5E,CACdyF,ECRQ,WAAgB,IAAAE,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBO,YAAA,aAAuBP,EAAA,MAAAY,EAAAJ,GAAAI,EAAAH,GAAAG,EAAAP,YAAAO,EAAAJ,GAAA,KAAAR,EAAA,UAAkEa,IAAIC,MAAA,SAAAC,GAAyB,OAAAH,EAAAI,YAAA,UAA+BJ,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAR,EAAA,KAAAY,EAAAJ,GAAA,qBDW/P,EACA,KACA,KACA,cEFe,ICZyDS,GDaxEpE,KAAA,QAEAqE,SE2BA3B,SAEAC,gBAAA2B,GAEA,MAAAC,EAAAjD,OAAAkD,SAAAC,YAAAC,iBACA,WAAAC,QAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAjC,KAAAkC,QACAC,EAAA,uBACAC,EAAA3D,OAAA4D,SAAAC,IAAAC,UACAC,EAAAxC,KAAAyC,UACAvD,GACApC,OAAA,QACA4F,MAAAjB,EAAAiB,MACAC,IAAAlB,EAAAkB,KAGAlE,OAAAkD,SAAAiB,kBAAAX,EAAAE,EAAAC,EAAAI,EAAAtD,GAEAT,OAAAkD,SAAAkB,MACAC,OAAAV,EACAE,IAAAE,EAGAO,OAAA7D,EAEA8D,aAAA,SACiBC,KAAAnI,IACjB,MAAAoI,EAAApI,OACA2D,OAAAkD,SAAAC,YAAAuB,WAA2DhB,uBAAMT,GAEjEjD,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAnB,EAAAmB,IACiBpI,IACjB2D,OAAAkD,SAAAC,YAAAuB,WAA2DhB,sBAAMT,GACjE,MAAAwB,EAAApI,OAEA2D,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAlB,EAAAlH,WF/DAuI,OAAYC,MAAOC,KAAA,OACnBzI,KAAA,MAEA6F,QAAA,QACAuB,QAAAzD,OAAA4D,SAAAC,IAAAJ,QACAO,UAAAhE,OAAA4D,SAAAC,QAAAgB,KAAAE,MACA1I,UAGA+E,SAEAC,eACA,WAAAgC,QAAAC,IAEA,MAAAN,GACAiB,MAAA,KACAC,IAtBA,IAyBA3C,KAAAyD,gBAAAhC,GAAAwB,KAAAnI,IACAkF,KAAAlF,OACAiH,UAKAjC,aG1CwE4D,GCcxEvG,KAAA,YACAwG,YACQC,UAAAhD,EACAiD,UAAA5C,EACA6C,UCXQvI,OAAA4E,EAAA,QAAA5E,CACdgG,ECRQ,WAAgB,IAAAL,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBO,YAAA,aAAuBP,EAAA,MAAAY,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,KAAAR,EAAA,KAAkDE,OAAOC,GAAA,SAAYS,EAAAJ,GAAAI,EAAAH,GAAAG,EAAAoC,SAAApC,EAAAJ,GAAA,KAAAR,EAAA,KAAAY,EAAA6C,GAAA7C,EAAA,cAAA8C,GAAkF,OAAA1D,EAAA,MAAgBpC,IAAA8F,EAAAvD,GAAAwD,UAAsBC,YAAAhD,EAAAH,GAAAiD,EAAA7G,WAAmC,GAAA+D,EAAAJ,GAAA,KAAAR,EAAA,UAA8Ba,IAAIC,MAAAF,EAAAiD,gBAA0BjD,EAAAJ,GAAA,oBDW7Z,EACA,KACA,KACA,eDMAhG,KAAA,MACgBqC,KAAA,iBAEhB0C,YGLeuE,EAXC7I,OAAA4E,EAAA,QAAA5E,CACdmI,ECRQ,WAAgB,IAAAxC,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBO,YAAA,iBAA2BP,EAAA,MAAAY,EAAAJ,GAAAI,EAAAH,GAAAG,EAAA/D,SAAA+D,EAAAJ,GAAA,KAAAR,EAAA,KAAAY,EAAAJ,GAAA,+BAAAI,EAAAJ,GAAA,KAAAR,EAAA,KAAAY,EAAAJ,GAAA,iCAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAAkLO,YAAA,cAAwBP,EAAA,aAAAY,EAAAJ,GAAA,KAAAR,EAAA,aAAAY,EAAAJ,GAAA,KAAAR,EAAA,wBDW/U,EACA,KACA,KACA,cEPe+D,GACfxE,SAEAC,aACAE,KAAAsE,eAGAxE,gBACAE,KAAAuE,YAAA,MAEAzE,cACAE,KAAAuE,YAAA,IAAAC,KAGA1E,UAAA5B,EAAApD,GACAkF,KAAAuE,YAAAE,IAAAvG,EAAApD,IAGAgF,UAAA5B,GACA,OAAA8B,KAAAuE,YAAA/G,IAAAU,IAGA4B,eACA,OAAAE,KAAAuE,aAGAzE,aAAA5B,GACA,OAAA8B,KAAAuE,YAAAG,OAAAxG,MCIe,ICtCyDyG,GCaxEnD,SCEAA,SCPA3B,SAEAC,eAAA8E,GAEAA,EAAAC,QAAAD,EAAAC,OAEAD,EAAAC,OACA7E,KAAA8E,qBAAAF,GAEA5E,KAAA+E,uBAAAH,IASA9E,qBAAA8E,GAEA5E,KAAAgF,MAAA,SAAAJ,IAQA9E,uBAAA8E,GAEA5E,KAAAgF,MAAA,WAAAJ,ODtBA9J,KAAA,MAGAmK,kBAEAC,gBAGArF,SAEAC,kBAAAqF,GACAnF,KAAAiF,eAAAE,EACA,IAAAnF,KAAAiF,eAAA3J,OACA0E,KAAAoF,UAAAJ,MAAA,8BAEAhF,KAAAoF,UAAAJ,MAAA,+BAIAlF,YAAAqF,GAEA,MAAAE,EAAArF,KAAAsF,eAAAH,GAEAnF,KAAAuF,kBAAAF,GAEArF,KAAAwF,kBAAAH,IAGAvF,UAAAkE,EAAAyB,GAEAzF,KAAA0F,kBAAA1B,EAAAhE,QAEAA,KAAA2F,iBAAA3B,OAAA4B,UAEA5F,KAAA6F,cAAA7B,GAGAA,EAAA8B,MACA9F,KAAA+F,eAAA/B,GAGAA,EAAAgC,UAEAhG,KAAAiG,WAAAjC,EAAAyB,GAGAzF,KAAAgF,MAAA,QAAAhB,KAIAlE,cAAAkE,GAEAhE,KAAAkF,WAAAlB,EAEAhE,KAAAgF,MAAA,SAAAhB,IAQAlE,kBAAAqF,GAEAnF,KAAAkG,aAEAf,EAAAgB,QAAAnC,IAEAhE,KAAAoG,gBAAApC,EAAA,SAUAlE,gBAAA8E,EAAAyB,GAEArG,KAAAsG,aAAA1B,EAAAyB,GAEAzB,EAAA5E,KAAAuG,WAAAjL,QAEAsJ,EAAA5E,KAAAuG,WAAAJ,QAAAK,IAEAxG,KAAAoG,gBAAAI,EAAA5B,KAIA5E,KAAAyG,UAAA7B,EAAA5E,KAAA0G,MAAA9B,IAGA9E,aAAA8E,EAAAyB,GAEAM,MAAAC,QAAAhC,EAAA5E,KAAAuG,cACA3B,EAAA5E,KAAAuG,eAGA3B,EAAAiC,SAAA,EAEA7G,KAAA8G,oBAAAlC,EAAAyB,EAAArG,QAEA4E,EAAAoB,UAAA,GAGApB,EAAAmC,eAAA/G,KAAAgH,sBAAApC,GAEAA,EAAAkB,KAAAlB,EAAA5E,KAAAuG,WAAAjL,OAAA,EAEAsJ,EAAAC,OAAA,kBAAAD,EAAA,QAAAA,EAAAC,OAEAD,EAAAmC,iBAIAnC,EAAAqC,qBDvHsB5C,GGLtB7C,QAAa6C,GACbxE,SAEAC,mBAEAE,KAAAkH,qBAEAlH,KAAAmH,oBAEAnH,KAAAoH,cAAA,IAAA5C,KAGA1E,iBAAAlC,GACAoC,KAAAqH,cAAAzJ,GAGAkC,gBAAAlC,GACAoC,KAAAsH,aAAA1J,GAGAkC,oBAEAE,KAAAoH,cAAAjB,QAAAnC,IACAA,IAEAA,EAAA6C,SAAA,EAEA7C,EAAAvI,eAAA,mBACAuI,EAAAiD,qBAKAjH,KAAAoH,cAAAG,QAEAvH,KAAAkH,qBAEAlH,KAAAmH,qBAGArH,kBAAA0H,EAAAC,GAAA,GAEA,MAAAC,EAAA1H,KAAA2H,oBAAAH,IAEAE,EAAAvI,aAAAa,KAAAqH,cAAAlI,YAAAsI,KAEAzH,KAAA4H,oBAEA5H,KAAAkH,iBAAAQ,GAEA1H,KAAA6H,oBAAAL,GAEAxH,KAAA8H,eAIAhI,oBAAA0H,GAEAxH,KAAAqH,eAEArH,KAAA+H,mBAGA,IAAAL,EAAAF,EASA,OAPAb,MAAAC,QAAAc,KACAA,EAAA,iBAAAA,UAGAf,MAAAC,QAAAc,MAAApM,OAAA,oBAAAoM,EAAA,KACAA,IAAAM,IAAAhE,KAAAhE,KAAA0G,QAEAgB,GAIA5H,oBAAA0H,GAQAA,EAAArB,QAAAnC,IAEA,MAAAiE,EAAAjI,KAAAkI,UAAAlE,EAAAhE,KAAA0G,OAEAuB,IACAA,EAAApB,SAAA,EAEAoB,EAAAxM,eAAA,mBAEAuI,EAAAvI,eAAA,aACAwM,EAAAhB,cAAAkB,QAAAnE,EAAAmE,SAGAnE,EAAAvI,eAAA,eACAwM,EAAAhB,cAAAmB,UAAApE,EAAAoE,WAGApE,EAAAvI,eAAA,aACAwM,EAAAhB,cAAAoB,QAAArE,EAAAqE,SAEArE,EAAAvI,eAAA,UACAwM,EAAAhB,cAAA1D,KAAAS,EAAAT,OAIAvD,KAAAsI,gBAAAL,GAAA,OAKAnI,yBAAAkE,GAEA,MAAAuE,EAAAvI,KAAAkI,UAAAlE,EAAAhE,KAAAwI,SAAAxI,KAAAiF,eAEAjB,EAAA6C,QAEA7G,KAAAsI,gBAAAtE,GAGAhE,KAAAyI,mBAAAzE,GAGAuE,EAAAvI,KAAAuG,WAAA/J,OAAA,MAGAsD,WAAAkE,EAAAyB,KAGAzB,EAAA+C,gBAAA/G,KAAA0I,eAAA1E,EAAAyB,EAAAzF,OAAA,aAAAgE,EAAAvD,IAAA,aAAAuD,EAAAvD,MAEAuD,EAAA6C,SAAA7C,EAAA6C,QAEA7C,EAAA6C,QAEA7G,KAAAsI,gBAAAtE,GAIAhE,KAAAyI,mBAAAzE,GAGAyB,EAAAzF,KAAAuG,WAAA/J,OAAA,OAIAsD,gBAAAkE,EAAA2E,GAAA,GAEA3I,KAAAoH,cAAA3C,IAAAT,EAAAhE,KAAA0G,MAAA1C,GAEA2E,GAEA3I,KAAA8H,cAIAhI,mBAAAkE,EAAA2E,GAAA,GAEA3I,KAAAoH,cAAA1C,OAAAV,EAAAhE,KAAA0G,OAEAiC,GAEA3I,KAAA8H,cAIAhI,yBAEA,MAAAuH,KAEAC,KAEAtH,KAAAoH,cAAAjB,QAAA,CAAAnC,EAAA9F,KAEAmJ,EAAAzL,KAAAsC,GAEAoJ,EAAA1L,KAAAoI,KAGAhE,KAAAkH,iBAAAG,GAEArH,KAAAmH,gBAAAG,IAGAxH,aAEAE,KAAA4I,yBAEA5I,KAAAgF,MAAA,QAAAhF,KAAAqH,eAEArH,KAAAgF,MAAA,SAAAhF,KAAAsH,kBLjKAxM,KAAA,MAGA+N,gBAGAhJ,SAEAC,sBAAAgJ,GACA9I,KAAA+I,mBAAAD,GAGAhJ,eAAAqF,GACA,MAAAE,KAEArF,KAAAgJ,cAAAC,SAAAjJ,KAAA+I,mBAAAG,SAAA,KAEA,MAAAC,EAAA5N,OAAA6N,KAAApJ,KAAAqJ,sBAEAlE,EAAAgB,QAAAnC,IAGA,QAAAmF,EAAApK,QAAAiF,EAAAhE,KAAA0G,OAAA,CAEA,MAAA4C,KAEA/N,OAAA6N,KAAApF,GAAAmC,QAAAjI,IAEAoL,EAAApL,GADA,aAAAA,KAGA8F,EAAA9F,KAIAmH,EAAAzJ,KAAA0N,GAEA,MAAAC,EAAAvJ,KAAAqJ,qBAAArF,EAAAhE,KAAA0G,OAEA6C,EAAAjO,QAAA0I,EAAAwF,SAAAlO,QAEA0I,EAAAwF,SAAArD,QAAAK,IAEA,QAAA+C,EAAAxK,QAAAyH,EAAAxG,KAAA0G,OAAA,CAEA,MAAA+C,KAEAlO,OAAA6N,KAAA5C,GAAAL,QAAAjI,IAEAuL,EAAAvL,GADA,aAAAA,KAGAsI,EAAAtI,KAIAoL,EAAAE,SAAA5N,KAAA6N,SAOA,QAAArO,EAAAiK,EAAA/J,OAAA,EAA8CF,GAAA,EAAQA,IACtD,IAAAiK,EAAAjK,GAAA,SAAAE,QACA+J,EAAA7I,OAAApB,EAAA,GAGA,OAAAiK,GAGAvF,cAAA4H,EAAA,GAGA,OAAAA,GAEA,KAzGA,EA2GA1H,KAAA0J,4BAAA1J,KAAA+I,mBAAAY,eACA,MAEA,KA7GA,EA+GA3J,KAAA4J,4BAAA5J,KAAA+I,mBAAAY,eACA,MAEA,KAjHA,EAoHA,MAEA,QAEA3J,KAAA6J,4BAAA7J,KAAA+I,mBAAAY,iBAMA7J,kBAAAgK,GAEA9J,KAAAqJ,qBAAAS,GAIAhK,4BAAA4H,GAWA,IAAAqC,KAEA,OAAAd,SAAAvB,EAAA,KAIA,KA9IA,GA+IAqC,GAGAC,UAAA,qCAGAC,UAAA,yBAGAC,UAAA,yBAGAC,UAAA,qCAGAC,UAAA,qCAGAC,UAAA,qCAGAC,UAAA,qCAGAC,UAAA,qCAGAC,UAAA,yBAGAC,UAAA,aAEAC,UAAA,qLAGAC,UAAA,cAEA,MAIA,KAjLA,GA2MA,KA7MA,GAsOA,KAlOA,GAmOAZ,GAEAQ,UAAA,qCAEAP,UAAA,qCAEAC,UAAA,yBAEAO,UAAA,yBAEAL,UAAA,qCAEAD,UAAA,yBAEAI,UAAA,qCAEAF,UAAA,qCAEAC,UAAA,sCAEA,MAGA,KAzPA,GA0PAN,GAEAC,UAAA,qCAEAC,UAAA,yBAEAG,UAAA,qCAEAC,UAAA,aAEAG,UAAA,0BAEA,MAGA,KAjQA,GAkQAT,GAEAG,UAAA,yBAEAC,UAAA,aAGAE,UAAA,yBAEAG,UAAA,0BAEA,MAGA,KA9RA,GA+RAT,GAEAC,UAAA,qCAEAE,UAAA,yBAEAC,UAAA,yBAEAF,UAAA,yBAGAI,UAAA,qCAEAC,UAAA,qCAEAC,UAAA,qCAEAC,UAAA,0BAEA,MAEA,KA7SA,GA8SAT,GAEAC,UAAA,qCAEAE,UAAA,yBAEAC,UAAA,yBAGAE,UAAA,qCAEAC,UAAA,qCAEAC,UAAA,qCAEAC,UAAA,0BAEA,MAEA,KAhUA,GAiUAT,GAEAC,UAAA,qCAEAE,UAAA,yBAEAC,UAAA,yBAGAE,UAAA,qCAEAE,UAAA,qCAEAC,UAAA,0BAEA,MAEA,KAjVA,GAkVAT,GAEAC,UAAA,qCAEAE,UAAA,yBAEAC,UAAA,yBAGAE,UAAA,qCAEAC,UAAA,qCAEAC,UAAA,qCAEAC,UAAA,0BAEA,MAEA,KApWA,GAqWAT,GAEAC,UAAA,qCAEAE,UAAA,yBAGAG,UAAA,aAEAG,UAAA,0BAEA,MAEA,KA/XA,GA+YA,KA9YA,GA+YAT,GAEAG,UAAA,yBAEAC,UAAA,aAGAE,UAAA,aAEAC,UAAA,qCAEAE,UAAA,0BAEA,MAEA,KA7ZA,GA8ZAT,GAEAG,UAAA,yBAEAC,UAAA,aAEAC,UAAA,qCAEAI,UAAA,0BAEA,MAEA,KA9ZA,GA+ZAT,GAGAM,UAAA,cAEA,MAEA,KA/aA,GA6bA,KA3bA,GA4bAN,GAEAI,UAAA,aAGAE,UAAA,aAEAE,UAAA,qCAEAC,UAAA,0BAEA,MAEA,KAjcA,GAkcAT,GAEAK,UAAA,qCAGAC,UAAA,yBAEAC,UAAA,sCAEA,MAEA,KA5cA,GA6cAP,GAEAO,UAAA,sCAQAtK,KAAA4K,kBAAAb,IAIAjK,4BAAA4H,GASA,IAAAqC,KAEA,OAAAd,SAAAvB,EAAA,KAIA,KApgBA,EAqgBAqC,GAEAC,UAAA,qCAEAC,UAAA,yBAEAE,UAAA,qCAEAD,UAAA,yBAEAI,UAAA,qCAEAG,UAAA,yBAEAL,UAAA,qCAEAC,UAAA,sCAEA,MAIA,KA1hBA,EA2hBAN,GAEAC,UAAA,qCAEAC,UAAA,yBAEAE,UAAA,qCAEAD,UAAA,yBAEAI,UAAA,qCAEAG,UAAA,aAEAL,UAAA,qCAEAC,UAAA,sCAEA,MAGA,KA/iBA,EAgjBAN,GAEAK,UAAA,cAEA,MACA,KApjBA,EAqjBAL,GAEAI,UAAA,0BAEA,MAEA,KA1jBA,EA2jBAJ,GAEAC,UAAA,qCAEAE,UAAA,yBAEAE,UAAA,qCAGAC,UAAA,qCAGAC,UAAA,sCAQAtK,KAAA4K,kBAAAb,IAIAjK,4BAAA4H,GAUA,IAAAqC,KAEA,OAAAd,SAAAvB,EAAA,KAGA,KAnmBA,EAqmBAqC,GAEAC,UAAA,qCAEAG,UAAA,sCAEA,MAGA,KA7mBA,EA8mBAJ,GAEAC,UAAA,aAEAC,UAAA,yBAEAU,UAAA,cAEA,MAGA,KAxnBA,EAynBAZ,GAEAM,UAAA,cAEA,MAGA,KA/nBA,EAgoBAN,GAEAM,UAAA,cAEA,MAGA,KAtoBA,EAuoBAN,GAEAM,UAAA,cAEA,MAGA,KA7oBA,EA8oBAN,GAEAI,UAAA,0BAEA,MAGA,KAppBA,GA4pBA,KA3pBA,GA4pBAJ,GAEAI,UAAA,cAEA,MAGA,KAlqBA,GAmqBAJ,GAEAY,UAAA,cAaA3K,KAAA4K,kBAAAb,OExrBA1G,OAEAyF,cACAvF,KAAAhI,OACAsP,QAAA,MAGA3B,SAAA,EAEAS,cAAA,KAKAnB,OACAjF,KAAAuH,OACAD,QAAA,YAGAnE,MACAnD,KAAAuH,OACAD,QAAA,MAGAE,OACAxH,KAAAuH,OACAD,QAAA,QAGAtE,WACAhD,KAAAuH,OACAD,QAAA,YAGA1F,UACA5B,KAAAoD,MACAkE,QAAA,QAMAG,iBAA0BzH,KAAAoD,OAG1BjB,mBACAnC,KAAA0H,SACAJ,QAAA,CAAA7G,EAAAkH,KAEA,GAIAvF,kBACApC,KAAA0H,SACAJ,QAAA7G,KAEA2C,MAAAC,QAAA5C,EAAAwF,WAAAxF,EAAAwF,SAAAlO,SAIA0L,uBACAzD,KAAA0H,SACAnL,QAAAkE,GAEA,MAAAmH,IAAAxE,MAAAC,QAAA5C,EAAAwF,WAAAxF,EAAAwF,SAAAlO,OAAA,GAkBA8P,GAAA,6GAAA9H,KAAAU,EAAAvD,IAIA4K,GAAA,gBAAA/H,KAAAU,EAAAsH,UAaAC,GAAA,gBAAAjI,KAAAU,EAAAsH,UAGAE,GAAA,gBAAAlI,KAAAU,EAAAsH,WAAA,mBAAAhI,KAAAU,EAAAvD,IAIAgL,GAAA,mBAAAnI,KAAAU,EAAAvD,IAIAiL,GAAA,mBAAApI,KAAAU,EAAAvD,IAOAkL,GAAA,gBAAArI,KAAAU,EAAAsH,UAEA,OAAAH,GAAAC,GAAAC,GAAAE,GAAAC,GAAAC,GAAAC,GAAAC,IAIA7E,qBACAvD,KAAA0H,SAEAJ,QAAA,CAAAjG,EAAAyB,IAEAzB,EAAA4E,UAAA,IAAA5E,EAAA4E,SAAAlO,QAIAoN,gBACAnF,KAAA0H,SAEAJ,QAAA,CAAAjG,EAAAyB,EAAA6E,KAIAtG,EAAAnE,IAFA,KAqBAX,UAEAE,KAAA4L,QAEA9L,UAEAE,KAAAgF,MAAA,QAAAhF,OAEAH,SAEAC,OAEAE,KAAA+H,mBAEA/H,KAAA6L,OAAA7L,KAAAmF,SAAAnF,KAAA8I,aAAA,KAEAnC,MAAAC,QAAA5G,KAAAgL,kBAAAhL,KAAAgL,gBAAA1P,QAEA0E,KAAA8L,kBAAA9L,KAAAgL,oBAKAlL,eAAAiM,GAEA/L,KAAAgM,YAAAD,GAGAjM,iBAEAE,KAAAgM,YAAAH,OAAA,cAGA/L,OAAAqF,EAAA2D,EAAAmD,GAEAjM,KAAA4H,oBAEA5H,KAAA6F,kBAEA7F,KAAAkM,sBAAApD,GAAA9I,KAAA8I,cAEA9I,KAAAmM,YAAAhH,GAEA,mBAAA8G,GACAA,KAIAnM,eAAAkE,GAGA,sBAAAV,KAAAU,EAAAhE,KAAA0G,UI7Me0F,aAXC7Q,OAAA4E,EAAA,QAAA5E,CACdoJ,ECTQ,WAAgB,IAAAzD,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBO,YAAA,uBAAiCP,EAAA,uBAA4BE,OAAO6L,MAAA,GAAalL,IAAKmL,MAAApL,EAAAqL,kBAA4BjM,EAAA,MAAWO,YAAA,mBAA8BK,EAAA6C,GAAA7C,EAAA,wBAAA8C,EAAAR,GAAkD,OAAAlD,EAAA,MAAgBpC,IAAA8F,EAAA9C,EAAAwF,MAAA7F,YAAA,UAAAM,IAA6CqL,UAAA,SAAAnL,GAA6B,OAAAH,EAAAuL,UAAAzI,EAAAR,OAAoClD,EAAA,MAAWoM,aAAavP,KAAA,OAAAwP,QAAA,kBAAA/O,MAAAoG,EAAA9C,EAAA6J,OAAA6B,WAAA,cAAAC,WAAkGC,UAAA,KAAiBjM,YAAA,wBAAAkM,OAChkBlI,OAAAb,EAAAa,OACAiB,KAAA9B,EAAA8B,KACAkH,OAAAhJ,EAAA9C,EAAAwF,QAAAxF,EAAAgE,WAAAhE,EAAAwF,MACAuG,cAAAjJ,EAAA+C,gBACqBvG,OAAQ0M,gBAAAhM,EAAAiM,eAAAnJ,MAA0C1D,EAAA,QAAaO,YAAA,UAAAoD,UAAgCC,YAAAhD,EAAAH,GAAAiD,EAAA9C,EAAA6J,WAAuC7J,EAAAJ,GAAA,KAAAkD,EAAA,SAAA1D,EAAA,QAAyCO,YAAA,cAAAkM,OAAiClG,QAAA7C,EAAA6C,WAAuB3F,EAAAJ,GAAA,kBAAAI,EAAAkM,OAAAlM,EAAAJ,GAAA,KAAAR,EAAA,MAA2DoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,MAAAoG,EAAA,OAAA4I,WAAA,gBAA0E/L,YAAA,mBAAgCK,EAAA6C,GAAAC,EAAA9C,EAAAqF,WAAA,SAAA8G,EAAA7J,GAAwD,OAAAlD,EAAA,MAAgBpC,IAAAmP,EAAAnM,EAAAwF,MAAAlD,EAAA3C,YAAA,UAAAM,IAA0DqL,UAAA,SAAAnL,GAAsD,OAAzBA,EAAAiM,kBAAyBpM,EAAAuL,UAAAY,EAAArJ,OAAwC1D,EAAA,MAAWoM,aAAavP,KAAA,OAAAwP,QAAA,kBAAA/O,MAAAyP,EAAAnM,EAAA6J,OAAA6B,WAAA,mBAAAC,WAA4GC,UAAA,KAAiBjM,YAAA,wBAAAkM,OACnyBlI,OAAAwI,EAAAxI,OACAiB,KAAAuH,EAAAvH,KACAkH,OAAAK,EAAAnM,EAAAwF,QAAAxF,EAAAgE,WAAAhE,EAAAwF,MACAuG,cAAAI,EAAAtG,gBAC6BvG,OAAQ0M,gBAAAhM,EAAAiM,eAAAE,MAA+C/M,EAAA,QAAaO,YAAA,UAAAoD,UAAgCC,YAAAhD,EAAAH,GAAAsM,EAAAnM,EAAA6J,WAA4C7J,EAAAJ,GAAA,KAAAuM,EAAA,SAAA/M,EAAA,QAA8CO,YAAA,cAAAkM,OAAiClG,QAAAwG,EAAAxG,WAA4B3F,EAAAJ,GAAA,kBAAAI,EAAAkM,WAAwC,OAAO,cDEvU,EACA,KACA,KACA,eECe,IChByDG,GDiBxElK,OAEA+E,WACA7E,MAAAiK,OAAA1C,QACAD,QAAA,IAGAxC,SACA9E,MAAAiK,OAAA1C,QACAD,QAAA,IAGA4C,YACAlK,KAAAuH,OACAD,QAAA,QAGA6C,kBACAnK,KAAAuH,OACAD,QAAA,UAGA8C,UACApK,KAAAuH,OACAD,QAAA,KAGA+C,gBACArK,KAAAuH,OACAD,QAAA,UAGAgD,eACAtK,KAAAhI,OACAsP,QAAA,UAOAiD,6BACAvK,KAAAuH,OACAD,QAAA,iBAGAkD,aACAxK,KAAA0H,SACAnL,QAAAL,GACAhB,OAAAuP,OAAArN,QAAAsN,QAAAxO,KAIAyO,kBACA3K,KAAAiK,OACA3C,QAAA,GAGAsD,aACA5K,KAAA6K,QACAvD,SAAA,IAGA/P,KAAA,MAGAuT,iBAAA,GAEAC,eAAA,KAGAC,OAEAzO,iBAAA0O,GACAxO,KAAAyO,gBAAAD,IAGA1O,eAAA0O,GACAxO,KAAA0O,cAAAF,KAGA1O,UAEAE,KAAA4L,QAEA9L,UAEAE,KAAAgF,MAAA,QAAAhF,OAEAH,SAEAC,OACAE,KAAA6L,OAAA7L,KAAAoI,UAAApI,KAAAqI,UAGAvI,OAAAsI,EAAAC,GAEArI,KAAAqO,iBAAAjG,EAEApI,KAAAsO,eAAAjG,GAGAvI,gBAAA6O,GACA,oBAAAA,MAEA3O,KAAAmO,YAAA,CAEA,IAAAS,EAAA5O,KAAA6O,aAAAF,GAEAC,IAAAE,UAEA,IAAAC,EAAA/O,KAAAsO,eACA,KAAAS,IAEA,iBAAAA,IAGAA,GAFAA,EAAA/O,KAAA6O,aAAAE,IAEAD,WAGAF,EAAAG,IAEA/O,KAAAsO,eAAAM,EA7HA,MA6HA5O,KAAAkO,iBAEAlO,KAAAgP,cAAA,eAUAhP,KAAA2I,aAGA7I,cAAA6O,GACA,oBAAAA,MAEA3O,KAAAmO,YAAA,CAEA,IAAAY,EAAA/O,KAAA6O,aAAAF,GAEAI,IAAAD,UAEA,IAAAF,EAAA5O,KAAAqO,iBACA,KAAAO,IAEA,iBAAAA,IAGAA,GAFAA,EAAA5O,KAAA6O,aAAAD,IAEAE,WAGAF,EAAAG,IAEA/O,KAAAqO,iBAAAU,EAhKA,MAgKA/O,KAAAkO,iBAEAlO,KAAAgP,cAAA,aAUAhP,KAAA2I,aAIA7I,cAAAoJ,GACAlJ,KAAAgF,MAAA,OAAAkE,GAEA,mBAAAlJ,KAAA+N,aACA/N,KAAA+N,YAAA/N,KAAA8N,8BAIAhO,YAEA,iBAAAE,KAAAqO,kBACArO,KAAAgF,MAAA,SAAAhF,KAAAqO,mBAAArO,KAAAmO,aAAAnO,KAAAsO,iBAKAxO,aAAAmP,GAEA,MAAAC,EAAAD,EAAAE,MAAA,KAEAC,EAAAF,EAAA,GAAAC,MAAA,KAEAE,EAAA,IAAAC,KAEAD,EAAAE,eAEAH,EAAA,IAEAA,EAAA,GAAAA,EAAA,QAEAA,EAlNW,GAkNiBA,EAlNjB,GAkNgC,GAE3C,MAAAI,EAAAN,EAAA5T,OAEA,GAAAkU,EAAA,GAEA,MAAAC,EAAAP,EAAAM,EAAA,GAAAL,MAAA,KAEAE,EAAAK,aAEAD,EAAA,GAAAA,EAAA,MA1NW,EA4NXA,EAAA,GAAAA,EAAA,KAEAA,EAhOW,GAgOsBA,EAhOtB,GAgOsC,EAEjDA,EAjOW,GAiOsBA,EAjOtB,GAiOsC,GAGjD,OAAAJ,KE5NeM,aAXCpU,OAAA4E,EAAA,QAAA5E,CACdgS,ECTQ,WAAgB,IAAArM,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBO,YAAA,kBAA4BP,EAAA,SAAcO,YAAA,gBAAAoD,UAAsC2L,UAAA1O,EAAAH,GAAAG,EAAAuM,eAAoCvM,EAAAJ,GAAA,KAAAR,EAAA,OAAwBO,YAAA,uBAAiCP,EAAA,mBAAwBE,OAAO+C,KAAA,OAAAsM,QAAA3O,EAAA2M,cAAAiC,YAAA5O,EAAAwM,iBAAAqC,UAAA,GAA6F5O,IAAK6O,OAAA9O,EAAAuN,iBAA6BwB,OAAQrS,MAAAsD,EAAA,iBAAA+K,SAAA,SAAAiE,GAAsDhP,EAAAmN,iBAAA6B,GAAyBtD,WAAA,uBAAgC,GAAA1L,EAAAJ,GAAA,KAAAR,EAAA,OAA4BoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,MAAAsD,EAAA,YAAA0L,WAAA,gBAA8E/L,YAAA,oBAAgCP,EAAA,SAAcO,YAAA,gBAAAoD,UAAsCC,YAAAhD,EAAAH,GAAAG,EAAAyM,aAAoCzM,EAAAJ,GAAA,KAAAR,EAAA,OAAwBO,YAAA,uBAAiCP,EAAA,mBAAwBE,OAAO+C,KAAA,OAAAsM,QAAA3O,EAAA2M,cAAAiC,YAAA5O,EAAA0M,eAAAmC,UAAA,GAA2F5O,IAAK6O,OAAA9O,EAAAwN,eAA2BuB,OAAQrS,MAAAsD,EAAA,eAAA+K,SAAA,SAAAiE,GAAoDhP,EAAAoN,eAAA4B,GAAuBtD,WAAA,qBAA8B,YDY/lC,EACA,KACA,KACA,eEfwEuD,GCUxE9M,OAEA+M,eACA7M,KAAAuH,OACAD,QAAA,MAGAwF,YACA9M,KAAAuH,OACAD,QAAA,QAGA1F,UACA5B,KAAAoD,MACAkE,QAAA,MAEA1N,KAAA,OACAsD,GAAA,MAEAtD,KAAA,OACAsD,GAAA,OAKAiG,MACAnD,KAAAuH,OACAD,QAAA,MAGAE,OACAxH,KAAAuH,OACAD,QAAA,QAGAyF,UACA/M,KAAAiK,OACA3C,QAAA,KAGA/P,KAAA,MAGAyV,iBAGAC,UAEA1Q,QACA,WAAwBE,KAAAoQ,iBAGxBtQ,mBACA,UAAuBE,KAAAuQ,YAAAjV,WAGvBwE,UACA,aAAAE,KAAAoQ,cACApQ,KAAAuQ,YAAAjV,OAAA,GAEA0E,KAAAuQ,YAAAjV,OAAA,IAGAwE,WACA,aAAAE,KAAAoQ,cACA,6BAEA,iCAIAtQ,UAEAE,KAAA4L,QAEA9L,UAEAE,KAAAgF,MAAA,QAAAhF,OAEAH,SAEAC,OAEAE,KAAA6L,OAAA7L,KAAAmF,WAGArF,OAAAqF,EAAA8G,GAEAjM,KAAAyQ,eAAAtL,GAEA,mBAAA8G,GACAA,KAIAnM,eAAAqF,GAEAnF,KAAAuQ,YAAApL,GAIArF,kBAAA0D,EAAAkN,EAAA,GAEA1Q,KAAAuQ,YAAA/T,OAAAgH,EAAAkN,IAGA5Q,mBAEAE,KAAAyQ,oBAIA3Q,iBAEAE,KAAA2Q,mBAEA3Q,KAAA2I,aAGA7I,gBAAA0D,EAAAQ,GAEA,GAAAA,EAAA4B,SACA,SAGA5F,KAAA4Q,kBAAApN,GAEAxD,KAAA2I,aAGA7I,YACAE,KAAAgF,MAAA,SAAAhF,KAAAuQ,gBC1HeM,aAXCtV,OAAA4E,EAAA,QAAA5E,CACd4U,ECTQ,WAAgB,IAAAjP,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBO,YAAA,oBAA8BP,EAAA,MAAWO,YAAA,2BAAqCP,EAAA,QAAaO,YAAA,gBAAAoD,UAAsCC,YAAAhD,EAAAH,GAAAG,EAAA4P,UAAiC5P,EAAAJ,GAAA,KAAAR,EAAA,QAAyBO,YAAA,gBAAAoD,UAAsCC,YAAAhD,EAAAH,GAAAG,EAAA6P,qBAA4C7P,EAAAJ,GAAA,KAAAR,EAAA,QAAyBoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,MAAAsD,EAAA,QAAA0L,WAAA,YAAsE/L,YAAA,UAAAoD,UAAkC2L,UAAA1O,EAAAH,GAAAG,EAAA8P,aAAkC9P,EAAAJ,GAAA,KAAAR,EAAA,QAAyBO,YAAA,gBAAAoD,UAAsCC,YAAAhD,EAAAH,GAAAG,EAAAmP,aAAqClP,IAAKC,MAAAF,EAAA+P,oBAA4B/P,EAAAJ,GAAA,KAAAR,EAAA,OAA0BO,YAAA,4BAAsCP,EAAA,MAAWO,YAAA,wBAAmCK,EAAA6C,GAAA7C,EAAA,qBAAA8C,EAAAR,GAA+C,OAAAlD,EAAA,MAAgBpC,IAAA8F,EAAA9C,EAAA6J,OAAAlK,YAAA,UAAAkM,OACz1BmE,cAAAlN,EAAA4B,UACiBzE,IAAKC,MAAA,SAAAC,GAAkD,OAAzBA,EAAAiM,kBAAyBpM,EAAAiQ,gBAAA3N,EAAAQ,OAA0C1D,EAAA,QAAaO,YAAA,UAAAoD,UAAgCC,YAAAhD,EAAAH,GAAAiD,EAAA9C,EAAA6J,WAAuC7J,EAAAJ,GAAA,KAAAR,EAAA,QAAyBO,YAAA,mBAA6BK,EAAAJ,GAAA,cAAqB,YDUjR,EACA,KACA,KACA,eEXesQ,GACf/N,OAEAgO,OACA9N,KAAAiK,OACA3C,QAAA,KAGAyG,mBACA/N,KAAAuH,OACAD,QAAA,gBAGAhL,SAEAC,SAAAkE,GACA,MAAAsF,EAAAtF,OACA,GAAAsF,EAAA,CAEA,MAAAf,EAAAvI,KAAAkI,UAAAoB,EAAAtJ,KAAAwI,QAEAxI,KAAAiG,WAAAqD,EAAAf,GAEAvI,KAAAuR,kBAAAjI,KAIAxJ,qBAAA8E,GAEA5E,KAAAwR,mBAAA/M,IAAAG,EAAA5E,KAAA0G,MAAA9B,IAGA9E,iBAAAqF,GACAnF,KAAAyR,cAAAtM,GAGArF,mBAEA,GAAAE,KAAAyR,cAAAnW,OACA,OAAA0E,KAAAyR,cAGA,MAAAA,KAUA,OARAzR,KAAAwR,mBAAArL,QAAAnC,IACAA,EAAAsH,UACAmG,EAAA7V,KAAAoI,KAIAhE,KAAA0R,iBAAAD,GAEAA,GAGA3R,oBAEAE,KAAA0R,qBAEA1R,KAAAwR,mBAAA,IAAAhN,KAGA1E,sBACA,WAAAgC,QAAAC,IAEAA,EAAA/B,KAAA2R,yBC9DeC,GACf/R,SAEAC,aACAE,KAAAsE,eAGAxE,gBACAE,KAAAuE,YAAA,MAEAzE,cACAE,KAAAuE,YAAA,IAAAC,KAGA1E,UAAA5B,EAAApD,GAEA,GAAAkF,KAAAuE,YAAAsN,IAAA3T,GAAA,CAEA,MAAAoL,EAAAtJ,KAAAkI,UAAAhK,GAEAoL,EAAAwI,aAAA,EAEAxI,EAAAyI,iBAA+C7T,UAG/CpD,EAAAgX,aAAA,EAEAhX,EAAAiX,cAAA7T,EAEA8B,KAAAuE,YAAAE,OAAwCvG,UAAIpD,QAG5CkF,KAAAuE,YAAAE,IAAAvG,EAAApD,IAIAgF,UAAA5B,GACA,OAAA8B,KAAAuE,YAAA/G,IAAAU,IAGA4B,eACA,OAAAE,KAAAuE,aAGAzE,aAAA5B,GACA,OAAA8B,KAAAuE,YAAAG,OAAAxG,MCpDwE8T,GCyBxExQ,QAAa4P,EAAYQ,GCjBzBpQ,QAAaoQ,GACb/R,SAEAC,mBAEAE,KAAAkH,qBAEAlH,KAAAmH,oBAEAnH,KAAAoH,cAAA,IAAA5C,KAGA1E,iBAAAlC,GACAoC,KAAAqH,cAAAzJ,GAGAkC,gBAAAlC,GACAoC,KAAAsH,aAAA1J,GAGAkC,oBAEAE,KAAAoH,cAAAjB,QAAAnC,IAEA,GAAAA,EAAA,CAIA,GAFAA,EAAA6C,SAAA,EAEA7C,EAAA8N,YAAA,CAEA,MAAAG,EAAAjS,KAAAkI,UAAAlE,EAAA+N,eACAE,IACAA,EAAApL,SAAA,GAIA7G,KAAAyI,mBAAAzE,GAAA,MAIAhE,KAAA+H,oBAGAjI,kBAAA0H,EAAAC,GAAA,GAEA,MAAAC,EAAA1H,KAAA2H,oBAAAH,IAEAE,EAAAvI,aAAAa,KAAAqH,cAAAlI,YAAAsI,KAEAzH,KAAA4H,oBAEA5H,KAAAkH,iBAAAQ,GAEA1H,KAAA6H,sBAEA7H,KAAA8H,eAIAhI,oBAAA0H,GAEAxH,KAAAqH,eAEArH,KAAA+H,mBAGA,IAAAL,EAAAF,EASA,OAPAb,MAAAC,QAAAc,KACAA,EAAA,iBAAAA,UAGAf,MAAAC,QAAAc,MAAApM,OAAA,oBAAAoM,EAAA,KACAA,IAAAM,IAAAhE,KAAAhE,KAAA0G,QAEAgB,GAIA5H,sBAQAE,KAAAqH,cAAAlB,QAAAnC,IAEA,MAAAiE,EAAAjI,KAAAkI,UAAAlE,GAEA,GAAAiE,EAAA,CAGA,GAFAA,EAAApB,SAAA,EAEA7C,EAAA8N,YAAA,CAEA,MAAAG,EAAAjS,KAAAkI,UAAAlE,EAAA+N,eAEAE,IACAA,EAAApL,SAAA,GAIA7G,KAAAsI,gBAAAL,GAAA,MAIAjI,KAAAoH,cAAAjB,QAAAnC,IAEAhE,KAAAkS,2BAAAlO,MAKAlE,kBAAAkE,GAEA,GAAAA,EAAA8N,YAAA,CAEA,MAAAG,EAAAjS,KAAAkI,UAAAlE,EAAA+N,eAEAI,EAAAnS,KAAAkI,UAAA+J,EAAAjS,KAAAwI,QAEAxI,KAAAiG,WAAAgM,EAAAE,KAIArS,WAAAkE,EAAAyB,EAAA2M,GAEApO,EAAA6C,SAAA7C,EAAA6C,QAEA7C,EAAA6C,QAEA7G,KAAAsI,gBAAAtE,EAAAoO,GAIApS,KAAAyI,mBAAAzE,GAGAyB,EAAAzF,KAAAuG,WAAA/J,OAAA,KAEAwD,KAAAgF,MAAA,YAAAhB,IAIAlE,2BAAA8E,GAEA,MAAAyN,EAAArS,KAAAkI,UAAAtD,EAAA5E,KAAAwI,QAEA6J,KAAArM,WAEApB,EAAAiC,UAEAwL,EAAAxL,QAAAwL,EAAArS,KAAAuG,WAAA+L,MAAAtO,KAAA6C,WAGAjC,EAAAiC,SAAAwL,EAAAxL,UACAwL,EAAAxL,SAAA,KAKA/G,aAAA6I,GAAA,GAEA3I,KAAAoH,cAAAG,QAEAoB,GAEA3I,KAAA8H,cAIAhI,gBAAAkE,EAAAsM,EAAA3H,GAAA,EAAA4J,GAAA,GAEA,OAAAvS,KAAAoH,cAAAyK,IAAA7N,EAAAhE,KAAA0G,QAEA6L,GAEAvS,KAAAkS,2BAAAlO,IAGA,IAGAsM,IACAtQ,KAAAwS,eAAAlC,GAEAA,GAAAtQ,KAAAoH,cAAAqL,KAAA,EAAAzS,KAAAwS,gBACA,mBAAAxS,KAAA+N,aAEA/N,KAAA+N,qBAA8C/N,KAAAwS,kBAE9CxS,KAAAgF,MAAA,iBAA6ChF,KAAAwS,kBAE7CxO,EAAA6C,SAAA,GAEA,IAGA7G,KAAAoH,cAAAqL,KAAAzS,KAAAwS,gBACAxS,KAAAoH,cAAA3C,IAAAT,EAAAhE,KAAA0G,MAAA1C,GAGA2E,GAEA3I,KAAA8H,cAGA,KAGAhI,mBAAAkE,EAAA2E,GAAA,EAAA4J,GAAA,GAEAA,GAEAvS,KAAAkS,2BAAAlO,GAGAhE,KAAAoH,cAAA1C,OAAAV,EAAAhE,KAAA0G,OAEAiC,GAEA3I,KAAA8H,cAIAhI,yBAEA,MAAAuH,KAEAC,KAEAtH,KAAAoH,cAAAjB,QAAA,CAAAnC,EAAA9F,KAEAmJ,EAAAzL,KAAAsC,GAEAoJ,EAAA1L,KAAAoI,KAGAhE,KAAAkH,iBAAAG,GAEArH,KAAAmH,gBAAAG,IAGAxH,aAEAE,KAAA4I,yBAEA5I,KAAAgF,MAAA,SAAAhF,KAAAqH,eAEArH,KAAAgF,MAAA,SAAAhF,KAAAsH,kBDxOAjE,OAEAmF,OACAjF,KAAAuH,OACAD,QAAA,YAGAnE,MACAnD,KAAAuH,OACAD,QAAA,MAGAE,OACAxH,KAAAuH,OACAD,QAAA,QAGAtE,WACAhD,KAAAuH,OACAD,QAAA,YAGA1F,UACA5B,KAAAoD,MACA7G,aASAkL,iBAA0BzH,KAAAoD,OAE1B6L,gBACAjP,KAAAiK,OACA3C,QAAA,IAGAkD,aACAxK,KAAA0H,SACAnL,QAAAL,GACAhB,OAAAuP,OAAArN,QAAAsN,QAAAxO,KAIAiT,2BACAnP,KAAA0H,SAEAJ,QAAA,CAAAjG,EAAAyB,IAEA,OAAAzB,EAAAzH,MAAA,SAAAyH,EAAAzH,MAIA2J,qBACAvD,KAAA0H,SAEAJ,QAAA,CAAAjG,EAAAyB,MAEAA,GAAA,OAAAA,EAAAlJ,MACAkJ,GAAA,SAAAA,EAAAlJ,MACA,OAAAyH,EAAAzH,MACA,SAAAyH,EAAAzH,MACA,SAAAyH,EAAAzH,OAIAwV,2BACApP,KAAA0H,SAEAnL,QAAA8E,MAKAgO,mBACArP,KAAA0H,SAEAJ,QAAA,CAAAjG,EAAAyB,EAAA6E,IACA,IAIA2H,WACAtP,KAAA6K,QACAvD,SAAA,GAGAiI,iBACAvP,KAAA6K,QACAvD,SAAA,GAGAkI,aACAxP,KAAAuH,OACAD,QAAA,aAGAmI,uBACAzP,KAAA0H,SACAJ,QAAA7G,GACAA,EAAA7G,KAAA7B,OAAA,IAIAR,KAAA,MAGAmY,YAAA,GAEAC,mBAEAC,cAAA,OAEAC,iBAGAtT,UAEAE,KAAA4L,QAEA9L,UAEAE,KAAAgF,MAAA,QAAAhF,OAGAF,gBAEAE,KAAAqT,WAEAxT,SAEAC,OACAE,KAAAkT,mBAEAlT,KAAA+H,mBAEA/H,KAAA6L,OAAA7L,KAAAmF,SAAA,KAEAnF,KAAA8L,kBAAA9L,KAAAgL,oBAIAlL,UAEAE,KAAA4L,QAGA9L,eAAAlC,GAEAoC,KAAAiT,YAAArV,GAGAkC,OAAAqF,EAAA8G,GAEAjM,KAAAsT,eAAA,IAEAtT,KAAA4H,oBAEA5H,KAAAuT,oBAAApO,GAEA,mBAAA8G,GACAA,KAIAnM,UAEAE,KAAAwT,gBAEAxT,KAAA+H,oBAGAjI,oBAAAqF,GAEAnF,KAAAuF,kBAAAJ,GAEAnF,KAAAyT,mBAAAtO,IAGArF,mBAAAqF,GACAnF,KAAAkT,gBAAA/N,GAQArF,kBAAAqF,GAEAnF,KAAAkG,aAEAlG,KAAA0T,oBAEAvO,EAAAgB,QAAAnC,IAEAhE,KAAAoG,gBAAApC,EAAA,SAUAlE,gBAAA8E,EAAAyB,GAEArG,KAAAsG,aAAA1B,EAAAyB,GAEAM,MAAAC,QAAAhC,EAAA5E,KAAAuG,YAEA3B,EAAA5E,KAAAuG,WAAAJ,QAAAK,IAEAxG,KAAAoG,gBAAAI,EAAA5B,KAGAA,EAAA5E,KAAAuG,cAGAvG,KAAAyG,UAAA7B,EAAA5E,KAAA0G,MAAA9B,IAGA9E,aAAA8E,EAAAyB,GAEAzB,EAAAiC,SAAA,EAEA7G,KAAA0S,0BAAA9N,EAAAyB,EAAArG,QAEA4E,EAAA+O,mBAGA3T,KAAA8G,oBAAAlC,EAAAyB,EAAArG,QAEA4E,EAAAoB,UAAA,EAEAhG,KAAA4T,qBAAAhP,IAGAA,EAAAiP,UAAA7T,KAAA4S,kBAAAhO,EAAAyB,EAAArG,MAEAA,KAAA2S,0BAAA/N,EAAAyB,EAAArG,OAGAF,6BAAA8E,EAAA0L,GAEA1L,EAAA5E,KAAAuG,WAAA+L,MAAA9L,IACA,IAAAsN,GAAA,EAEA,GAAAtN,EAAAK,UAAAjC,EAAAiC,QAAA,CAGA,GAFAL,EAAAK,QAAAjC,EAAAiC,QAEAL,EAAAsL,YAAA,CAEA9R,KAAAkI,UAAA1B,EAAAuL,eACAlL,QAAAL,EAAAK,QAEAL,EAAAK,SAEAiN,EAAA9T,KAAAsI,gBAAA9B,EAAA8J,GAAA,MAGA1L,EAAAiC,SAAA,GAIA7G,KAAAyI,mBAAAjC,GAAA,GAGA,OAAAsN,KAIAhU,eAAAkE,GAEAA,KAAAgC,WAEAhC,EAAA6C,SAAA7C,EAAA6C,QAGA,SAAA7C,EAAA7G,MAAA,SAAA6G,EAAA7G,MAAA,SAAA6G,EAAA7G,KACA6C,KAAA+T,6BAAA/P,EAAA,IAEAhE,KAAA+T,6BAAA/P,EAAA,IAGAhE,KAAAkT,gBAAA1W,OAAA,KAEAwD,KAAA8H,cAEA9H,KAAAgF,MAAA,YAAAhB,IAGAlE,cAAAkE,EAAAyB,GAEA,GAAAzB,EAAA4B,SACA,SAGA5B,EAAAgC,UAEA,SAAAP,EAAAtI,MAAA,SAAAsI,EAAAtI,MAAA,SAAAsI,EAAAtI,KACA6C,KAAAiG,WAAAjC,EAAAyB,EAAA,IAEAzF,KAAAiG,WAAAjC,EAAAyB,EAAA,IAGAzF,KAAAuR,kBAAAvN,GAEAhE,KAAAkS,2BAAAlO,IAGAhE,KAAAgU,WAAAhQ,EAAAyB,IAIA3F,WAAAkE,EAAAyB,GAEAA,EAAAkO,gBAAAlO,EAAAkO,eAAA3T,KAAA0G,QAAA1C,EAAAhE,KAAA0G,OAEA1G,KAAAiU,kBAAAjQ,EAAAyB,GAGAzF,KAAAgF,MAAA,YAAAhB,EAAAyB,IAGA3F,kBAAAkE,EAAAyB,GAEAA,EAAAkO,eAAA3P,EAEAhE,KAAAkT,gBAAA1W,OAAA,MAGAsD,eAAAkE,GACA,yBAAAhE,KAAAgT,uBAAAhT,KAAAgT,sBAAAhP,ME3WwEkQ,cCoCxEvQ,YAAiBwQ,UAAAxE,EAAWyE,YAAAvD,EAAawD,kBC5BzB9Y,OAAA4E,EAAA,QAAA5E,CACdyW,ECTQ,WAAgB,IAAA9Q,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBO,YAAA,6BAAuCK,EAAA,UAAAZ,EAAA,OAA4BO,YAAA,6BAAuCP,EAAA,2BAAgCE,OAAOuK,MAAA7J,EAAA6J,MAAAuJ,aAAA,EAAAjD,MAAAnQ,EAAAmQ,MAAAvB,YAAA5O,EAAAoQ,kBAAAiD,oBAAArT,EAAAqT,qBAA0IpT,IAAKqT,OAAAtT,EAAAuT,UAAsBC,YAAAxT,EAAAyT,KAAsBzW,IAAA,UAAA0W,GAAA,SAAAC,GACtb,IAAA7Q,EAAA6Q,EAAA7Q,KACA,OAAA1D,EAAA,OAAkBO,YAAA,6BAAAkM,OAAgDlG,QAAA7C,OAAA6C,SAA2B5C,UAAW2L,UAAA1O,EAAAH,GAAAiD,EAAA8M,cAAoC,oBAAAb,OAAgCrS,MAAAsD,EAAA,YAAA+K,SAAA,SAAAiE,GAAiDhP,EAAA+R,YAAA/C,GAAoBtD,WAAA,kBAA2B,GAAA1L,EAAAkM,KAAAlM,EAAAJ,GAAA,KAAAI,EAAA,gBAAAZ,EAAA,OAA2DO,YAAA,iBAAAkM,OAAoC+H,aAAA5T,EAAA2R,WAA4B5O,UAAWC,YAAAhD,EAAAH,GAAAG,EAAA6R,gBAAuC7R,EAAAkM,KAAAlM,EAAAJ,GAAA,KAAAR,EAAA,OAAiCO,YAAA,oCAA+CK,EAAA6C,GAAA7C,EAAA,yBAAA8C,EAAAR,GAAmD,OAAAlD,EAAA,MAAgBpC,IAAA8F,EAAA9C,EAAAwF,MAAA7F,YAAA,+BAA4DP,EAAA,MAAAA,EAAA,MAAoBO,YAAA,gBAAAkM,OAC5pBgI,SAAA/Q,EAAAgC,SACAa,QAAA7C,EAAA6C,SACqB5C,UAAWC,YAAAhD,EAAAH,GAAAiD,EAAA7G,OAAgCgE,IAAKC,MAAA,SAAAC,GAAyB,OAAAH,EAAA8T,eAAAhR,EAAAR,SAAwCtC,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,MAAkCO,YAAA,mBAA8BK,EAAA6C,GAAAC,EAAA9C,EAAAqF,WAAA,SAAAC,EAAAyO,GAAqD,OAAA3U,EAAA,MAAgBpC,IAAAsI,EAAAtF,EAAAwF,MAAAuO,EAAApU,YAAA,eAAAkM,OAC3QgI,SAAAvO,EAAAR,SACAa,QAAAL,EAAAK,QACAqK,cAAA1K,EAAAZ,SACAoH,OAAAhJ,EAAA2P,gBAAA3P,EAAA2P,eAAAzS,EAAAwF,QAAAF,EAAAtF,EAAAwF,OACyBlG,OAAQ0M,gBAAAhM,EAAAiM,eAAA3G,IAA0CrF,IAAKqL,UAAA,SAAAnL,GAAsD,OAAzBA,EAAAiM,kBAAyBpM,EAAAgU,cAAA1O,EAAAxC,OAAwC1D,EAAA,QAAaO,YAAA,oBAAAoD,UAA0CC,YAAAhD,EAAAH,GAAAyF,EAAAtF,EAAA6J,eAA4C,KAAA7J,EAAAJ,GAAA,KAAAkD,EAAA2P,gBAAA3P,EAAA2P,eAAAzS,EAAAqF,YAAAvC,EAAA2P,eAAAzS,EAAAqF,WAAAjL,OAAAgF,EAAA,MAAAA,EAAA,MAA+IO,YAAA,mBAA8BK,EAAA6C,GAAAC,EAAA2P,eAAAzS,EAAAqF,WAAA,SAAA4O,EAAAC,GAAsE,OAAA9U,EAAA,MAAgBpC,IAAAiX,EAAAjU,EAAAwF,MAAA0O,EAAAvU,YAAA,eAAAkM,OACphBgI,SAAAI,EAAAnP,SACAa,QAAAsO,EAAAtO,SAC0BrG,OAAQ0M,gBAAAhM,EAAAiM,eAAAgI,IAA2ChU,IAAKqL,UAAA,SAAAnL,GAAsD,OAAzBA,EAAAiM,kBAAyBpM,EAAAgU,cAAAC,EAAAnR,OAAyC1D,EAAA,QAAaO,YAAA,oBAAAoD,UAA0CC,YAAAhD,EAAAH,GAAAoU,EAAAjU,EAAA6J,eAA6C,KAAA7J,EAAAkM,SAAkB,UDDvS,EACA,KACA,KACA,eDsBA5L,SG3BA1B,UAEAE,KAAAqV,mBAEAvV,gBAEAE,KAAAsV,qBAEAzV,SAEAC,kBAGAE,KAAAoF,UAAAmQ,IAAA,0BAAAvV,KAAAwV,WAGA1V,oBAGAE,KAAAoF,UAAAqQ,KAAA,0BAAAzV,KAAAwV,WAGA1V,gBAAAmM,GACAjM,KAAAoF,WACA6G,QCQApM,SAEAC,0BAAA2B,GAEA,MAAAC,EAAAjD,OAAAkD,SAAAC,YAAAC,iBACA,WAAAC,QAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAjC,KAAAkC,QACAC,uBAAmDV,EAAAiU,OACnDtT,EAAA3D,OAAA4D,SAAAsT,WACA,IAAAnT,KAA8B/D,OAAA4D,SAAAC,IAAAsT,IAAAC,mBAA0C,IAAAvG,MAAAwG,YAExErX,OAAA4D,SAAA0T,UACAvT,KAA8B/D,OAAA4D,SAAAC,IAAAsT,IAAAC,eAAApU,EAAAiU,aAG9B,MAAAxW,GAEAwW,KAAAjU,EAAAiU,KAEAM,KAAAvU,EAAAuU,KAEAC,WAAAxU,EAAAwU,YAGAxX,OAAAkD,SAAAiB,kBAAAX,EAAAE,EAAAC,EAAAI,EAAAtD,GAEAT,OAAAkD,SAAAkB,MACAC,OAAAV,EACAE,IAAAE,EAGA1H,KAAAoE,EAEA8D,aAAA,SAEAC,KAAAnI,IACA,MAAAoI,EAAApI,OACA2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,uBAAMT,GAErEjD,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAnB,EAAAmB,IACqBpI,IACrB2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,sBAAMT,GACrE,MAAAwB,EAAApI,OAEA2D,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAlB,EAAAlH,WC/EA+E,SAEAC,0BAEA,oBAAAvE,OAAAC,UAAA2D,SAAAzD,KAAAsE,KAAAkW,cAAA,QACAlW,KAAAkW,cAAA,OAIApW,iBAAA3C,EAAAgI,GAEA,oBAAA5J,OAAAC,UAAA2D,SAAAzD,KAAAsE,KAAAkW,cAAA,QACAlW,KAAAkW,kBAIAlW,KAAAkW,cAAA/Y,GAAAgI,GAIArF,sBAAAW,GACA,WAAAqB,QAAA,CAAAC,EAAAC,KAIAF,QAAAqU,KAEAnW,KAAAoW,yBAAA,aAEApW,KAAAoW,yBAAA,eACAnT,KAAAnI,IAEAiH,EAAA,cAAAtB,EAAA3F,EAAA,GAAAA,EAAA,KACiBA,IACjBkH,EAAAlH,QAKAgF,mBAAAW,GACA,WAAAqB,QAAA,CAAAC,EAAAC,KAMAhC,KAAAoW,yBAAA3V,GAAAwC,KAAAnI,IACAiH,EAAAjH,IACiBA,IACjBkH,EAAAlH,QAMAgF,yBAAAW,GACA,WAAAqB,QAAA,CAAAC,EAAAC,KAEA,MAAAsH,EAAAtJ,KAAAqW,aAAAnO,UAAAzH,GAEA,GAAA6I,EAAA,CAEA,MAMA7H,GAEAiU,KARApM,EAAA7I,GAUAuV,KARA,aAAA1S,KAAAtD,KAAAsW,oBAAApN,UAAAlJ,KAAAsW,oBAAApN,SAAAlJ,KAAAsW,oBAAA3M,cAUAsM,WARA3M,EAAA2M,YAWAjW,KAAAuW,0BAAA9U,GAAAwB,KAAAuT,IAEAxW,KAAAyW,iBAAAhV,EAAAiU,KAAAc,EAAA1b,MAEAiH,EAAAyU,EAAA1b,OACqBA,IAErBkH,EAAAlH,UAIAkH,EAAA,IAAA0U,SAAwCjW,uBAKxCX,gBAAA6W,EAAAC,EAAAN,GAaA,GAXAtW,KAAAqW,aAAAO,EAEA5W,KAAAsW,sBAGAtW,KAAA6W,gBAAAF,GAEA3W,KAAA8W,iBAAAH,GAEA3W,KAAA+W,oBAAAJ,IAEA3W,KAAAgX,aAIA,OAFAhX,KAAAiX,qBAEAN,EAAAlW,IAGA,gBAEAT,KAAAkX,gBAAAP,EAAAlW,IACA,MAEA,gBACAT,KAAAmX,gBAAAR,EAAAlW,IACA,MAEA,gBACAT,KAAAoX,gBAAAT,EAAAlW,IACA,MAGA,gBACAT,KAAAqX,gBAAAV,EAAAlW,IACA,MAEA,gBACAT,KAAAsX,gBAAAX,EAAAlW,IACA,MAGA,gBACAT,KAAAuX,mBAAAZ,EAAAlW,SCzIA3F,KAAA,SAGA+E,SAEAC,cAAAW,GAEAT,KAAAwX,mBAAA/W,GACAwC,KAAAkC,IAEAnF,KAAAyX,wBAAAtS,EAAA,CAAAuS,EAAAC,KAEA,IAAAA,EAAArc,QAQAoc,EAAA5L,kBAAA6L,QAOA7X,gBAAAW,GAEAT,KAAA4X,cAAAnX,IAGAX,gBAAAW,GAEAT,KAAA4X,cAAAnX,IAGAX,gBAAAW,GACAT,KAAA4X,cAAAnX,IAGAX,WAAAW,GAEAT,KAAA6X,sBAAApX,GACAwC,KAAAkC,IACA,cAAA1E,GACA0E,EAAAgB,QAAAnC,IACAA,EAAAwF,SAAAxF,EAAAwF,SAAAsO,OAAAC,GACA,UAAAA,EAAA5a,QAKA,MAAAkI,EAAA,cAAA5E,EAAAT,KAAAgY,kBAAA7S,GAAAnF,KAAAiY,kBAAA9S,GAEAnF,KAAAyX,wBAAApS,EAAA,CAAAqS,EAAAC,KAEA,OAAAA,EAAArc,OAAA,CAEA,MAAAgO,EAAAoO,EAAAxP,UAAA,KAEAwP,EAAA1C,eAAA1L,QAIAoO,EAAA5L,kBAAA6L,QASA7X,kBAAAqF,GAEA,MAEA+S,EAFAlY,KAAAqW,aAAAnO,UAAA,aAEAjB,cAAAkB,QACA,IAAA9C,EAAAF,EAGA,GAAAwB,MAAAC,QAAAsR,MAAA5c,OAAA,UAAA0E,KAAAsW,oBAAA3M,cAAA,CAEA,MAAAwO,EAAAD,EAAAlQ,IAAAhE,KAAAvD,IAEA4E,EAAAjG,KAAAC,MAAAD,KAAAgZ,UAAAjT,IACAwB,MAAAC,QAAAvB,MAAA/J,QACA+J,EAAA,GAAAmE,SAAArD,QAAAnC,KACA,IAAAmU,EAAApZ,QAAAiF,EAAAvD,MAEAuD,EAAA4B,UAAA,KAKA,OAAAP,GAIAvF,kBAAAqF,GACA,MAAAE,EAAAjG,KAAAC,MAAAD,KAAAgZ,UAAAjT,IAOA,OANAwB,MAAAC,QAAAvB,MAAA/J,QACA+J,EAAA,GAAAmE,SAAArD,QAAAnC,IAEAA,EAAA4B,UAAA,IAGAP,GAIAvF,gBAAAW,GAEAT,KAAAqY,WAAA5X,IAGAX,gBAAAW,GAGAT,KAAAqY,WAAA5X,IAIAX,mBAAAW,GAEAT,KAAAwX,mBAAA/W,GACAwC,KAAAkC,IAEAnF,KAAAyX,wBAAAtS,EAAA,CAAAuS,EAAAC,KAEA,IAAAA,EAAArc,QAEAoc,EAAA5L,kBAAA6L,QAOA7X,gBAAAwY,GAEAA,EAAAzR,SAEA7G,KAAAuY,gBAAAjJ,KAAAkJ,MAAA,WAIA1Y,kBAAAwY,GAEA,IAAAA,EAAAzR,QAAA,CAEA,MAAAwH,GAAA,IAAAiB,MAAAmJ,aAAA,IAAAnJ,MAAAoJ,cAAA,IAEA1Y,KAAAuY,gBAAAlK,EAAAiB,KAAAkJ,YCzJA1d,KAAA,MAGAqT,aAAA,EAEAwK,eAAA,EAEAvQ,UAAAkH,KAAAkJ,MAGAnQ,QAAAiH,KAAAkJ,MAAA,MAEAI,eAAA,OAEAC,aAAA,MAGAhZ,SAEAC,eAAAgZ,GACA9Y,KAAA+Y,YAAAD,GAGAhZ,uBAAAkZ,GACAhZ,KAAA2Y,cAAAK,GAGAlZ,gBAAAsI,EAAAC,GACArI,KAAA+Y,YAAAlN,OAAAzD,EAAAC,IAGAvI,iBACAE,KAAAuY,gBAAA,QAGAzY,iBAAAwY,GAKA,MAAAU,EAAA,iDAAA1V,KAAAgV,EAAA7X,IAKA,GAFAT,KAAAiZ,uBAAAD,GAEAA,EAAA,CAIA,GAFAhZ,KAAAkZ,iBAEAZ,EAAArR,cAAA,CACA,MAAAmB,EAAAkQ,EAAArR,cAAAmB,WAAA,GACAC,EAAAiQ,EAAArR,cAAAoB,SAAA,GAEArI,KAAAuY,gBAAAnQ,EAAAC,GAGArI,KAAAmZ,aAAAb,EAAA7X,MAIAX,eAAAkZ,GACAhZ,KAAAmO,YAAA6K,GAGAlZ,aAAAW,GAIA,OAFAT,KAAAoZ,gBAAA,GAEA3Y,GAEA,gBAEAT,KAAA4Y,eAAA,OAEA5Y,KAAA6Y,aAAA,IACA,MAEA,gBAEA7Y,KAAA4Y,eAAA,sCAEA5Y,KAAAoZ,gBAAA,GACA,MAEA,gBAEApZ,KAAA4Y,eAAA,oCAEA5Y,KAAA6Y,aAAA,OACA,MAEA,gBAEA7Y,KAAA4Y,eAAA,OAEA5Y,KAAA6Y,aAAA,MAOA/Y,WAAAsI,EAAAC,GAEArI,KAAAoI,YAEApI,KAAAsY,aAAArR,cAAAmB,YAEA,iBAAAC,IAEArI,KAAAqI,UAEArI,KAAAsY,aAAArR,cAAAoB,WAEArI,KAAAsY,aAAA7X,IA0BAX,YAAAL,GACAO,KAAAqZ,gBAAA,KAEArZ,KAAAoF,UAAAJ,MAAA,qBAAAvF,EAAA,iBChJAI,SAGAC,iBAAAwZ,GACAtZ,KAAAuZ,cAAAD,GAIAxZ,kBAAAqF,GAEAnF,KAAAuZ,cAAA1N,OAAA1G,IAGArF,mBAEAE,KAAAuZ,cAAA1N,YAGA/L,qBAEAE,KAAAwZ,oBAGA1Z,kBAAAqF,GAEAnF,KAAAyZ,mBAAAtU,GAEAnF,KAAA0Z,+BAAAvU,OCzBAtF,SAEAC,uBAAA6Z,GACA3Z,KAAA0X,oBAAAiC,GAGA7Z,wBAAAqF,EAAA8G,GAEAjM,KAAA0X,oBAAA7L,OAAA1G,EAAA,KACA,sBAAA8G,EAAA,CAEA,IAAA0L,KACA3X,KAAAsY,cAAAtY,KAAAsY,aAAArR,gBAEA0Q,EAAA3X,KAAAsY,aAAArR,cAAAkB,aAGA8D,EAAAjM,KAAA0X,oBAAAC,OAKA7X,+BAAAkL,GACAhL,KAAA0X,oBAAA5L,kBAAAd,IAGAlL,wBAAAqF,GACA,cAAAnF,KAAAsY,aAAA7X,KAEA0E,IAAA2S,OAAA9T,GACA,UAAAA,EAAA7G,OAIA6C,KAAAyZ,mBAAAtU,GAEAnF,KAAA4Z,kBAAAzU,GAEAnF,KAAA6Z,uBAAA1U,IAGArF,uBAAAqF,GAEA,OAAAnF,KAAAsY,aAAA7X,IAGA,gBAEAT,KAAA8Z,uBAAA3U,GACA,MAEA,gBAEAnF,KAAA+Z,uBAAA5U,KAOArF,uBAAAqF,GASA,OAAAA,EAAA7J,QAAA,OAAA0E,KAAAsW,oBAAApN,SAAA,CAEA,MAAA8Q,EAAAha,KAAAqW,aAAAnO,UAAA,aAEAgQ,EAAA8B,EAAA/S,cAAAkB,QAGA,GAAAxB,MAAAC,QAAAsR,MAAA5c,OAAA,GAEA,MAAA+J,KAEArF,KAAAyZ,mBAAApU,EAAA2U,GAKAha,KAAAyX,wBAAAzX,KAAAkW,cAAA,gBAIApW,uBAAAqF,GAUA,GAAAA,EAAA7J,OAAA,UAAA0E,KAAAsW,oBAAA3M,cAAA,CAEA,MAAAsQ,EAAAja,KAAAqW,aAAAnO,UAAA,aAEAgQ,EAAA+B,EAAAhT,cAAAkB,QAEA,IAAA9C,KAQAA,GAJAsB,MAAAC,QAAAsR,QAAAlY,KAAAka,YAAAhC,EAAA,YAIA9Y,KAAAC,MAAAD,KAAAgZ,UAAAjT,IAIA/F,KAAAC,MAAAD,KAAAgZ,UAAApY,KAAAkW,cAAA,gBAAA1M,WAGAxJ,KAAAyZ,mBAAApU,EAAA4U,KAIAC,YAAA,CAAA/U,EAAA1E,IACA0E,EAAAgV,KAAAnW,KAAAvD,WTlGA4C,OAEA+W,SACA7W,KAAA6K,QACAvD,SAAA,IAGA/P,KAAA,MAGAoH,QAAAzD,OAAA4D,SAAAH,QAEAoW,cAA2Bnb,KAAA,IAE3B6Z,cAAA,EAEAqD,kBACAld,KAAA,OACAsD,GAAA,MAEAtD,KAAA,OACAsD,GAAA,MAEA6Z,SAAA,EACAC,SAAA,QAGA/J,UAEA1Q,gBACA,sBAAAwD,KAAAtD,KAAAsY,aAAA7X,IAAA,KACA,0BAAA6C,KAAAtD,KAAAsY,aAAA7X,IAAA,YAGAX,YAEA,iCAAAwD,KAAAtD,KAAAsY,aAAA7X,KAGAX,kBAEA,sBAAAwD,KAAAtD,KAAAsY,aAAA7X,MAGAX,UAEAE,KAAA4L,QAEA9L,UAEAE,KAAAgF,MAAA,QAAAhF,OAEAH,SAEAC,SAQAA,SAAA0a,GACAxa,KAAAsa,QAAAE,GAGA1a,eAAAiM,GAEA/L,KAAAgM,YAAAD,GAGAjM,eAEAE,KAAAgM,YAAAH,OAAA,aAEA7L,KAAAqa,mBACAra,KAAAgX,cAAA,EAEAhX,KAAAkZ,kBAIApZ,mBAAAqF,EAAAsV,EAAA,MAEA,MAAAC,EAAAvV,EAAA6C,IAAAhE,KACAvD,GAAAuD,EAAAvD,GACAtD,KAAA6G,EAAA7G,QAIAwd,EAAAF,GAAAza,KAAAsY,aAEA,IAEAqC,EAAA1T,cAAAkB,QAAAuS,EAEAC,EAAA9T,QAAA6T,EAAApf,OAAA,EAEA0E,KAAAqW,aAAAuE,yBAAAD,GACa,MAAArb,GACbb,OAAAe,QAAAqb,MAAA,qEAIA/a,gBAAAkZ,GACAhZ,KAAAgX,aAAAgC,GAGAlZ,gBAAAwY,GAEAtY,KAAAsY,eACA,cAAAtY,KAAAsY,aAAA7X,IACA,GAAAT,KAAAua,QAAAjf,SACA0E,KAAAsY,aAAArR,cAAA1D,KAAAvD,KAAAua,QAAAO,KAAA,OAKAhb,oBAAAwY,GAOA,MAAAxE,EAAA,8CAAAxQ,KAAAgV,EAAA7X,IAIA,GAFAT,KAAA+a,kBAAA/a,KAAAsY,aAAAvR,iBAAA+M,IAEAA,EACA,OAAAwE,EAAA7X,IAGA,gBACAT,KAAAgb,gBAAA1C,GACA,MAEA,gBACAtY,KAAAib,kBAAA3C,KAOAxY,WAAAyD,GACAvD,KAAAua,SACAva,KAAAua,QAAAxb,QAAAwE,IAAA,EACAvD,KAAAua,QAAA/d,OAAAwD,KAAAua,QAAAxb,QAAAwE,GAAA,GAKAvD,KAAAua,QAAA3e,KAAA2H,GAGAvD,KAAAsY,aAGArR,cAAA1D,KAAAvD,KAAAua,QAAAO,KAAA,SUrMwEI,cCkCxEvX,YAAiBiT,UAAAxK,EAAW+O,WC1BZ5f,OAAA4E,EAAA,QAAA5E,CACd2Y,ECTQ,WAAgB,IAAAhT,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBO,YAAA,uBAAiCK,EAAAoZ,SAAApZ,EAAAoX,aAAAnb,KAAkF+D,EAAAkM,KAAlF9M,EAAA,QAAsDO,YAAA,kBAA4BK,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,KAAAI,EAAA,QAAAZ,EAAA,QAAyEO,YAAA,kBAA4BK,EAAAJ,GAAA,qBAAAI,EAAAkM,KAAAlM,EAAAJ,GAAA,KAAAR,EAAA,OAA6DO,YAAA,gBAAAkM,OAAmCqO,MAAAla,EAAAoX,aAAAnb,QAA8BmD,EAAA,OAAYO,YAAA,wBAAkCP,EAAA,QAAaO,YAAA,UAAAoD,UAAgCC,YAAAhD,EAAAH,GAAAG,EAAAoX,aAAAnb,SAA6C+D,EAAAJ,GAAA,KAAAR,EAAA,aAA8BoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,MAAAsD,EAAA,cAAA0L,WAAA,kBAAkFpM,OAASiN,WAAAvM,EAAA0X,eAAAjL,SAAAzM,EAAA2X,aAAA1K,YAAAjN,EAAAiN,YAAAJ,YAAA7M,EAAA6M,aAAwH5M,IAAK6O,OAAA9O,EAAAma,WAAA/O,MAAApL,EAAAoa,kBAAoDpa,EAAAJ,GAAA,KAAAR,EAAA,OAAwBoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,MAAA,aAAAsD,EAAAoX,aAAA7X,GAAAmM,WAAA,mCAAkHtM,EAAA,SAAcib,aAAaC,cAAA,OAAAC,eAAA,OAA0Cjb,OAAQ+C,KAAA,WAAApG,KAAA,SAAA0J,QAAA,GAAAjJ,MAAA,MAA4DuD,IAAKC,MAAA,SAAAC,GAAyB,OAAAH,EAAAwa,WAAA,UAA8Bxa,EAAAJ,GAAA,KAAAR,EAAA,SAA0BO,YAAA,kBAA4BK,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAR,EAAA,SAA0Cib,aAAaC,cAAA,QAAAC,eAAA,OAA2Cjb,OAAQ+C,KAAA,WAAApG,KAAA,SAAAS,MAAA,MAA+CuD,IAAKC,MAAA,SAAAC,GAAyB,OAAAH,EAAAwa,WAAA,UAA8Bxa,EAAAJ,GAAA,KAAAR,EAAA,SAA0BO,YAAA,kBAA4BK,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAR,EAAA,QAA2Cib,aAAaI,MAAA,MAAAH,cAAA,OAAAI,YAAA,UAAuD1a,EAAAJ,GAAA,qBAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAAoDO,YAAA,iBAAAkM,OAAoCqO,KAAAla,EAAA8V,gBAAwB1W,EAAA,uBAA4BE,OAAO6L,MAAA,GAAalL,IAAKmL,MAAApL,EAAAqL,kBAA4BjM,EAAA,eAAoBE,OAAO4P,cAAAlP,EAAAkP,eAAkCjP,IAAK6O,OAAA9O,EAAA2a,kBAAAvP,MAAApL,EAAA4a,oBAA6D5a,EAAAJ,GAAA,KAAAR,EAAA,qBAAsCE,OAAOqS,UAAA3R,EAAA2R,UAAAC,gBAAA5R,EAAA4R,iBAAgE3R,IAAKmL,MAAApL,EAAA6a,uBAAA/L,OAAA9O,EAAA8a,4BAAyE,cDYtoE,EACA,KACA,KACA,eDoBAxa,SGzBA1B,UAEAE,KAAAqV,mBAEAvV,gBAEAE,KAAAsV,qBAEAzV,SAEAC,kBAEAE,KAAAoF,UAAAmQ,IAAA,sBAAAvV,KAAAic,eAGAnc,oBAEAE,KAAAoF,UAAAqQ,KAAA,sBAAAzV,KAAAic,eAGAnc,gBAAAmM,GACAjM,KAAAoF,WACA6G,QCUApM,SAEAC,0BAEA,MAAA4B,EAAAjD,OAAAkD,SAAAC,YAAAC,iBACA,WAAAC,QAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAjC,KAAAkC,QACAC,EAAA,kBACAC,EAAA3D,OAAA4D,SAAAE,UACAC,KAAgC/D,OAAA4D,SAAAC,IAAAsT,IAAAsG,oBAA2C,IAAA5M,MAAAwG,YAC3E5W,KAEAT,OAAAkD,SAAAiB,kBAAAX,EAAAE,EAAAC,EAAAI,EAAAtD,GAEAT,OAAAkD,SAAAkB,MACAC,OAAAV,EACAE,IAAAE,EAGAO,OAAA7D,EAEA8D,aAAA,SAEAC,KAAAnI,IACA,MAAAoI,EAAApI,OACA2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,uBAAMT,GAErEjD,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAnB,EAAAmB,IACqBpI,IACrB2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,sBAAMT,GACrE,MAAAwB,EAAApI,OAEA2D,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAlB,EAAAlH,WCnEA+E,SAEAC,eAEAE,KAAAmc,0BACAlZ,KAAAuT,IAEAxW,KAAAoc,eAAA5F,EAAA1b,KAEAkF,KAAAqW,aAAAxK,OAAA7L,KAAAoc,mBAIAtc,UAAAuc,GACArc,KAAAqW,aAAAgG,GAGAvc,WAAA8E,GAEA5E,KAAAqW,aAAAxK,OACA7L,KAAAoc,eACApc,KAAAsW,oBACA,KAEAtW,KAAAqW,aAAAvK,kBAAAlH,EAAA0X,YAKAxc,WAAAkE,GAEAhE,KAAAuc,oBAAAvc,KAAAwc,eAEAxc,KAAAyc,iBAAAzY,GAEAhE,KAAA6Z,uBAAA7V,IAGAlE,WAAAkL,GAGAhL,KAAA0c,YAAA1R,IAGAlL,uBAAAkE,GAEA,OAAAA,EAAAvD,IAEA,gBAEAT,KAAA2c,0BAAA3Y,GACA,MAEA,gBAEAhE,KAAA4c,8BACA,MAGA,gBACA5c,KAAA6c,uBAAA7Y,GACA,MAEA,gBACAhE,KAAA8c,yBAAA9Y,KAOAlE,uBAAAkE,GAQAA,EAAA6C,QAEA7C,EAAAvD,KAAAT,KAAA+c,iBAAAtc,KACAuD,EAAA6C,SAAA,IAKA7C,EAAA6C,SAAA,EAIA7G,KAAAgd,gBAAAzE,gBACAvU,EAAAiD,cAAAmB,UACApE,EAAAiD,cAAAmB,UACAkH,KAAAkJ,MAAA,MACA,KAIAxY,KAAAqW,aAAAuE,yBAAA5W,IAGAlE,yBAAAkE,GAQA,GAAAA,EAAA6C,QAEA7C,EAAAvD,KAAAT,KAAA+c,iBAAAtc,KACAuD,EAAA6C,SAAA,QAMA,GAFA7C,EAAA6C,SAAA,EAGA7C,EAAAiD,cAAAmB,WACApE,EAAAiD,cAAAoB,QAGArI,KAAAgd,gBAAAzE,gBACAvU,EAAAiD,cAAAmB,UACApE,EAAAiD,cAAAoB,aAEiB,CAEjB,MAAAgG,GAAA,IAAAiB,MAAAmJ,aACA,IAAAnJ,MAAAoJ,cAAA,IAGA1Y,KAAAgd,gBAAAzE,gBACAlK,EACAiB,KAAAkJ,OAKAxY,KAAAqW,aAAAuE,yBAAA5W,IAGAlE,0BAAA8E,GAGA,GACA,OAAA5E,KAAAsW,oBAAApN,UACA,eAAA5F,KAAAtD,KAAAsW,oBAAA3M,eACA,CAEA,MAAAL,EAAAtJ,KAAAqW,aAAAnO,UAAA,aAEAtD,EAAAiC,SAAAyC,EAAAzC,UACAyC,EAAAzC,SAAA,EAEA7G,KAAAqW,aAAAuE,yBAAAtR,MAKAxJ,8BAGA,GACA,OAAAE,KAAAsW,oBAAApN,UACA,eAAA5F,KAAAtD,KAAAsW,oBAAA3M,eACA,CAEA,MAAAL,EAAAtJ,KAAAqW,aAAAnO,UAAA,aAEAoB,EAAAzC,SAAA,EAEA7G,KAAAqW,aAAAuE,yBAAAtR,KAIAxJ,kBAAAkE,EAAA4S,GACA,IAAA9C,GAAA,EACA,GAAA8C,EAAA1R,WAAAzE,GAEA,OAAAmW,EAAA1R,WAAAzE,IAEA,gBAEA,GACAmW,EAAA1R,WAAA+B,cAAAmB,YACAwO,EAAA1R,WAAA+B,cAAAoB,UACAuO,EAAA1R,WAAA+B,cAAAmB,WACAwO,EAAA1R,WAAA+B,cAAAoB,QACA,CACAyL,GAAA,EACA,MAAA3R,EACA,cAAAyU,EAAA1R,WAAAzE,GACA,OACA,SACAwc,EAAArG,EAAA1R,WAAA+B,cACAmB,UACA,OACA,OAEApI,KAAAoF,UAAAJ,MACA,2BACsC7C,IAAQ8a,IAC9C,WAGA,MAEA,gBAEA,GAAAjZ,KAAAvD,KAAAmW,EAAA1R,WAAAzE,IAAAmW,EAAA1R,WAAA2B,QACA,MAGA,GAAA+P,EAAA1R,WAAA2B,WAAA+P,EAAA1R,WAAA+B,cAAAoB,UACAuO,EAAA1R,WAAA+B,cAAAmB,WAAA,CACA0L,GAAA,EACA,MAAA3R,EACA,cAAAyU,EAAA1R,WAAAzE,GACA,OACA,SACAwc,EAAArG,EAAA1R,WAAA+B,cACAmB,UACA,OACA,OAEApI,KAAAoF,UAAAJ,MACA,2BACsC7C,IAAQ8a,IAC9C,WAEA,MAEA,IAAAC,EAAA,IAAA5N,KAAAsH,EAAA1R,WAAA+B,cAAAmB,WACA+U,EAAA,IAAA7N,KAAAsH,EAAA1R,WAAA+B,cAAAoB,SACA6U,EAAAzE,YAAAyE,EAAAxE,cAAA,IACAwE,EAAAC,IAEArJ,GAAA,EACA9T,KAAAoF,UAAAJ,MACA,qBACA,yBACA,YAGA,MAEA,gBAIA4R,EAAA1R,WAAA2B,UACA+P,EAAA1R,WAAA+B,cAAAmB,YAKApE,EACA4S,EAAA1R,WAAAzE,KAAAuD,EAAAvD,KACAqT,GAAA,GAGAA,GAAA,EAGAA,GAEA9T,KAAAoF,UAAAJ,MACA,qBACA,YACA,YAYA,OAAA8O,MC5RAjU,SACAC,aAAAoW,GAEAlW,KAAAgd,gBAAA9G,GAGApW,gBACAE,KAAAgd,iBAEAhd,KAAAgd,gBAAAI,gBAAApd,KAAAwc,cAAAxc,KAAAqW,aAAArW,KAAAsW,sBAIAxW,gBAAAud,GAEArd,KAAAwc,cAAAa,sBCdAviB,KAAA,MAGA0hB,iBAEAO,oBAEAzG,qBAEApN,SAAA,EAEAS,cAAA,EAgBA2S,YAGAgB,YAEAC,oBAAA,KAGA1d,SAEAC,gBAEAE,KAAAwd,uBAAA,IAEAxd,KAAAyd,uBAAA,MAEAzd,KAAA0c,gBAEA1c,KAAAgd,gBAAAU,eAEA1d,KAAAqW,aAAAsH,kBAGA7d,uBAAA8d,GACA5d,KAAAud,oBAAAK,GAGA9d,uBAAA8E,GACA5E,KAAAsW,oBAAA1R,GAGA9E,iBAAAkE,GAEAA,EAAAvD,KAAAT,KAAAwc,cAAA/b,KAEAT,KAAAwc,cAAAxY,EAEAhE,KAAA6d,kBAIA/d,oBAAAkE,GAEAhE,KAAA+c,iBAAA/Y,GAGAlE,YAAAqF,GACAnF,KAAAsd,SAAAnY,GAGArF,cACA,MAAAuF,KAgCA,OA/BArF,KAAAsd,SAAAnX,QAAAnC,IAEA,MAAAsF,GAEA7I,GAAAuD,EAAAvD,GAEAtD,KAAA6G,EAAA7G,KAEAgL,YAGAnE,EAAAvI,eAAA,mBAEAuI,EAAAiD,cAAAxL,eAAA,aACA6N,EAAAnB,QAAAnE,EAAAiD,cAAAkB,SAGAnE,EAAAiD,cAAAxL,eAAA,eACA6N,EAAAlB,UAAApE,EAAAiD,cAAAmB,WAGApE,EAAAiD,cAAAxL,eAAA,aACA6N,EAAAjB,QAAArE,EAAAiD,cAAAoB,SAEArE,EAAAiD,cAAAxL,eAAA,UACA6N,EAAA/F,KAAAS,EAAAiD,cAAA1D,OAIA8B,EAAAzJ,KAAA0N,KAEAjE,MC/GAvF,OACA,OAEAge,WAAA,QAEAC,YAAA/d,KAAAoa,QAEA4D,cACA3R,MAAA,EACA4R,KAAA,KACAne,WACArB,OAAAe,QAAAE,IAAA,aAMAG,SAEAC,eAAAkZ,GACAhZ,KAAA+d,YAAA/E,GAGAlZ,aAAA8E,EAAAsZ,GAEAle,KAAAwd,uBAAAU,GAGAle,KAAAyd,uBAAAre,KAAAC,MAAAD,KAAAgZ,UAAAxT,KAEA5E,KAAAme,WAAAne,KAAAsW,qBAEAtW,KAAAoe,gBAAA,IAIAte,cAEAE,KAAAqe,iBAGAve,eAEA,GAAAE,KAAA0F,kBAAA,KAAA1F,KAAAqW,cAAA,CAGA,IAAAvC,GAAA,EAOA,GARA9T,KAAAse,cAEAnY,QAAA7G,IACA,cAAAA,EAAAmB,IAAA,KAAAnB,EAAAiE,OACA9E,OAAAuP,OAAArN,QAAAsN,QAAA,oBACA6F,GAAA,KAGAA,EACA,OAGA9T,KAAAqZ,gBAAA,KAEA,MAAAkF,EAAAve,KAAAse,cAEAte,KAAAoF,UAAAJ,MAAAhF,KAAAud,oBAAAgB,KAGAve,KAAAqe,gBAEAre,KAAAoe,gBAAA,QRvCA/a,OAEA+W,SACA7W,KAAA6K,QACAvD,SAAA,IAGA/P,KAAA,MAGAoH,QAAAzD,OAAA4D,SAAAH,QAEAsc,cAAA,EAEAC,kBAAA,IAGA3e,UAEAE,KAAA4L,QAEA/L,SAEAC,OAEAE,KAAA0e,gBAIAC,uBAAA,SAAA3F,GACAhZ,KAAAwe,aAAAxF,MS/CepD,aAXCra,OAAA4E,EAAA,QAAA5E,CACd2f,ECTQ,WAAgB,IAAAha,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,mBAA6BO,YAAA,gBAAAL,OAAmCoe,MAAA1d,EAAA4c,WAAAe,QAAA3d,EAAA8c,cAAkD7c,IAAK2d,OAAA,SAAAzd,GAA0B,OAAAH,EAAA6d,YAAA1d,IAA+Bwd,QAAA,SAAAxd,GAA4B,OAAAH,EAAA8d,aAAA3d,KAAiC4O,OAAQrS,MAAAsD,EAAA,YAAA+K,SAAA,SAAAiE,GAAiDhP,EAAA6c,YAAA7N,GAAoBtD,WAAA,iBAA2BtM,EAAA,OAAYO,YAAA,wBAAAkM,OAA2CkS,iBAAA/d,EAAAsd,gBAAmCle,EAAA,OAAYoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,MAAAsD,EAAA,iBAAA0L,WAAA,qBAAwF/L,YAAA,mBAA+BK,EAAAJ,GAAA,kBAAAI,EAAAJ,GAAA,KAAAR,EAAA,SAAmDO,YAAA,kBAA4BP,EAAA,aAAkBE,OAAOsI,aAAA5H,EAAAoV,oBAAA5Q,kBAAAxE,EAAAwE,mBAAiFvE,IAAKqT,OAAAtT,EAAAge,WAAAlP,OAAA9O,EAAAie,WAAA7S,MAAApL,EAAAke,cAAuE,GAAAle,EAAAJ,GAAA,KAAAR,EAAA,QAA6BO,YAAA,iBAA2BP,EAAA,cAAmBa,IAAImL,MAAApL,EAAAme,iBAA0B,YDYtgC,EACA,KACA,KACA,eEfeC,GAEfC,UAAA/E,GAGAA,GADA,sBACAlX,KAAAkX,IAOA7Z,QAAA,OACA6e,UAAA,IANA7e,QAAA,YACA6e,UAAA,GASAC,iBAAAC,GAGAA,GADA,oBACApc,KAAAoc,IAOA/e,QAAA,OACA6e,UAAA,IANA7e,QAAA,WACA6e,UAAA,GASAG,kBAAAjK,GAEAA,GADA,iLACApS,KAAAoS,IAOA/U,QAAA,OACA6e,UAAA,IANA7e,QAAA,WACA6e,UAAA,GASAI,SAAApF,GAKAA,GADA,kDACAlX,KAAAkX,IAOA7Z,QAAA,OACA6e,UAAA,IANA7e,QAAA,WACA6e,UAAA,GASAK,UAAArF,GAEAA,GADA,sBACAlX,KAAAkX,IAOA7Z,QAAA,OACA6e,UAAA,IANA7e,QAAA,aACA6e,UAAA,GAeA1f,MAAAlC,GACA,MAAAkiB,EAAAliB,EAAAmiB,cAEA,QAAAD,EAAAxkB,QAAA,KAAAwkB,EAAAxkB,OACA,OACAqF,QAAA,4BACA6e,UAAA,GAIA,MADA,0CACAlc,KAAAwc,IAOAnf,QAAA,QACA6e,UAAA,IANA7e,QAAA,2BACA6e,UAAA,IAcAQ,WAAApiB,GAEAA,IADA,sBAEA0F,KAAA1F,IAEA+C,QAAA,aACA6e,UAAA,IAKA7e,QAAA,QACA6e,UAAA,GAIAS,QAAAriB,GACA,IAAAsiB,OAAA,sBACA5c,KAAA1F,IAEA+C,QAAA,UACA6e,UAAA,IAIA7e,QAAA,QACA6e,UAAA,ICxIwEW,GCexE3e,SCNA1B,UAEAE,KAAAqV,mBAEAvV,gBAEAE,KAAAsV,qBAEAzV,SAEAC,kBAEAE,KAAAoF,UAAAmQ,IAAA,+BAAAvV,KAAAogB,eAGAtgB,oBAEAE,KAAAoF,UAAAqQ,KAAA,+BAAAzV,KAAAogB,eAGAtgB,gBAAAmM,GACAjM,KAAAoF,WACA6G,QCIAnR,KAAA,MAGAulB,MAEAvP,MAAA,MAEAlT,MAAA,IAGA0iB,OAEAxP,MAAA,OAEAlT,MAAA,IAGA2iB,SAEAzP,MAAA,OAEAlT,MAAA,IAGA4iB,SAEA1P,MAAA,OAEAlT,MAAA,IAGA6iB,QAEA3P,MAAA,MAEAlT,MAAA,IAGA8iB,QAEA5P,MAAA,QAEAlT,MAAA,GAEA+iB,OAEAC,UAAA,EAEAC,UAAA3V,GAEA,KAAAA,EAAAwV,OAAA9iB,OAAAsN,EAAAwV,OAAA9iB,QAAAsN,EAAA4V,SAAAljB,OACAsN,EAAAlG,MAAA,mCAEAkG,EAAA4V,SAAAC,SAAA,EACA7V,EAAAwV,OAAAK,SAAA,GACA,IAEA7V,EAAA4V,SAAAC,SAAA,EACA7V,EAAAwV,OAAAK,SAAA,GACA,IAIAC,eAAAviB,OAAA4D,SAAA0T,QAAAtX,OAAA4D,SAAAC,IAAA2e,IAAAC,iBAAA,GAEAC,cAAA,GAEAJ,SAAA,GAGAD,UAEAhQ,MAAA,QAEAlT,MAAA,GAEA+iB,OAEAC,UAAA,EACAC,UAAA3V,GAEA,KAAAA,EAAA4V,SAAAljB,OAAAsN,EAAA4V,SAAAljB,QAAAsN,EAAAwV,OAAA9iB,OACAsN,EAAAlG,MAAA,mCAIAkG,EAAA4V,SAAAC,SAAA,EACA7V,EAAAwV,OAAAK,SAAA,GACA,IAEA7V,EAAA4V,SAAAC,SAAA,EACA7V,EAAAwV,OAAAK,SAAA,GACA,IAIAC,eAAAviB,OAAA4D,SAAA0T,QAAAtX,OAAA4D,SAAAC,IAAA2e,IAAAC,iBAAA,GAGAC,cAAA,GAEAJ,SAAA,GAGAK,OAEAtQ,MAAA,UAEAlT,MAAA,GAEA+iB,OAEAC,UAAA,EAEA9gB,UAAAoL,GAGA,MAAAmW,EAAgD/B,EAAYC,UAAArU,EAAAkW,MAAAxjB,OAQ5D,OANAsN,EAAAkW,MAAAL,SAAAM,EAAA7B,SAEAtU,EAAAkW,MAAAL,SAEA7V,EAAAlG,MAAA,UAAAqc,EAAA1gB,SAEA0gB,EAAA7B,WAIA2B,cAAA,GAEAJ,SAAA,GAGAO,OAEAxQ,MAAA,KAEAlT,MAAA,GAEAuH,SAAA1G,OAAA8iB,YAAAC,oBAAA/iB,OAAA8iB,YAAAE,YAEAd,OAEAC,UAAA,GAGAO,cAAA,IAGAO,UAEA5Q,MAAA,UAEAlT,MAAA,GAEAujB,cAAA,IAGAQ,SAEA7Q,MAAA,oBAEAlT,MAAA,GAEA+iB,OAEAC,UAAA,GAGAO,cAAA,IAGAS,OAEA9Q,MAAA,sBAEAlT,MAAA,GAEA+iB,OAEAC,UAAA,GAGAO,cAAA,IAGAU,KAEA/Q,MAAA,oBAEAlT,MAAA,GAEA+iB,OAEAC,UAAA,GAGAO,cAAA,IAGAW,KAEAhR,MAAA,oBAEAlT,MAAA,GAEAuH,SAAA1G,OAAA8iB,YAAAQ,0BAAAtjB,OAAA8iB,YAAAS,YAEArB,OAEAC,UAAA,GAGAO,cAAA,IAGAc,aAEAnR,MAAA,SAEAlT,MAAA,GAEAuH,SAAA1G,OAAA8iB,YAAAQ,0BAAAtjB,OAAA8iB,YAAAW,gBAEAvB,OAEAC,UAAA,GAGAO,cAAA,IAGAgB,OAEArR,MAAA,OAEAlT,MAAA,IAEAuH,SAAA1G,OAAA8iB,YAAAC,oBAAA,QAEAb,OAEAC,UAAA,GAGAO,cAAA,IAGAiB,MAEAtR,MAAA,OAEAlT,MAAA,GAGAujB,cAAA,IAGAkB,IAEAvR,MAAA,KAEAlT,MAAA,GAEAujB,cAAA,QF5RArhB,OACA,OAEAwiB,OAEAjC,KAAA,GAEAC,MAAA,GAEAC,QAAA,GAEAC,QAAA,GAEAC,OAAA,GAEAC,OAAA,GAEAI,SAAA,GAEAM,MAAA,GAEAE,MAAA,GAEAI,SAAA,GAEAC,QAAA,GAEAC,MAAA,GAEAC,IAAA,GAEAC,IAAA,GAEAG,YAAA,GAEAE,MAAA,GACAC,KAAA,GACAC,GAAA,GAGAE,OAAA,GAEAC,OAAA,GAEAC,SAAA,GAEAC,QAAA,GAEAC,QAAA,GAEAC,IAAA5iB,KAAAoF,UAAAyd,gBAAAD,IAEAE,IAAA9iB,KAAAoF,UAAAyd,gBAAAC,IAEAC,MAAA/iB,KAAAoF,UAAAyd,gBAAAE,SAsBAjjB,UAEAE,KAAA4L,QAEA9L,UAEAE,KAAAgF,MAAA,QAAAhF,OAEAH,SACAmjB,WAAA,WAGA,IAFA,IAAAC,KACAC,EAAAC,SAAAC,kBAAA,gBACAhoB,EAAA,EAAyBA,EAAA8nB,EAAA5nB,OAAuBF,IAChD8nB,EAAA9nB,GAAAyL,SACAoc,EAAArnB,KAAAsnB,EAAA9nB,GAAAwC,OAGAoC,KAAAsiB,MAAAF,KAAAa,EAAAnI,KAAA,MAGAhb,SAKAA,cAAAkE,EAAApG,GACA,UAAAoG,EAAA8M,QACA9Q,KAAA0gB,OAAAK,SAAA,EACA/gB,KAAA0gB,OAAAS,eAAA,GAIAnhB,KAAAqjB,iBAAArf,EAAApG,GAEAoC,KAAAsjB,kBAAAtf,GACA,UAAAA,EAAA8M,QACA9Q,KAAAwiB,OAAA5kB,EAAAT,MAEA,UAAA6G,EAAA8M,QACA9Q,KAAAyiB,SAAA7kB,EAAAT,OAKA2C,eAAAyjB,GAEAvjB,KAAAwjB,MAAAD,GAAAE,eAWAzjB,KAAAwjB,MAAAD,GAAAG,eAGA5jB,iBAAAkE,GAEA,IAAA8P,GAAA,EAKA,OAJA9P,KAAA2c,OAAA3c,EAAA2c,MAAAC,WACA9M,EAAA1F,QAAApK,EAAApG,OACAoG,EAAAmd,cAAArN,EAAA,mBAEAA,GAGAhU,kBAAAkE,GAEA,IAAA8P,GAAA,EAKA,OAJA9P,KAAA2c,OAAA,mBAAA3c,EAAA2c,MAAAE,YAEA/M,EAAA9P,EAAA2c,MAAAE,UAAA7gB,OAEA8T,GAGAhU,WACA,WAAAgC,QAAA,CAAAC,EAAAC,KAEA,IAAA2hB,GAAA,EAEApoB,OAAA6N,KAAApJ,KAAAsiB,OACAnc,QAAAjI,IAEA,MAAAoL,EAAAtJ,KAAA9B,GAEA,GAAAoL,EAAA,CAEA,MAAAwK,EAAA9T,KAAAqjB,iBAAA/Z,GAEAwK,IAAAxK,EAAAyX,UACA4C,GAAA,GAGA7P,GAAA9T,KAAAsjB,kBAAAha,KACAqa,GAAA,GAGA3jB,KAAAsiB,MAAApkB,GAAAoL,EAAA1L,SAIA+lB,EAAA5hB,EAAA/B,KAAA4jB,gBAAA5hB,EAAA2hB,MAKA7jB,eAmBA,OAhBAvE,OAAA6N,KAAApJ,KAAAsiB,OACAnc,QAAAjI,IAEA,MAAAoL,EAAAtJ,KAAA9B,GAEAoL,IAEAtJ,KAAAsiB,MAAApkB,GAAAoL,EAAA1L,SAIAoC,KAAAsiB,MAAAE,OAAAxiB,KAAAwiB,OAEAxiB,KAAAsiB,MAAAG,SAAAziB,KAAAyiB,SACAziB,KAAAgjB,aAEAhjB,KAAAsiB,OAIAxiB,aAAA+jB,GACA,uBAAAtoB,OAAAC,UAAA2D,SAAAzD,KAAAmoB,KAEAtoB,OAAA6N,KAAAya,GACA1d,QAAAjI,IACA,IAEA8B,KAAAsiB,MAAA7mB,eAAAyC,KAEA8B,KAAAsiB,MAAApkB,GAAA2lB,EAAA3lB,GAEA8B,KAAA9B,KAEA8B,KAAA9B,GAAAN,MAAAimB,EAAA3lB,GAEA8B,KAAAsjB,kBAAAtjB,KAAA9B,MAGyB,MAAAoB,OAMzBU,KAAAwiB,OAAAqB,EAAArB,OAEAxiB,KAAAyiB,SAAAoB,EAAApB,SACA,MAAAoB,EAAAzB,MAAA,IAAAyB,EAAAzB,MAGA,IAFA,IAAA0B,EAAAD,EAAAzB,KAAAjT,MAAA,KACA+T,EAAAC,SAAAC,kBAAA,gBACA9mB,EAAA,EAAgCA,EAAAwnB,EAAAxoB,OAAegB,IAC/C,QAAAlB,EAAA,EAAqCA,EAAA8nB,EAAA5nB,OAAuBF,IAC5D8nB,EAAA9nB,GAAAwC,OAAAkmB,EAAAxnB,KACA4mB,EAAA9nB,GAAAyL,QAAA,cGhPekd,aAXCxoB,OAAA4E,EAAA,QAAA5E,CACd4kB,ECTQ,WAAgB,IAAAjf,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBO,YAAA,mBAA6BP,EAAA,UAAeO,YAAA,0BAAoCP,EAAA,QAAAY,EAAAJ,GAAAI,EAAAH,GAAAG,EAAAmf,KAAAvP,OAAA,IAAA5P,EAAAH,GAAAG,EAAAmf,KAAAziB,UAAAsD,EAAAJ,GAAA,KAAAR,EAAA,QAAAY,EAAAJ,GAAAI,EAAAH,GAAAG,EAAAof,MAAAxP,OAAA,IAAA5P,EAAAH,GAAAG,EAAA8iB,GAAA,cAAA9iB,GAAAof,MAAA1iB,OAAA,SAAAsD,EAAAJ,GAAA,KAAAR,EAAA,OAAkNO,YAAA,oBAA8BP,EAAA,SAAcO,YAAA,mBAA6BK,EAAA+iB,GAAA,GAAA/iB,EAAAJ,GAAA,KAAAR,EAAA,SAAAA,EAAA,MAAAA,EAAA,MAAsDO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,gBAAAoD,UAAsCC,YAAAhD,EAAAH,GAAAG,EAAAqf,QAAAzP,YAAyC5P,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,OAAmCO,YAAA,kBAA4BP,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAsD,EAAAqf,QAAA,MAAA3T,WAAA,kBAAoF/L,YAAA,4BAAAL,OAAiD+C,KAAA,OAAA2gB,SAAA,IAA4BjgB,UAAWrG,MAAAsD,EAAAqf,QAAA,OAA4Bpf,IAAKgjB,MAAA,SAAA9iB,GAAyBA,EAAA+iB,OAAAC,WAAsCnjB,EAAAojB,KAAApjB,EAAAqf,QAAA,QAAAlf,EAAA+iB,OAAAxmB,eAAsDsD,EAAAJ,GAAA,KAAAR,EAAA,MAA2BO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,gBAAAoD,UAAsCC,YAAAhD,EAAAH,GAAAG,EAAAsf,QAAA1P,UAAyC5P,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,OAAoDO,YAAA,kBAA4BP,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAsD,EAAAsf,QAAA,MAAA5T,WAAA,kBAAoF/L,YAAA,4BAAAL,OAAiD+C,KAAA,OAAA2gB,SAAA,IAA4BjgB,UAAWrG,MAAAsD,EAAAsf,QAAA,OAA4Brf,IAAKgjB,MAAA,SAAA9iB,GAAyBA,EAAA+iB,OAAAC,WAAsCnjB,EAAAojB,KAAApjB,EAAAsf,QAAA,QAAAnf,EAAA+iB,OAAAxmB,eAAsDsD,EAAAJ,GAAA,KAAAR,EAAA,MAA2BO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,4BAAAoD,UAAkDC,YAAAhD,EAAAH,GAAAG,EAAAuf,OAAA3P,UAAwC5P,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,OAAmDO,YAAA,kBAA4BP,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAsD,EAAAuf,OAAA,MAAA7T,WAAA,iBAAkF/L,YAAA,mBAAAL,OAAwC+C,KAAA,OAAAghB,UAAA,KAAAL,SAAA,IAA6CjgB,UAAWrG,MAAAsD,EAAAuf,OAAA,OAA2Btf,IAAKgjB,MAAA,SAAA9iB,GAAyBA,EAAA+iB,OAAAC,WAAsCnjB,EAAAojB,KAAApjB,EAAAuf,OAAA,QAAApf,EAAA+iB,OAAAxmB,iBAAqDsD,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,MAAsCO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,0BAAAoD,UAAgDC,YAAAhD,EAAAH,GAAAG,EAAAwf,OAAA5P,UAAwC5P,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAA2CyM,OAAA7L,EAAAwf,OAAAS,cAAAjgB,EAAAwf,OAAAK,QAAA,gBAAoEzgB,EAAA,OAAYO,YAAA,kBAA4BP,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAsD,EAAA,OAAA0L,WAAA,WAAsE/L,YAAA,mBAAAL,OAAwC+C,KAAA,OAAAghB,UAAA,KAAAL,SAAA,IAA6CjgB,UAAWrG,MAAAsD,EAAA,QAAqBC,IAAKgjB,MAAA,SAAA9iB,GAAyBA,EAAA+iB,OAAAC,YAAsCnjB,EAAAshB,OAAAnhB,EAAA+iB,OAAAxmB,eAAiCsD,EAAAJ,GAAA,KAAAR,EAAA,MAA2BO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,yBAAAoD,UAA+CC,YAAAhD,EAAAH,GAAAG,EAAA4f,SAAAhQ,UAA0C5P,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAA2CyM,OAAA7L,EAAA4f,SAAAK,cAAAjgB,EAAAwf,OAAAK,QAAA,gBAAsEzgB,EAAA,kBAAuBE,OAAOgkB,cAAA,OAAAC,eAAA,aAAA1U,SAAA,GAAA2U,UAAA,GAAAC,cAAA,GAAiGxjB,IAAK6O,OAAA,SAAA3O,GAEnrG,IADA,IAAAjG,EAAAwpB,UAAAtpB,OAAAupB,EAAAle,MAAAvL,GACAA,KAAAypB,EAAAzpB,GAAAwpB,UAAAxpB,GACA,OAAA8F,EAAA4jB,cAAA7oB,WAAA,GAAAiF,EAAA4f,UAAAiE,OAAAF,MAA8E5U,OAAQrS,MAAAsD,EAAA4f,SAAA,MAAA7U,SAAA,SAAAiE,GAAoDhP,EAAAojB,KAAApjB,EAAA4f,SAAA,QAAA5Q,IAAqCtD,WAAA,qBAA8B,GAAA1L,EAAAJ,GAAA,KAAAR,EAAA,MAA2BO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,yBAAAoD,UAA+CC,YAAAhD,EAAAH,GAAAG,EAAAkgB,MAAAtQ,UAAuC5P,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAA6CyM,OAAA7L,EAAAkgB,MAAAD,cAAAjgB,EAAAkgB,MAAAL,QAAA,gBAAkEzgB,EAAA,OAAYO,YAAA,kBAA4BP,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAsD,EAAAkgB,MAAA,MAAAxU,WAAA,gBAAgF/L,YAAA,mBAAAL,OAAwC+C,KAAA,OAAAghB,UAAA,MAA+BtgB,UAAWrG,MAAAsD,EAAAkgB,MAAA,OAA0BjgB,IAAK6O,OAAA,SAAA3O,GAA0B,OAAAH,EAAA4jB,cAAA5jB,EAAAkgB,QAAoC+C,MAAA,SAAA9iB,GAA0BA,EAAA+iB,OAAAC,WAAsCnjB,EAAAojB,KAAApjB,EAAAkgB,MAAA,QAAA/f,EAAA+iB,OAAAxmB,iBAAoDsD,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,MAAsCO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,yBAAAoD,UAA+CC,YAAAhD,EAAAH,GAAAG,EAAAogB,MAAAxQ,UAAuC5P,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAwCyM,OAAA7L,EAAAogB,MAAAH,iBAAgC7gB,EAAA,cAAmBuU,IAAA,mBAAArU,OAA8B1F,KAAAoG,EAAAogB,MAAAnc,SAAA6f,WAAA,GAAAN,UAAA,IAAyDvjB,IAAK8jB,kBAAA,SAAA5jB,GAAmC,OAAAH,EAAAgkB,eAAA,qBAA8ClV,OAAA,SAAA3O,GAEvzC,IADA,IAAAjG,EAAAwpB,UAAAtpB,OAAAupB,EAAAle,MAAAvL,GACAA,KAAAypB,EAAAzpB,GAAAwpB,UAAAxpB,GACA,OAAA8F,EAAA4jB,cAAA7oB,WAAA,GAAAiF,EAAAogB,OAAAyD,OAAAF,MAA2E5U,OAAQrS,MAAAsD,EAAAogB,MAAA,MAAArV,SAAA,SAAAiE,GAAiDhP,EAAAojB,KAAApjB,EAAAogB,MAAA,QAAApR,IAAkCtD,WAAA,kBAA2B,GAAA1L,EAAAJ,GAAA,KAAAR,EAAA,MAA2BO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,gBAAAoD,UAAsCC,YAAAhD,EAAAH,GAAAG,EAAAwgB,SAAA5Q,UAA0C5P,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,OAAyDO,YAAA,kBAA4BP,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAsD,EAAAwgB,SAAA,MAAA9U,WAAA,mBAAsF/L,YAAA,mBAAAL,OAAwC+C,KAAA,OAAAghB,UAAA,MAA+BtgB,UAAWrG,MAAAsD,EAAAwgB,SAAA,OAA6BvgB,IAAKgjB,MAAA,SAAA9iB,GAAyBA,EAAA+iB,OAAAC,WAAsCnjB,EAAAojB,KAAApjB,EAAAwgB,SAAA,QAAArgB,EAAA+iB,OAAAxmB,eAAuDsD,EAAAJ,GAAA,KAAAR,EAAA,MAA2BO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,yBAAAoD,UAA+C2L,UAAA1O,EAAAH,GAAAG,EAAAygB,QAAA7Q,YAAuC5P,EAAAJ,GAAA,KAAAR,EAAA,MAAyByM,OAAA7L,EAAAygB,QAAAR,iBAAkC7gB,EAAA,OAAYO,YAAA,kBAA4BP,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAsD,EAAAygB,QAAA,MAAA/U,WAAA,kBAAoF/L,YAAA,mBAAAL,OAAwC+C,KAAA,OAAAqb,MAAA1d,EAAAygB,QAAA/jB,MAAA2mB,UAAA,MAAyDtgB,UAAWrG,MAAAsD,EAAAygB,QAAA,OAA4BxgB,IAAK6O,OAAA,SAAA3O,GAA0B,OAAAH,EAAA4jB,cAAA5jB,EAAAygB,UAAsCwC,MAAA,SAAA9iB,GAA0BA,EAAA+iB,OAAAC,WAAsCnjB,EAAAojB,KAAApjB,EAAAygB,QAAA,QAAAtgB,EAAA+iB,OAAAxmB,iBAAsDsD,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,MAAsCO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,yBAAAoD,UAA+C2L,UAAA1O,EAAAH,GAAAG,EAAA0gB,MAAA9Q,YAAqC5P,EAAAJ,GAAA,KAAAR,EAAA,MAAyByM,OAAA7L,EAAA0gB,MAAAT,iBAAgC7gB,EAAA,OAAYO,YAAA,kBAA4BP,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAsD,EAAA0gB,MAAA,MAAAhV,WAAA,gBAAgF/L,YAAA,mBAAAL,OAAwC+C,KAAA,OAAAqb,MAAA1d,EAAA0gB,MAAAhkB,MAAA2mB,UAAA,MAAuDtgB,UAAWrG,MAAAsD,EAAA0gB,MAAA,OAA0BzgB,IAAK6O,OAAA,SAAA3O,GAA0B,OAAAH,EAAA4jB,cAAA5jB,EAAA0gB,QAAoCuC,MAAA,SAAA9iB,GAA0BA,EAAA+iB,OAAAC,WAAsCnjB,EAAAojB,KAAApjB,EAAA0gB,MAAA,QAAAvgB,EAAA+iB,OAAAxmB,eAAoDsD,EAAAJ,GAAA,KAAAR,EAAA,MAA2BO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,yBAAAoD,UAA+C2L,UAAA1O,EAAAH,GAAAG,EAAA2gB,IAAA/Q,YAAmC5P,EAAAJ,GAAA,KAAAR,EAAA,MAAyByM,OAAA7L,EAAA2gB,IAAAV,iBAA8B7gB,EAAA,OAAYO,YAAA,kBAA4BP,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAsD,EAAA2gB,IAAA,MAAAjV,WAAA,cAA4E/L,YAAA,mBAAAL,OAAwC+C,KAAA,OAAAqb,MAAA1d,EAAA2gB,IAAAjkB,MAAA2mB,UAAA,MAAqDtgB,UAAWrG,MAAAsD,EAAA2gB,IAAA,OAAwB1gB,IAAK6O,OAAA,SAAA3O,GAA0B,OAAAH,EAAA4jB,cAAA5jB,EAAA2gB,MAAkCsC,MAAA,SAAA9iB,GAA0BA,EAAA+iB,OAAAC,WAAsCnjB,EAAAojB,KAAApjB,EAAA2gB,IAAA,QAAAxgB,EAAA+iB,OAAAxmB,eAAkDsD,EAAAJ,GAAA,KAAAR,EAAA,MAA2BO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,yBAAAoD,UAA+C2L,UAAA1O,EAAAH,GAAAG,EAAA4gB,IAAAhR,YAAmC5P,EAAAJ,GAAA,KAAAR,EAAA,MAAyByM,OAAA7L,EAAA4gB,IAAAX,iBAA8B7gB,EAAA,cAAmBuU,IAAA,iBAAArU,OAA4B1F,KAAAoG,EAAA4gB,IAAA3c,SAAA6f,WAAA,GAAAN,UAAA,GAAAS,gBAAA,IAA0EhkB,IAAK8jB,kBAAA,SAAA5jB,GAAmC,OAAAH,EAAAgkB,eAAA,mBAA4ClV,OAAA,SAAA3O,GAEloG,IADA,IAAAjG,EAAAwpB,UAAAtpB,OAAAupB,EAAAle,MAAAvL,GACAA,KAAAypB,EAAAzpB,GAAAwpB,UAAAxpB,GACA,OAAA8F,EAAA4jB,cAAA7oB,WAAA,GAAAiF,EAAA4gB,KAAAiD,OAAAF,MAAyE5U,OAAQrS,MAAAsD,EAAA4gB,IAAA,MAAA7V,SAAA,SAAAiE,GAA+ChP,EAAAojB,KAAApjB,EAAA4gB,IAAA,QAAA5R,IAAgCtD,WAAA,gBAAyB,KAAA1L,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,MAAsCO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,yBAAAoD,UAA+CC,YAAAhD,EAAAH,GAAAG,EAAA+gB,YAAAnR,YAA6C5P,EAAAJ,GAAA,KAAAR,EAAA,MAAyByM,OAAA7L,EAAA+gB,YAAAd,iBAAsC7gB,EAAA,cAAmBuU,IAAA,yBAAArU,OAAoC1F,KAAAoG,EAAA+gB,YAAA9c,SAAA6f,WAAA,GAAAN,UAAA,GAAAS,gBAAA,IAAkFhkB,IAAK8jB,kBAAA,SAAA5jB,GAAmC,OAAAH,EAAAgkB,eAAA,2BAAoDlV,OAAA,SAAA3O,GAEvoB,IADA,IAAAjG,EAAAwpB,UAAAtpB,OAAAupB,EAAAle,MAAAvL,GACAA,KAAAypB,EAAAzpB,GAAAwpB,UAAAxpB,GACA,OAAA8F,EAAA4jB,cAAA7oB,WAAA,GAAAiF,EAAA+gB,aAAA8C,OAAAF,MAAiF5U,OAAQrS,MAAAsD,EAAA+gB,YAAA,MAAAhW,SAAA,SAAAiE,GAAuDhP,EAAAojB,KAAApjB,EAAA+gB,YAAA,QAAA/R,IAAwCtD,WAAA,wBAAiC,GAAA1L,EAAAJ,GAAA,KAAAR,EAAA,MAA2BO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,yBAAAoD,UAA+CC,YAAAhD,EAAAH,GAAAG,EAAAihB,MAAArR,YAAuC5P,EAAAJ,GAAA,KAAAR,EAAA,MAAyBO,YAAA,iBAAAkM,OAAA7L,EAAAihB,MAAAhB,iBAA6D7gB,EAAA,mBAAwBE,OAAO2E,SAAAjE,EAAAihB,MAAAhd,UAA8BhE,IAAK6O,OAAA,SAAA3O,GAE1gB,IADA,IAAAjG,EAAAwpB,UAAAtpB,OAAAupB,EAAAle,MAAAvL,GACAA,KAAAypB,EAAAzpB,GAAAwpB,UAAAxpB,GACA,OAAA8F,EAAA4jB,cAAA7oB,WAAA,GAAAiF,EAAAihB,OAAA4C,OAAAF,MAA2E5U,OAAQrS,MAAAsD,EAAAihB,MAAA,MAAAlW,SAAA,SAAAiE,GAAiDhP,EAAAojB,KAAApjB,EAAAihB,MAAA,QAAAjS,IAAkCtD,WAAA,kBAA2B,GAAA1L,EAAAJ,GAAA,KAAAR,EAAA,MAA2BO,YAAA,kBAA4BK,EAAAJ,GAAA,KAAAR,EAAA,QAAAY,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,MAAuDO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,iBAAAoD,UAAuCC,YAAAhD,EAAAH,GAAAG,EAAAkhB,KAAAtR,YAAsC5P,EAAAJ,GAAA,KAAAR,EAAA,MAAyBO,YAAA,oBAAAL,OAAuC4kB,QAAA,OAAe9kB,EAAA,SAAcO,YAAA,MAAAL,OAAyB+C,KAAA,WAAApG,KAAA,eAAAS,MAAA,KAAoDuD,IAAKC,MAAA,SAAAC,GAAyB,OAAAH,EAAA8hB,iBAA0B9hB,EAAAJ,GAAA,oDAAAR,EAAA,SAAyEO,YAAA,MAAAL,OAAyB+C,KAAA,WAAApG,KAAA,eAAAS,MAAA,KAAoDuD,IAAKC,MAAA,SAAAC,GAAyB,OAAAH,EAAA8hB,iBAA0B9hB,EAAAJ,GAAA,oDAAAR,EAAA,SAAyEO,YAAA,MAAAL,OAAyB+C,KAAA,WAAApG,KAAA,eAAAS,MAAA,KAAoDuD,IAAKC,MAAA,SAAAC,GAAyB,OAAAH,EAAA8hB,iBAA0B9hB,EAAAJ,GAAA,0DAAAR,EAAA,SAA+EO,YAAA,MAAAL,OAAyB+C,KAAA,WAAApG,KAAA,eAAAS,MAAA,KAAoDuD,IAAKC,MAAA,SAAAC,GAAyB,OAAAH,EAAA8hB,iBAA0B9hB,EAAAJ,GAAA,4DAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,MAAmGO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,gBAAAoD,UAAsCC,YAAAhD,EAAAH,GAAAG,EAAAmhB,GAAAvR,UAAoC5P,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAwCE,OAAO4kB,QAAA,OAAe9kB,EAAA,OAAYO,YAAA,kBAA4BP,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAsD,EAAAmhB,GAAA,MAAAzV,WAAA,aAA0E/L,YAAA,mBAAAL,OAAwC+C,KAAA,OAAAghB,UAAA,MAA+BtgB,UAAWrG,MAAAsD,EAAAmhB,GAAA,OAAuBlhB,IAAKgjB,MAAA,SAAA9iB,GAAyBA,EAAA+iB,OAAAC,WAAsCnjB,EAAAojB,KAAApjB,EAAAmhB,GAAA,QAAAhhB,EAAA+iB,OAAAxmB,2BAChzD,WAAiB,IAAawC,EAAbJ,KAAaK,eAA0BC,EAAvCN,KAAuCO,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,YAAAA,EAAA,OAAgCO,YAAA,iBAA/Fb,KAA0Hc,GAAA,KAAAR,EAAA,OAA1HN,KAA0Hc,GAAA,KAAAR,EAAA,OAA8CO,YAAA,iBAAxKb,KAAmMc,GAAA,KAAAR,EAAA,OAAnMN,KAAmMc,GAAA,KAAAR,EAAA,OAA8CO,YAAA,iBAAjPb,KAA4Qc,GAAA,KAAAR,EAAA,YDJhT,EACA,KACA,KACA,eEfe+kB,EAAA,CAAArhB,EAAAkF,EAAAS,MAKfT,WAEAS,gBAgBA2S,QAAAtY,EAAAshB,WCde,IAAAC,GACfzqB,KAAA,MAGA0qB,aAAA,GAEArgB,YAEAD,gBAGArF,SAEAC,gBACAE,KAAAmF,aAIArF,YAAAkE,EAAAgV,GACA,GAAAA,EAAA,CACA,MAAAhV,EAAAshB,SAAAhqB,SAAA,IAAA0I,EAAAgS,MAAA,MAAAhS,EAAAyhB,OACA,OAEA,IAAAC,EAAA,EACA,QAAAtqB,EAAA4E,KAAAmF,SAAA7J,OAAA,EAAsDF,GAAA,EAAQA,IAC9D,MAAA4E,KAAAmF,SAAA/J,GAAAkqB,SAAAhqB,OAGA,OAFAoqB,EAAAtqB,OACA4E,KAAAmF,SAAA3I,OAAAkpB,EAAA,IAAA1hB,QAKAhE,KAAAmF,SAAAvJ,KAAAoI,IAKAlE,mBAAA0D,EAAAkN,EAAA,GAEA1Q,KAAAmF,SAAA3I,OAAAgH,EAAAkN,IAIA5Q,cAAA8E,GACA5E,KAAAkF,WAAAN,GAIA9E,gBAAAlC,GACAoC,KAAAwlB,aAAA5nB,GAIAkC,oBAEAE,KAAA2lB,gBAAA,KAIA7lB,gBAAA0D,GAEAxD,KAAA4lB,mBAAApiB,GAEAxD,KAAA6lB,eAIA/lB,WAEA,MAAAgmB,EAAA7c,SAAAjJ,KAAAwlB,aAAA,IAEAO,EAAA/lB,KAAAgmB,QAAAC,sBAIAH,EAAA,GAAAC,EA5EY,GA8EZ/lB,KAAAkmB,aAAAJ,GAGaC,GAjFD,GAkFZ/lB,KAAAgF,MAAA,6CAGAhF,KAAAmmB,YAAAnmB,KAAAomB,mBAKAtmB,aAAAumB,GAEA,QAAAjrB,EAAA,EAA2BA,EAAAirB,EAASjrB,IACpC4E,KAAAmmB,YAAAnmB,KAAAomB,kBAGApmB,KAAAsmB,qBAIAxmB,cAAAkE,EAAAR,GAGAQ,EAAAshB,YAEAtlB,KAAAumB,sBAAAviB,GAEAhE,KAAAqjB,iBAAArf,EAAA,aAIAlE,cAAAwlB,GAEAtlB,KAAAkF,WAAAogB,WAEAtlB,KAAAumB,sBAAAvmB,KAAAkF,YAEAlF,KAAAqjB,iBAAArjB,KAAAkF,WAAA,aAIApF,yBAAA0a,GAEA,QAAAA,EACA,SAGA,MAAA9S,EAAAuB,SAAAuR,EAAA,IAEA,GAAAhN,OAAAgZ,MAAA9e,GAIA,OAHA1H,KAAAgF,MAAA,oBAEAhF,KAAA2lB,gBAAA,KACA,EAGA,GAAAje,EAAA,EAIA,OAHA1H,KAAAgF,MAAA,wBAEAhF,KAAA2lB,gBAAA,KACA,EAGA,MAEAc,EAjJY,GA+IZzmB,KAAAgmB,QAAAC,sBAGAve,EAAA+e,IACAzmB,KAAAgF,MAAA,iDAA6EyhB,QAE7EzmB,KAAA2lB,gBAAAc,KAKA3mB,sBAAAkE,GAEAA,EAAA0iB,WAAA1mB,KAAA2mB,aAAA3iB,IAIA4iB,eAAA5iB,GACAA,EAAAmE,QAAA7M,OAAA,kCAA6E0I,EAAAmE,QAAAH,IAAAxB,UAAmCA,EAAArJ,aAChH2d,KAAA,WAA0B,GAI1Bhb,iBAAAkE,EAAA9F,GAEA,IAAAylB,GAAA,EA2BA,OAxBA3f,EAAA0iB,WAEA/f,MAAAC,QAAA5C,EAAA9F,MAAA8F,EAAA9F,GAAA5C,QAEA0I,YAAmC9F,MAAI,EAEvCylB,GAAA,GAEiBhd,MAAAC,QAAA5C,EAAA9F,KAAA8F,EAAA9F,IAAA,QAAAA,EAOjB8F,YAAmC9F,MAAI,GALvC8F,YAAmC9F,MAAI,EAEvCylB,GAAA,GAOA3jB,KAAA6mB,SAAA1gB,QAAA2gB,IAEA9iB,YAAmC8iB,MAAK,IAGxCnD,GAIA7jB,mBAEA,IAAAinB,GAAA,EAaA,OAXA/mB,KAAAmF,SAAAmN,MAAAtO,IAIA,OAFAhE,KAAA2mB,aAAA3iB,KAIA+iB,GAAA,GACA,KAIAA,GAIAjnB,eAEA,MAAAuF,KAoBA,OAlBArF,KAAAmF,SAAAgB,QAAA,CAAAnC,EAAAR,KAKA,GAHAQ,EAAAgjB,IAAAxjB,EAGAxD,KAAA2mB,aAAA3iB,GAAA,CAEA,MAAAsF,KAEAtJ,KAAA6mB,SAAA1gB,QAAAjI,IAEAoL,EAAApL,GAAA8F,EAAA9F,KAGAmH,EAAAzJ,KAAA0N,MAIAjE,GAIAvF,aAAAqF,EAAA8hB,GAEAtgB,MAAAC,QAAAzB,MAAA7J,OAAA,GAEA2rB,EAIAjnB,KAAAknB,gBAGAlnB,KAAAmnB,wBAGAhiB,EAAAgB,QAAAnC,IAEAA,EAAA0iB,WAAA1mB,KAAA2mB,aAAA3iB,GAEA,MAAAsF,EAAAtJ,KAAAomB,iBAEA7qB,OAAA6N,KAAApF,GACAmC,QAAAjI,IACAoL,EAAApL,GAAA8F,EAAA9F,KAGA8B,KAAAmmB,YAAA7c,KAGAtJ,KAAA6lB,eAIA7lB,KAAAmnB,yBAKArnB,kBACA,OAAAE,KAAAmF,SAAA7J,QAIAwE,wBAEA,MAAAuF,KAWA,OATArF,KAAAmF,SAAAgB,QAAAnC,IAEAhE,KAAA2mB,aAAA3iB,IACAqB,EAAAzJ,KAAAoI,KAIAhE,KAAAmF,SAAAE,EAEAA,GAIAvF,aAAAkE,GACA,OAAAhE,KAAA6mB,SAAA1M,KAAAjc,GAAAyI,MAAAC,QAAA5C,EAAA9F,IAAA8F,EAAA9F,GAAA5C,OAAA,EAAA0I,EAAA9F,KAIA4B,eAAA0D,EAAA+f,GAEAvjB,KAAAwjB,MAAAD,GAAA/f,GAAAigB,eAWAzjB,KAAAwjB,MAAAD,GAAA/f,GAAAkgB,iBChTe,ICzByD0D,GD0BxE5lB,SEjBA1B,UAEAE,KAAAqV,mBAEAvV,gBAEAE,KAAAsV,qBAEAzV,SAEAC,kBAEAE,KAAAoF,UAAAmQ,IAAA,+BAAAvV,KAAAqnB,eAEArnB,KAAAoF,UAAAmQ,IAAA,8BAAAvV,KAAAogB,eAGAtgB,oBAEAE,KAAAoF,UAAAqQ,KAAA,+BAAAzV,KAAAqnB,eAEArnB,KAAAoF,UAAAqQ,KAAA,8BAAAzV,KAAAogB,eAGAtgB,gBAAAmM,GACAjM,KAAAoF,WACA6G,OFT0BsZ,GAC1BliB,OACAikB,UACA/jB,KAAA6K,QACAvD,SAAA,IAGA/P,KAAA,MAGAysB,SAAA9oB,OAAA8iB,YAAAC,oBAAA/iB,OAAA8iB,YAAAiG,cAEAC,OAAAhpB,OAAA8iB,YAAAQ,0BAAAtjB,OAAA8iB,YAAAS,YAEA0F,WAAAjpB,OAAA8iB,YAAAQ,0BAAAtjB,OAAA8iB,YAAAW,gBAEA2E,UAEA,MAEA,MAEA,QAEA,QAEA,MAEA,SAEA,cAIA/mB,UAEAE,KAAA4L,QAEA9L,UAEAE,KAAAgF,MAAA,QAAAhF,OAEAH,SACAC,cAAAkE,EAAAR,GACA,GAAAxD,KAAAmF,SAAA7J,QAAAkI,EAAA,EACA,OAEAxD,KAAAmF,SAAA3B,EAAA,GACAiiB,OAAAzhB,EAAAyhB,OAAA,GAAAzhB,EAAAshB,SAAAhqB,QACA0E,KAAAmF,SAAA3B,EAAA,GAAA8hB,SAAAthB,EAAAshB,SACAtlB,KAAAmF,SAAA3B,EAAA,GAAAmkB,gBAAA3jB,EAAA2jB,iBAEA3nB,KAAAgF,MAAA,yCA2BAlF,OAEAE,KAAA4nB,gBAIA9nB,aAAAumB,EAAA,GAEArmB,KAAAkmB,aAAAG,IAGAvmB,eAAAkE,GAEAA,EAAAyhB,OAEAzlB,KAAA6F,cAAA7B,GAEAhE,KAAAqZ,gBAAA,KAEA,MAAApR,EAAsCod,EAAiBrhB,EAAA,KAAAA,EAAAyhB,OAEvDzlB,KAAAoF,UAAAJ,MAAA,sBAAAiD,EAAA,mCAGAjI,KAAAgF,MAAA,uBAKAohB,eAAA,MAGAyB,SAAAC,KAAAC,SACAC,QAnHY,IAuHZhB,IAAA,EAEAiB,IAAA,GAEAxC,MAAA,KAEAyC,MAAA,GAEApG,IAAA,KAEAqG,OAAA,KAEA7C,YAmBA8C,SAAA,EAEAC,YAAA,EAEAC,YAAA,EAEAC,cAAA,EAEAC,cAAA,EAEAC,YAAA,EAEAC,eAAA,EAEAf,iBAAA,EAEA5G,SAAA,EAEA2F,YAAA,EAEA9D,IAAA,KAIA+F,aAAAC,GAEAA,EAAAC,QAAA,yBAAAvtB,OAGAwE,eAAAkE,GAEA,MAAA7B,EAAA1D,OAAA8iB,YAAAuH,cAAArqB,OAAA8iB,YAAAS,WAAAhe,EAAA8d,KAEA,OAAA9hB,KAAA2oB,aAAAxmB,GAAA,IAIA4mB,gBAAA,CAAA9pB,EAAAmlB,IACAA,KAAA4E,cAAA,qBACA5E,EAAA4E,cAAA,qBAAAprB,MAEA,GAIAkC,aAAAkE,EAAA7G,GAEA6C,KAAAumB,sBAAAviB,GAEAhE,KAAAqjB,iBAAArf,EAAA7G,GAEA,UAAAA,IAEA6G,EAAAkkB,MAAA,GAEAlkB,EAAAshB,YAEAthB,EAAA+c,SAAA,EAEA/gB,KAAA6lB,cAGA7lB,KAAAumB,sBAAAviB,GAEAhE,KAAAqjB,iBAAArf,EAAA7G,KAKA2C,aAAAkE,EAAA7G,GAEA6G,EAAA7G,GAAA6G,EAAA7G,GAAA0rB,QAAA,WAEA7oB,KAAAumB,sBAAAviB,GAEAhE,KAAAqjB,iBAAArf,EAAA7G,GAEA,UAAAA,IAEA6G,EAAAkkB,MAAAlkB,EAAAkkB,MAAAe,cAEAjpB,KAAA6lB,gBAKA/lB,cAEA,MAAAopB,KAEAlpB,KAAAmF,SAAAgB,QAAA,CAAAnC,EAAAR,KAEAQ,EAAAkkB,OACAgB,EAAAllB,EAAAkkB,SACAgB,EAAAllB,EAAAkkB,WAGAgB,EAAAllB,EAAAkkB,OAAAtsB,KAAA4H,IAGAQ,EAAAqkB,YAAA,IAIA9sB,OAAA4tB,OAAAD,GACA/iB,QAAAijB,IAEAA,EAAA9tB,OAAA,EAEA8tB,EAAAjjB,QAAAkjB,IAEArpB,KAAAmF,SAAAkkB,GAAAhB,YAAA,IAIAroB,KAAAmF,SAAAikB,EAAA,IAAAf,YAAA,KAMAvoB,YAAAkE,GAEAhE,KAAAsjB,kBAAAtf,IAIAlE,kBAAAkE,GAIA,GAFAA,EAAA+c,SAAA,GAEA,0BAAAhiB,QAAAiF,EAAAyhB,OAAA,CACA,IAAApE,KAEA,OAAArd,EAAAyhB,QAEApE,EAAsC/B,EAAYgK,MAAAtlB,EAAAkkB,QAKlD,OAAAlkB,EAAAyhB,OAAA,OAAAzhB,EAAAyhB,OAAA,OAAAzhB,EAAAyhB,QAEApE,EAAsC/B,EAAYW,QAAAjc,EAAAkkB,QAGlDlkB,EAAA+c,SAAAM,EAAA7B,SAEAxb,EAAA+c,SAEA/gB,KAAAgF,MAAA,UAAAqc,EAAA1gB,SAIA,OAAAqD,EAAA+c,SAIAjhB,WACA,WAAAgC,QAAA,CAAAC,EAAAC,KAEA,IAAA2hB,GAAA,EAEA3jB,KAAA6lB,cAEA7lB,KAAAmF,SAAAgB,QAAAnC,IAEAhE,KAAA2mB,aAAA3iB,KAEAhE,KAAA6mB,SAAA1gB,QAAAjI,IACA,MAAA4V,EAAA9T,KAAAqjB,iBAAArf,EAAA9F,GAEAylB,IACAA,EAAA7P,KAIA6P,GAAA3jB,KAAAsjB,kBAAAtf,KAEA2f,GAAA,GAGAA,GAAA3f,EAAAqkB,YAKAroB,KAAAgF,MAAA,gBAKA2e,EAAA5hB,EAAA/B,KAAA4jB,gBAAA5hB,EAAA2hB,QG1Ve4F,aAXChuB,OAAA4E,EAAA,QAAA5E,CACd6rB,ECTQ,WAAgB,IAAAlmB,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBO,YAAA,kBAA4BP,EAAA,SAAcO,YAAA,mBAA6BK,EAAA+iB,GAAA,GAAA/iB,EAAAJ,GAAA,KAAAI,EAAA+iB,GAAA,GAAA/iB,EAAAJ,GAAA,KAAAR,EAAA,QAAAY,EAAA6C,GAAA7C,EAAA,kBAAA8C,EAAAR,GAAoG,OAAAlD,EAAA,MAAgBpC,IAAA8F,EAAA6jB,SAAAhnB,YAAA,gBAA4CP,EAAA,MAAAA,EAAA,OAAqBO,YAAA,UAAoBK,EAAAJ,GAAAI,EAAAH,GAAAyC,EAAA,MAAAtC,EAAAJ,GAAA,KAAAR,EAAA,KAAkDO,YAAA,iBAAAM,IAAiCC,MAAA,SAAAC,GAAyB,OAAAH,EAAAiQ,gBAAA3N,SAAoCtC,EAAAJ,GAAA,KAAAR,EAAA,MAAyBO,YAAA,cAAAkM,OAAiC6T,SAAA5c,EAAAskB,cAA0BhoB,EAAA,OAAYO,YAAA,qBAA+BP,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAoG,EAAA,IAAA4I,WAAA,aAAsE/L,YAAA,mBAAAL,OAAwC+C,KAAA,OAAAqb,MAAA5a,EAAAikB,IAAA1D,UAAA,MAAgDtgB,UAAWrG,MAAAoG,EAAA,KAAmB7C,IAAKgjB,OAAA,SAAA9iB,GAA0BA,EAAA+iB,OAAAC,WAAsCnjB,EAAAojB,KAAAtgB,EAAA,MAAA3C,EAAA+iB,OAAAxmB,QAA2C,SAAAyD,GAAkB,OAAAH,EAAAsoB,aAAAxlB,EAAA,gBAAwC9C,EAAAJ,GAAA,KAAAR,EAAA,MAA2BO,YAAA,cAAAkM,OAAiC6T,SAAA5c,EAAAukB,gBAA4BjoB,EAAA,OAAYO,YAAA,qBAA+BP,EAAA,cAAmBuU,IAAA,mBAAA4U,UAAA,EAAAjpB,OAA4CwkB,WAAA,GAAAlqB,KAAAoG,EAAAqmB,SAAA7C,UAAA,IAAmDvjB,IAAK8jB,kBAAA,SAAA5jB,GAAmC,OAAAH,EAAAgkB,eAAA1hB,EAAA,qBAAqDwM,OAAA,SAAA3O,GAA2B,OAAAH,EAAAwoB,aAAA1lB,EAAA,WAAwCiM,OAAQrS,MAAAoG,EAAA,MAAAiI,SAAA,SAAAiE,GAA4ChP,EAAAojB,KAAAtgB,EAAA,QAAAkM,IAA6BtD,WAAA,iBAA0B,KAAA1L,EAAAJ,GAAA,KAAAR,EAAA,MAA6BO,YAAA,eAAAkM,OACviD6T,SAAA5c,EAAAwkB,aACAmB,OAAA3lB,EAAAqkB,WACAtH,QAAA/c,EAAA+c,QACA6I,WAAA5lB,EAAAokB,WAAyC9nB,EAAA,OAAYO,YAAA,qBAA+BP,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAoG,EAAA,MAAA4I,WAAA,eAA0E/L,YAAA,mBAAAL,OAAwC+C,KAAA,OAAAghB,UAAA,MAA+BtgB,UAAWrG,MAAAoG,EAAA,OAAqB7C,IAAKgjB,OAAA,SAAA9iB,GAA0BA,EAAA+iB,OAAAC,WAAsCnjB,EAAAojB,KAAAtgB,EAAA,QAAA3C,EAAA+iB,OAAAxmB,QAA6C,SAAAyD,GAAkB,OAAAH,EAAAsoB,aAAAxlB,EAAA,WAAuC6lB,KAAA,SAAAxoB,GAAkD,OAAxBA,EAAAyoB,iBAAwB5oB,EAAA6oB,YAAA/lB,OAA+B9C,EAAAJ,GAAA,KAAAR,EAAA,QAAyBO,YAAA,sBAAgCK,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAAwCO,YAAA,kBAA4BK,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAA8CO,YAAA,cAAAkM,OAAiC6T,SAAA5c,EAAAykB,cAA0BnoB,EAAA,OAAYoM,aAAavP,KAAA,OAAAwP,QAAA,kBAAA/O,MAAAsD,EAAA,gBAAA0L,WAAA,kBAAAC,WAA0GC,UAAA,KAAiBjM,YAAA,mBAAAL,OAAwC0M,gBAAAhM,EAAAiM,eAAAnJ,MAA0C1D,EAAA,cAAmBuU,IAAA,iBAAA4U,UAAA,EAAAjpB,OAA0CwkB,WAAA,GAAAlqB,KAAAoG,EAAAumB,OAAA/C,UAAA,GAAA3U,SAAA,GAAAoV,gBAAA,IAAkFhkB,IAAK8jB,kBAAA,SAAA5jB,GAAmC,OAAAH,EAAAgkB,eAAA1hB,EAAA,mBAAmDwM,OAAA,SAAA3O,GAA2B,OAAAH,EAAAwoB,aAAA1lB,EAAA,SAAsCiM,OAAQrS,MAAAoG,EAAA,IAAAiI,SAAA,SAAAiE,GAA0ChP,EAAAojB,KAAAtgB,EAAA,MAAAkM,IAA2BtD,WAAA,eAAwB,KAAA1L,EAAAJ,GAAA,KAAAR,EAAA,MAA6BO,YAAA,cAAAkM,OAAiC6T,SAAA5c,EAAA0kB,iBAA6BpoB,EAAA,OAAYO,YAAA,qBAA+BP,EAAA,cAAmBuU,IAAA,oBAAA4U,UAAA,EAAAjpB,OAA6CwkB,WAAA,GAAAlqB,KAAAoG,EAAAwmB,WAAAhD,UAAA,GAAAS,gBAAA,IAAwEhkB,IAAK8jB,kBAAA,SAAA5jB,GAAmC,OAAAH,EAAAgkB,eAAA1hB,EAAA,sBAAsDwM,OAAA,SAAA3O,GAA2B,OAAAH,EAAAwoB,aAAA1lB,EAAA,YAAyCiM,OAAQrS,MAAAoG,EAAA,OAAAiI,SAAA,SAAAiE,GAA6ChP,EAAAojB,KAAAtgB,EAAA,SAAAkM,IAA8BtD,WAAA,kBAA2B,KAAA1L,EAAAJ,GAAA,KAAAR,EAAA,MAA6BO,YAAA,kBAAAkM,OAAqC6T,SAAA5c,EAAA2jB,mBAA+BrnB,EAAA,OAAYO,YAAA,mBAAAM,IAAmCC,MAAA,SAAAC,GAAkD,OAAzBA,EAAAiM,kBAAyBpM,EAAA8oB,eAAAhmB,OAAkC1D,EAAA,OAAYO,YAAA,yBAAmCP,EAAA,MAAWO,YAAA,mBAA8BK,EAAA6C,GAAAC,EAAA,kBAAAwC,EAAAyO,GAA+C,OAAA3U,EAAA,MAAgBoM,aAAavP,KAAA,OAAAwP,QAAA,aAAA/O,MAAAsD,EAAA0lB,eAAApgB,GAAAoG,WAAA,wBAAAC,WAAiH+I,KAAA,KAAY1X,IAAAsI,EAAArJ,KAAA8X,EAAAzO,EAAA2B,QAAA7M,OAAAuF,YAAA,gBAA2EP,EAAA,QAAa2D,UAAUC,YAAAhD,EAAAH,GAAAyF,EAAArJ,SAAkC+D,EAAAJ,GAAA,KAAA0F,EAAA2B,QAAA7M,OAAA,EAAAgF,EAAA,QAAAY,EAAAJ,GAAA,KAAAI,EAAAH,GAAAyF,EAAA2B,QAAA7M,QAAA,OAAA4F,EAAAkM,SAA+G,GAAAlM,EAAAJ,GAAA,KAAAR,EAAA,KAAyBO,YAAA,wDAA8DK,EAAAJ,GAAA,KAAAR,EAAA,QAA6BoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,MAAAoG,EAAAshB,SAAA,OAAA1Y,WAAA,yBAA4F/L,YAAA,gBAAAM,IAAkCC,MAAA,SAAAC,GAAkD,OAAzBA,EAAAiM,kBAAyBpM,EAAA+oB,cAAAjmB,EAAAR,SAAuCtC,EAAAJ,GAAA,KAAAR,EAAA,KAAwBO,YAAA,WAAAM,IAA2BC,MAAA,SAAAC,GAAyB,OAAAH,EAAAgpB,cAAAlmB,EAAAR,WAA2C,GAAAtC,EAAAJ,GAAA,KAAAR,EAAA,SAAAA,EAAA,MAAAA,EAAA,MAA+CO,YAAA,iBAAAL,OAAoC4kB,QAAA,OAAe9kB,EAAA,OAAYO,YAAA,uBAAiCP,EAAA,UAAeO,YAAA,aAAAM,IAA6BC,MAAA,SAAAC,GAAyB,OAAAH,EAAAipB,eAAwBjpB,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAAuCO,YAAA,iBAA2BP,EAAA,aAAkBa,IAAIgjB,MAAAjjB,EAAAkpB,0BAAqCna,OAAQrS,MAAAsD,EAAA,aAAA+K,SAAA,SAAAiE,GAAkDhP,EAAAskB,aAAAtV,GAAqBtD,WAAA,kBAA4B1L,EAAAJ,GAAA,KAAAR,EAAA,SAA0BO,YAAA,kBAA4BK,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAR,EAAA,QAA2CO,YAAA,YAAsBK,EAAAJ,GAAA,8CACrpH,WAAiB,IAAaV,EAAbJ,KAAaK,eAA0BC,EAAvCN,KAAuCO,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,YAAAA,EAAA,OAAgCO,YAAA,YAA/Fb,KAAqHc,GAAA,KAAAR,EAAA,OAAwBO,YAAA,YAA7Ib,KAAmKc,GAAA,KAAAR,EAAA,OAAwBO,YAAA,YAA3Lb,KAAiNc,GAAA,KAAAR,EAAA,OAAwBO,YAAA,YAAzOb,KAA+Pc,GAAA,KAAAR,EAAA,OAAwBO,YAAA,YAAvRb,KAA6Sc,GAAA,KAAAR,EAAA,OAAwBO,YAAA,YAArUb,KAA2Vc,GAAA,KAAAR,EAAA,OAAwBO,YAAA,YAAnXb,KAAyYc,GAAA,KAAAR,EAAA,OAAwBO,YAAA,mBAA8B,WAAc,IAAAK,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,SAAAA,EAAA,MAA4BO,YAAA,sBAAgCP,EAAA,MAAAY,EAAAJ,GAAA,KAAAR,EAAA,MAAAY,EAAAJ,GAAA,KAAAR,EAAA,MAAAY,EAAAJ,GAAA,KAAAR,EAAA,MAAAY,EAAAJ,GAAA,KAAAR,EAAA,MAAAY,EAAAJ,GAAA,KAAAR,EAAA,MAAAY,EAAAJ,GAAA,KAAAR,EAAA,QAAAY,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,MAAyKO,YAAA,mBAAAL,OAAsC4kB,QAAA,OAAelkB,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAyCO,YAAA,eAAyBP,EAAA,MAAAY,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,MAAwDO,YAAA,WAAqBK,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAoDO,YAAA,eAAyBP,EAAA,MAAWO,YAAA,WAAqBK,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAsDO,YAAA,eAAyBP,EAAA,MAAWO,YAAA,WAAqBK,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,MAA+DO,YAAA,WAAqBK,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,MAA6DO,YAAA,WAAqBK,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAwDO,YAAA,gBAA0BP,EAAA,MAAWO,YAAA,WAAqBK,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,OAAAR,EAAA,QAAyCO,YAAA,eAAyBK,EAAAJ,GAAA,KAAAR,EAAA,OAAwBO,YAAA,eAAyBP,EAAA,QAAaO,YAAA,iBAA2BK,EAAAJ,GAAA,sFAAsER,EAAA,MAAAY,EAAAJ,GAAA,+FDO9qD,EACA,KACA,KACA,eEFe,ICbyDupB,GDcxE7oB,SELA1B,UAEAE,KAAAqV,mBAEAvV,gBAEAE,KAAAsV,qBAEAzV,SAEAC,kBAEAE,KAAAoF,UAAAmQ,IAAA,8BAAAvV,KAAAqnB,eAEArnB,KAAAoF,UAAAmQ,IAAA,6BAAAvV,KAAAogB,eAGAtgB,oBAEAE,KAAAoF,UAAAqQ,KAAA,8BAAAzV,KAAAqnB,eAEArnB,KAAAoF,UAAAqQ,KAAA,6BAAAzV,KAAAogB,eAGAtgB,gBAAAmM,GACAjM,KAAAoF,WACA6G,OFrB0BsZ,GAC1BliB,OACAikB,UACA/jB,KAAA6K,QACAvD,SAAA,IAGA/P,KAAA,MAGAysB,SAAA9oB,OAAA8iB,YAAAC,oBAAA/iB,OAAA8iB,YAAA+I,cAEAzD,UAEA,MAEA,MAEA,QAEA,YAEA,cAIA/mB,UAEAE,KAAA4L,QAEA9L,UAEAE,KAAAgF,MAAA,QAAAhF,OAEAH,SAEAC,cAAAkE,EAAAR,GACA,GAAAxD,KAAAmF,SAAA7J,QAAAkI,EAAA,EACA,OAEAxD,KAAAmF,SAAA3B,EAAA,GACAiiB,OAAAzhB,EAAAyhB,OAAA,GAAAzhB,EAAAshB,SAAAhqB,QACA0E,KAAAmF,SAAA3B,EAAA,GAAA8hB,SAAAthB,EAAAshB,SACAtlB,KAAAmF,SAAA3B,EAAA,GAAAmkB,gBAAA3jB,EAAA2jB,iBAEA3nB,KAAAgF,MAAA,yCA0BAlF,OAEAE,KAAA4nB,gBAIA9nB,aAAAumB,EAAA,GAEArmB,KAAAkmB,aAAAG,IAIAvmB,eAAAkE,GAEAA,EAAAyhB,OAEAzlB,KAAA6F,cAAA7B,GAEAhE,KAAAqZ,gBAAA,KAEA,MAAApR,EAAsCod,EAAiBrhB,EAAA,KAAAA,EAAAyhB,OAEvDzlB,KAAAoF,UAAAJ,MAAA,sBAAAiD,EAAA,kCAGAjI,KAAAgF,MAAA,uBAKAohB,eAAA,MAGAyB,SAAAC,KAAAC,SACAC,QA5GY,IAgHZhB,IAAA,EAEAuD,IAAA,GAEA9E,MAAA,GAEA+E,UAAA,GAEAlF,YAiBAmF,OAAA,GAIArC,SAAA,EAEAC,YAAA,EAEAqC,YAAA,EAEAnC,cAAA,EAEAoC,kBAAA,EAEAhD,iBAAA,EAEAiD,WAAA,EAEAlE,YAAA,EAEA9D,IAAA,GAEA7B,SAAA,IAKAjhB,aAAAkE,EAAA7G,GAEA6G,EAAAwmB,UAAA,GAEAxmB,EAAAshB,YAEAthB,EAAA+c,SAAA,EAEA/gB,KAAA6lB,cAGA7lB,KAAAumB,sBAAAviB,GAEAhE,KAAAqjB,iBAAArf,EAAA7G,IAIA2C,aAAAkE,EAAA7G,GAEA6G,EAAA7G,GAAA6G,EAAA7G,GAAA0rB,QAAA,WAEA7oB,KAAAumB,sBAAAviB,GAEAhE,KAAAqjB,iBAAArf,EAAA7G,GAEA,cAAAA,IAEA6G,EAAAwmB,UAAAxmB,EAAAwmB,UAAAvB,cAEAjpB,KAAA6lB,gBAIA/lB,gBAAAkE,GAEAhE,KAAAsjB,kBAAAtf,IAIAlE,kBAAAkE,GAKA,GAHAA,EAAA+c,SAAA,EAEAvhB,QAAAE,IAAA,SAAAsE,IACA,qBAAAjF,QAAAiF,EAAAyhB,OAAA,CACA,IAAApE,KAEAA,EAAkC/B,EAAYW,QAAAjc,EAAAwmB,WAE9CxmB,EAAA+c,SAAAM,EAAA7B,SAEAxb,EAAA+c,SAEA/gB,KAAAgF,MAAA,UAAAqc,EAAA1gB,SAIA,OAAAqD,EAAA+c,SAGAjhB,cAEA,MAAA+qB,KAEA7qB,KAAAmF,SAAAgB,QAAA,CAAAnC,EAAAR,KAEAQ,EAAAwmB,WAGAK,EAAA7mB,EAAAwmB,aACAK,EAAA7mB,EAAAwmB,eAGAK,EAAA7mB,EAAAwmB,WAAA5uB,KAAA4H,IAEAQ,EAAAqkB,YAAA,IAIA9sB,OAAA4tB,OAAA0B,GACA1kB,QAAAijB,IAEAA,EAAA9tB,OAAA,EAEA8tB,EAAAjjB,QAAAkjB,IAEArpB,KAAAmF,SAAAkkB,GAAAhB,YAAA,IAIAroB,KAAAmF,SAAAikB,EAAA,IAAAf,YAAA,KAMAvoB,WACA,WAAAgC,QAAA,CAAAC,EAAAC,KAEA,IAAA2hB,GAAA,EAEA3jB,KAAA6lB,cAEA7lB,KAAAmF,SAAAgB,QAAAnC,IAEAhE,KAAA6mB,SAAA1M,KAAAjc,GAAAyI,MAAAC,QAAA5C,EAAA9F,IAAA8F,EAAA9F,GAAA5C,OAAA,EAAA0I,EAAA9F,MAIA8B,KAAA6mB,SAAA1gB,QAAAjI,IACA,MAAA4V,EAAA9T,KAAAqjB,iBAAArf,EAAA9F,GAEAylB,IACAA,EAAA7P,KAIA6P,GAAA3jB,KAAAsjB,kBAAAtf,KAEA2f,GAAA,GAGAA,GAAA3f,EAAAqkB,YAKAroB,KAAAgF,MAAA,gBAKA2e,EAAA5hB,EAAA/B,KAAA4jB,gBAAA5hB,EAAA2hB,QGhSemH,aAXCvvB,OAAA4E,EAAA,QAAA5E,CACd8uB,ECTQ,WAAgB,IAAAnpB,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBO,YAAA,iBAA2BP,EAAA,SAAcO,YAAA,mBAA6BK,EAAA+iB,GAAA,GAAA/iB,EAAAJ,GAAA,KAAAI,EAAA+iB,GAAA,GAAA/iB,EAAAJ,GAAA,KAAAR,EAAA,QAAAY,EAAA6C,GAAA7C,EAAA,kBAAA8C,EAAAR,GAAoG,OAAAlD,EAAA,MAAgBpC,IAAA8F,EAAA6jB,SAAAhnB,YAAA,gBAA4CP,EAAA,MAAAA,EAAA,OAAqBO,YAAA,UAAoBK,EAAAJ,GAAAI,EAAAH,GAAAyC,EAAA,MAAAtC,EAAAJ,GAAA,KAAAR,EAAA,KAAkDO,YAAA,iBAAAM,IAAiCC,MAAA,SAAAC,GAAyB,OAAAH,EAAAiQ,gBAAA3N,SAAoCtC,EAAAJ,GAAA,KAAAR,EAAA,MAAyBO,YAAA,cAAAkM,OAAiC6T,SAAA5c,EAAA0mB,cAA0BpqB,EAAA,OAAYO,YAAA,qBAA+BP,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAoG,EAAA,IAAA4I,WAAA,aAAsE/L,YAAA,mBAAAL,OAAwC+C,KAAA,OAAAqb,MAAA5a,EAAAumB,IAAAhG,UAAA,OAAiDtgB,UAAWrG,MAAAoG,EAAA,KAAmB7C,IAAKgjB,OAAA,SAAA9iB,GAA0BA,EAAA+iB,OAAAC,WAAsCnjB,EAAAojB,KAAAtgB,EAAA,MAAA3C,EAAA+iB,OAAAxmB,QAA2C,SAAAyD,GAAkB,OAAAH,EAAAsoB,aAAAxlB,EAAA,gBAAwC9C,EAAAJ,GAAA,KAAAR,EAAA,MAA2BO,YAAA,cAAAkM,OAAiC6T,SAAA5c,EAAAukB,gBAA4BjoB,EAAA,OAAYO,YAAA,qBAA+BP,EAAA,cAAmBuU,IAAA,mBAAA4U,UAAA,EAAAjpB,OAA4CwkB,WAAA,GAAAlqB,KAAAoG,EAAAqmB,SAAA7C,UAAA,IAAmDvjB,IAAK8jB,kBAAA,SAAA5jB,GAAmC,OAAAH,EAAAgkB,eAAA1hB,EAAA,qBAAqDwM,OAAA,SAAA3O,GAA2B,OAAAH,EAAAwoB,aAAA1lB,EAAA,WAAwCiM,OAAQrS,MAAAoG,EAAA,MAAAiI,SAAA,SAAAiE,GAA4ChP,EAAAojB,KAAAtgB,EAAA,QAAAkM,IAA6BtD,WAAA,iBAA0B,KAAA1L,EAAAJ,GAAA,KAAAR,EAAA,MAA6BO,YAAA,cAAAkM,OACviD6T,SAAA5c,EAAA2mB,iBACAhB,OAAA3lB,EAAAqkB,WACAtH,QAAA/c,EAAA+c,QACA6I,WAAA5lB,EAAAokB,WAAyC9nB,EAAA,OAAYO,YAAA,qBAA+BP,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAoG,EAAA,UAAA4I,WAAA,mBAAkF/L,YAAA,mBAAAL,OAAwC+C,KAAA,OAAAqb,MAAA5a,EAAAwmB,UAAAjG,UAAA,MAAsDtgB,UAAWrG,MAAAoG,EAAA,WAAyB7C,IAAKgjB,OAAA,SAAA9iB,GAA0BA,EAAA+iB,OAAAC,WAAsCnjB,EAAAojB,KAAAtgB,EAAA,YAAA3C,EAAA+iB,OAAAxmB,QAAiD,SAAAyD,GAAkB,OAAAH,EAAAsoB,aAAAxlB,EAAA,eAA2C6lB,KAAA,SAAAxoB,GAAkD,OAAxBA,EAAAyoB,iBAAwB5oB,EAAA6pB,gBAAA/mB,OAAmC9C,EAAAJ,GAAA,KAAAR,EAAA,QAAyBO,YAAA,sBAAgCK,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAAwCO,YAAA,kBAA4BK,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,KAAAkD,EAAA,UAAA1D,EAAA,OAA8DO,YAAA,gBAAAoD,UAAsCC,YAAAhD,EAAAH,GAAAG,EAAA8pB,kBAAyC9pB,EAAAJ,GAAA,0DAAAI,EAAAkM,OAAAlM,EAAAJ,GAAA,KAAAR,EAAA,MAAmGO,YAAA,kBAAAkM,OAAqC6T,SAAA5c,EAAA2jB,mBAA+BrnB,EAAA,OAAYO,YAAA,mBAAAM,IAAmCC,MAAA,SAAAC,GAAkD,OAAzBA,EAAAiM,kBAAyBpM,EAAA8oB,eAAAhmB,OAAkC1D,EAAA,OAAYO,YAAA,yBAAmCP,EAAA,MAAWO,YAAA,mBAA8BK,EAAA6C,GAAAC,EAAA,kBAAAwC,EAAAyO,GAA+C,OAAA3U,EAAA,MAAgBoM,aAAavP,KAAA,OAAAwP,QAAA,aAAA/O,MAAAsD,EAAA0lB,eAAApgB,GAAAoG,WAAA,wBAAAC,WAAiH+I,KAAA,KAAY1X,IAAAsI,EAAArJ,KAAA8X,EAAAzO,EAAA2B,QAAA7M,OAAAuF,YAAA,gBAA4EP,EAAA,QAAa2D,UAAUC,YAAAhD,EAAAH,GAAAyF,EAAArJ,SAAkC+D,EAAAJ,GAAA,KAAA0F,EAAA2B,QAAA7M,OAAA,EAAAgF,EAAA,QAAAY,EAAAJ,GAAA,KAAAI,EAAAH,GAAAyF,EAAA2B,QAAA7M,QAAA,OAAA4F,EAAAkM,SAA+G,GAAAlM,EAAAJ,GAAA,KAAAR,EAAA,KAAyBO,YAAA,wDAA8DK,EAAAJ,GAAA,KAAAR,EAAA,QAA6BoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,MAAAoG,EAAAshB,SAAA,OAAA1Y,WAAA,yBAA4F/L,YAAA,gBAAAM,IAAkCC,MAAA,SAAAC,GAAkD,OAAzBA,EAAAiM,kBAAyBpM,EAAA+oB,cAAAjmB,EAAAR,SAAuCtC,EAAAJ,GAAA,KAAAR,EAAA,KAAwBO,YAAA,WAAAM,IAA2BC,MAAA,SAAAC,GAAyB,OAAAH,EAAAgpB,cAAAlmB,EAAAR,WAA2C,GAAAtC,EAAAJ,GAAA,KAAAR,EAAA,SAAAA,EAAA,MAAAA,EAAA,MAA+CO,YAAA,iBAAAL,OAAoC4kB,QAAA,OAAe9kB,EAAA,OAAYO,YAAA,uBAAiCP,EAAA,UAAeO,YAAA,aAAAM,IAA6BC,MAAA,SAAAC,GAAyB,OAAAH,EAAAipB,eAAwBjpB,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAAuCO,YAAA,iBAA2BP,EAAA,aAAkBa,IAAIgjB,MAAAjjB,EAAAkpB,0BAAqCna,OAAQrS,MAAAsD,EAAA,aAAA+K,SAAA,SAAAiE,GAAkDhP,EAAAskB,aAAAtV,GAAqBtD,WAAA,kBAA4B1L,EAAAJ,GAAA,KAAAR,EAAA,SAA0BO,YAAA,kBAA4BK,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAR,EAAA,QAA2CO,YAAA,YAAsBK,EAAAJ,GAAA,8CAC3pF,WAAiB,IAAaV,EAAbJ,KAAaK,eAA0BC,EAAvCN,KAAuCO,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,YAAAA,EAAA,OAAgCO,YAAA,YAA/Fb,KAAqHc,GAAA,KAAAR,EAAA,OAAwBO,YAAA,YAA7Ib,KAAmKc,GAAA,KAAAR,EAAA,OAAwBO,YAAA,YAA3Lb,KAAiNc,GAAA,KAAAR,EAAA,OAAwBO,YAAA,YAAzOb,KAA+Pc,GAAA,KAAAR,EAAA,OAAwBO,YAAA,aAAvRb,KAA8Sc,GAAA,KAAAR,EAAA,OAAwBO,YAAA,mBAA8B,WAAc,IAAAK,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,SAAAA,EAAA,MAA4BO,YAAA,sBAAgCP,EAAA,MAAAY,EAAAJ,GAAA,KAAAR,EAAA,MAAAY,EAAAJ,GAAA,KAAAR,EAAA,MAAAY,EAAAJ,GAAA,KAAAR,EAAA,MAAAY,EAAAJ,GAAA,KAAAR,EAAA,QAAAY,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,MAA+HO,YAAA,mBAAAL,OAAsC4kB,QAAA,OAAelkB,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAA2CO,YAAA,eAAyBP,EAAA,MAAAY,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,MAAwDO,YAAA,WAAqBK,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAsDO,YAAA,eAAyBP,EAAA,MAAWO,YAAA,WAAqBK,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAsDO,YAAA,eAAyBP,EAAA,MAAWO,YAAA,WAAqBK,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAsDO,YAAA,gBAA0BP,EAAA,MAAWO,YAAA,WAAqBK,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,OAAAR,EAAA,QAAyCO,YAAA,eAAyBK,EAAAJ,GAAA,KAAAR,EAAA,OAAwBO,YAAA,eAAyBP,EAAA,QAAaO,YAAA,iBAA2BK,EAAAJ,GAAA,sFAAsER,EAAA,MAAAY,EAAAJ,GAAA,+FDOr4C,EACA,KACA,KACA,eEOe,ICtByDmqB,GDuBxEzpB,SEdA1B,UAEAE,KAAAqV,mBAEAvV,gBAEAE,KAAAsV,qBAEAzV,SAEAC,kBAEAE,KAAAoF,UAAAmQ,IAAA,8BAAAvV,KAAAqnB,eAEArnB,KAAAoF,UAAAmQ,IAAA,6BAAAvV,KAAAogB,eAGAtgB,oBAEAE,KAAAoF,UAAAqQ,KAAA,8BAAAzV,KAAAqnB,eAEArnB,KAAAoF,UAAAqQ,KAAA,6BAAAzV,KAAAogB,eAGAtgB,gBAAAmM,GACAjM,KAAAoF,WACA6G,OFZ0BsZ,GAC1BliB,OACA6nB,MACA3nB,KAAAuH,OACAD,QAAA,OAGA/P,KAAA,MAGAqwB,SAAA1sB,OAAA8iB,YAAAC,oBAAA/iB,OAAA8iB,YAAA6J,cAEA3D,OAAAhpB,OAAA8iB,YAAAQ,0BAAAtjB,OAAA8iB,YAAAS,YAEA0F,WAAAjpB,OAAA8iB,YAAAQ,0BAAAtjB,OAAA8iB,YAAAW,gBAEA2E,UAEA,MAEA,OAEA,SAEA,WAEA,SAEA,QAEA,MAEA,WAGAwE,aAAA,GACAC,gBACAC,aACAC,SAAqB9V,KAAA,EACrBvY,KAAA,QACuBuY,KAAA,EACvBvY,KAAA,OACuBuY,KAAA,IACvBvY,KAAA,UAOA2C,UAEAE,KAAA4L,OACA5L,KAAAyrB,oBAEA3rB,UAEAE,KAAAgF,MAAA,QAAAhF,OAEAH,SAEAC,cAAAkE,EAAAR,GACA,GAAAxD,KAAAmF,SAAA7J,QAAAkI,EAAA,EACA,OAEAxD,KAAAmF,SAAA3B,EAAA,GACAwS,MAAAhS,EAAAgS,MAAA,GAAAhS,EAAAshB,SAAAhqB,QACA0E,KAAAmF,SAAA3B,EAAA,GAAA8hB,SAAAthB,EAAAshB,SACAtlB,KAAAmF,SAAA3B,EAAA,GAAAmkB,gBAAA3jB,EAAA2jB,iBAEA3nB,KAAAgF,MAAA,sCA6BAlF,OAEAE,KAAA4nB,gBAIA9nB,aAAAumB,EAAA,GAEArmB,KAAAkmB,aAAAG,IAIAvmB,sBAAAkE,GACA,IAAA8L,EAAA,GAEA,OAAA9L,EAAAgS,MACA,SACAlG,EAAA,yBACA,MACA,SACAA,EAAA,YACA,MACA,SACAA,EAAA,SACA,MACA,SACAA,EAAA,YACA,MACA,SACAA,EAAA,YACA,MACA,SACAA,EAAA,WACA,MACA,SACAA,EAAA,UACA,MACA,SACAA,EAAA,WACA,MACA,SACAA,EAAA,oCAKA9L,EAAA8L,cACA,MAAA9L,EAAAgS,MAAA,MAAAhS,EAAAgS,MACAhS,EAAA0nB,YAAA,EACA1nB,EAAA2nB,cAAA,EACA3nB,EAAAykB,YAAA,EACAzkB,EAAA4nB,gBAAA,EACA5nB,EAAA6nB,aAAA,EACA7nB,EAAA8nB,UAAA,EACA9nB,EAAA+nB,eAAA,EACA/nB,EAAAgoB,OAAA,KAEAhoB,EAAA0nB,YAAA,EACA1nB,EAAA6nB,aAAA,IAKA/rB,eAAAkE,GAEAA,EAAAgS,MAEAhW,KAAA6F,cAAA7B,GAEAhE,KAAAqZ,gBAAA,KAEA,MAAApR,EAAsCod,EAAiBrhB,EAAAhE,KAAAqrB,aAAArnB,EAAAgS,MAEvDhW,KAAAoF,UAAAJ,MAAA,sBAAAiD,EAAA,kCAGAjI,KAAAgF,MAAA,wBAKAohB,eAAA,MAGAyB,SAAAC,KAAAC,SACAC,QA3LY,IA8LZhB,IAAA,EAEAhR,KAAA,GAEAiW,OAAA,GAEA3G,YAEA0G,OAAA,GAEAE,MAAA,GAEApK,IAAA,GAEAqK,QAAA,GAEArc,YAAA,GAGAsc,cAAA,EACAC,aAAA,EACAN,eAAA,EAEAO,eAAA,EAEA3E,iBAAA,EAEAU,YAAA,EAEAD,SAAA,EAEArH,SAAA,EAEA2F,YAAA,EAEA9D,IAAA,GACA2J,aAAA,GACAZ,cAAA,EACAlD,YAAA,EACAmD,gBAAA,EACAF,YAAA,EACAI,UAAA,EACAD,aAAA,IAKA/rB,aAAAkE,EAAA7G,GAEA6C,KAAAqrB,aAAArnB,EAAAgS,KAEAhS,EAAAioB,OAAA,GACAjoB,EAAAshB,YAEAthB,EAAA+c,SAAA,EAKA/gB,KAAA6lB,cAEA7lB,KAAAwsB,sBAAAxoB,GAEAhE,KAAAumB,sBAAAviB,GAEAhE,KAAAqjB,iBAAArf,EAAA7G,IAIA2C,cAAAkE,EAAA7G,GAEA6G,EAAA+c,SAAA,EAEA/gB,KAAAumB,sBAAAviB,GAEAhE,KAAAqjB,iBAAArf,EAAA7G,IAIA2C,cAAAkE,EAAA7G,GACA6G,EAAAgoB,SACAhoB,EAAA+nB,eAAA,GAEA,KAAA/nB,EAAAgoB,QACAhoB,EAAA0nB,YAAA,EACA1nB,EAAAkoB,MAAA,GACAloB,EAAA8d,IAAA,GACA9d,EAAAmoB,QAAA,GACAnoB,EAAA8nB,UAAA,EACA9nB,EAAA2nB,cAAA,EACA3nB,EAAAykB,YAAA,EACAzkB,EAAA4nB,gBAAA,GACc,GAAA5nB,EAAAgoB,QACdhoB,EAAA0nB,YAAA,EACA1nB,EAAA8nB,UAAA,GAMc,GAAA9nB,EAAAgoB,SACdhoB,EAAA0nB,YAAA,EACA1nB,EAAA8d,IAAA,GACA9d,EAAAmoB,QAAA,GACAnoB,EAAA8nB,UAAA,EAIA9nB,EAAAykB,YAAA,EACAzkB,EAAA4nB,gBAAA,GAGA5nB,EAAA+c,SAAA,EAEA/gB,KAAAumB,sBAAAviB,GAEAhE,KAAAqjB,iBAAArf,EAAA7G,IAIA4rB,gBAAA,CAAA9pB,EAAAmlB,IACAA,KAAA4E,cAAA,qBACA5E,EAAA4E,cAAA,qBAAAprB,MAEA,GAIAkC,aAAAkE,EAAA7G,GAEA6G,EAAA7G,GAAA6G,EAAA7G,GAAA0rB,QAAA,WAEA7oB,KAAAumB,sBAAAviB,GAEAhE,KAAAqjB,iBAAArf,EAAA7G,GAEA6C,KAAA6lB,cACA,MAAA7hB,EAAAgS,MACAhW,KAAAysB,aAAAzoB,IAIAlE,aAAAkE,GACAA,EAAAioB,OAAA9c,MAAA,IAAA7T,QAAA,GACA0E,KAAAsrB,aAAAtrB,KAAAurB,UAAAzT,OAAA4U,GACA1oB,EAAAioB,OAAA9c,MAAA,IAAA7T,QAAA,EACAoxB,EAAAC,MAAAC,WAAA5oB,EAAAioB,SAAAjoB,EAAAioB,OAAA3wB,OAAA,GAEA0I,EAAAioB,OAAAW,WAAAF,EAAAC,QAAA3oB,EAAAioB,OAAA3wB,OAAA,IAEiB0M,IAAA6kB,GACjBA,EAAAC,OAEA9sB,KAAAsrB,aAAAhwB,OAAA,GACA0E,KAAAsrB,aAAAtrB,KAAAsrB,aAAAxT,OAAA,CAAA1c,EAAAgD,IAAA4B,KAAAsrB,aAAAvsB,QAAA3D,IAAAgD,GACA4F,EAAAuoB,cAAA,GAEAvoB,EAAAuoB,cAAA,GAIAvoB,EAAAuoB,cAAA,GAKAzsB,cAEA,MAAAitB,KAEA/sB,KAAAmF,SAAAgB,QAAA,CAAAnC,EAAAR,KAEAQ,EAAAioB,QACAc,EAAA/oB,EAAAioB,UACAc,EAAA/oB,EAAAioB,YAGAc,EAAA/oB,EAAAioB,QAAArwB,KAAA4H,IAEAQ,EAAAqkB,YAAA,IAIA9sB,OAAA4tB,OAAA4D,GACA5mB,QAAAijB,IAEAA,EAAA9tB,OAAA,EAEA8tB,EAAAjjB,QAAAkjB,IAEArpB,KAAAmF,SAAAkkB,GAAAhB,YAAA,IAIAroB,KAAAmF,SAAAikB,EAAA,IAAAf,YAAA,KAKAvoB,gBAAAkE,GACAA,EAAAuoB,cAAA,EAEAvsB,KAAAsjB,kBAAAtf,IAGAlE,kBAAAkE,GAIA,GAFAA,EAAA+c,SAAA,GAEA,mDAAAhiB,QAAAiF,EAAAgS,MAAA,CACA,IAAAqL,KAEA,OAAArd,EAAAgS,OAEAqL,EAAsC/B,EAAYO,UAAA7b,EAAAioB,SAGlD,OAAAjoB,EAAAgS,OAEAqL,EAAsC/B,EAAYM,SAAA5b,EAAAioB,SAGlD,OAAAjoB,EAAAgS,OAEAqL,EAAsC/B,EAAYG,iBAAAzb,EAAAioB,SAGlD,OAAAjoB,EAAAgS,MAAA,OAAAhS,EAAAgS,MAAA,OAAAhS,EAAAgS,MACA,OAAAhS,EAAAgS,MAAA,OAAAhS,EAAAgS,MAAA,OAAAhS,EAAAgS,OAEAqL,EAAsC/B,EAAYW,QAAAjc,EAAAioB,SAGlDjoB,EAAA+c,SAAAM,EAAA7B,SAEAxb,EAAA+c,SAEA/gB,KAAAgF,MAAA,UAAAqc,EAAA1gB,SAIA,OAAAqD,EAAA+c,SAIAjhB,WACA,WAAAgC,QAAA,CAAAC,EAAAC,KAEA,IAAA2hB,GAAA,EAEA3jB,KAAA6lB,cAEA7lB,KAAAmF,SAAAgB,QAAAnC,IAGAhE,KAAA2mB,aAAA3iB,KAEAhE,KAAA6mB,SAAA1gB,QAAAjI,IACA,UAAAA,GAAA,WAAAA,GACA,IAAA8F,EAAA6nB,aAAA,GAAA7nB,EAAAgoB,OAAA,CACA,MAAAlY,EAAA9T,KAAAqjB,iBAAArf,EAAA9F,GAEAylB,IACAA,EAAA7P,SAG6B,YAAA5V,GAC7B,IAAA8F,EAAA6nB,aAAA,KAAA7nB,EAAAgoB,QAAA,IAAAhoB,EAAAgoB,OAAA,CACA,MAAAlY,EAAA9T,KAAAqjB,iBAAArf,EAAA9F,GAEAylB,IACAA,EAAA7P,SAG6B,aAAA5V,GAC7B,IAAA8F,EAAA6nB,YAAA,CACA,MAAA/X,EAAA9T,KAAAqjB,iBAAArf,EAAA9F,GAEAylB,IACAA,EAAA7P,QAG6B,CAC7B,MAAAA,EAAA9T,KAAAqjB,iBAAArf,EAAA9F,GAEAylB,IACAA,EAAA7P,MAKA6P,GAAA3jB,KAAAsjB,kBAAAtf,KAEA2f,GAAA,GAGAA,GAAA3f,EAAAqkB,YAKAroB,KAAAgF,MAAA,gBAMA2e,EAAA5hB,EAAA/B,KAAA4jB,gBAAA5hB,EAAA2hB,MAGA7jB,mBAEA,MAAA4B,EAAAjD,OAAAkD,SAAAC,YAAAC,iBACA,WAAAC,QAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAjC,KAAAkC,QACAC,EAAA,mBACAC,EAAA3D,OAAA4D,SAAAE,UACAC,KAAgC/D,OAAA4D,SAAAC,IAAA0qB,SAAAC,cAChC/tB,KAEAT,OAAAkD,SAAAiB,kBAAAX,EAAAE,EAAAC,EAAAI,EAAAtD,GAEAT,OAAAkD,SAAAkB,MACAC,OAAAV,EACAE,IAAAE,EAGAO,OAAA7D,EAEA8D,aAAA,SAEAC,KAAAnI,IACAkF,KAAAurB,UAAAzwB,YACA,MAAAoI,EAAApI,OAEA2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,uBAAMT,GAErEjD,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAnB,EAAAmB,IACqBpI,IACrB2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,sBAAMT,GACrE,MAAAwB,EAAApI,OAEA2D,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAlB,EAAAlH,QAIAgF,eAAAkE,GAEA,MAAA7B,EAAA1D,OAAA8iB,YAAAuH,cAAArqB,OAAA8iB,YAAAS,WAAAhe,EAAA8d,KAEA,OAAA9hB,KAAA2oB,aAAAxmB,GAAA,IAEAwmB,aAAAC,GAEAA,EAAAC,QAAA,yBAAAvtB,SGniBe4xB,aAXC3xB,OAAA4E,EAAA,QAAA5E,CACd0vB,ECTQ,WAAgB,IAAA/pB,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBO,YAAA,oBAA8BP,EAAA,SAAcO,YAAA,mBAA6BK,EAAA+iB,GAAA,GAAA/iB,EAAAJ,GAAA,KAAAI,EAAA+iB,GAAA,GAAA/iB,EAAAJ,GAAA,KAAAR,EAAA,QAAAY,EAAA6C,GAAA7C,EAAA,kBAAA8C,EAAAR,GAAoG,OAAAlD,EAAA,MAAgBpC,IAAA8F,EAAA6jB,SAAAhnB,YAAA,gBAA4CP,EAAA,MAAAA,EAAA,OAAqBO,YAAA,UAAoBK,EAAAJ,GAAAI,EAAAH,GAAAyC,EAAA,MAAAtC,EAAAJ,GAAA,KAAAR,EAAA,KAAkDO,YAAA,iBAAAM,IAAiCC,MAAA,SAAAC,GAAyB,OAAAH,EAAAiQ,gBAAA3N,SAAoCtC,EAAAJ,GAAA,KAAAR,EAAA,MAAyBO,YAAA,cAAAkM,OACriB6T,SAAA5c,EAAAqoB,eACkB/rB,EAAA,OAAYO,YAAA,qBAA+BP,EAAA,cAAmBuU,IAAA,kBAAA4U,UAAA,EAAAjpB,OAA2CwkB,WAAA,GAAAlqB,KAAAoG,EAAAiqB,SAAAzG,UAAA,IAAmDvjB,IAAK8jB,kBAAA,SAAA5jB,GAAmC,OAAAH,EAAAgkB,eAAA1hB,EAAA,oBAAoDwM,OAAA,SAAA3O,GAA2B,OAAAH,EAAAwoB,aAAA1lB,EAAA,UAAuCiM,OAAQrS,MAAAoG,EAAA,KAAAiI,SAAA,SAAAiE,GAA2ChP,EAAAojB,KAAAtgB,EAAA,OAAAkM,IAA4BtD,WAAA,gBAAyB,KAAA1L,EAAAJ,GAAA,KAAAR,EAAA,MAA6BO,YAAA,cAAAkM,OACjd6T,SAAA5c,EAAAsoB,cACA3C,OAAA3lB,EAAAqkB,WACAtH,QAAA/c,EAAA+c,QACA6I,WAAA5lB,EAAAokB,QACA+E,KAAAnpB,EAAAuoB,gBAA6CjsB,EAAA,OAAYO,YAAA,qBAA+BP,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAoG,EAAA,OAAA4I,WAAA,gBAA4E/L,YAAA,mBAAAL,OAAwC+C,KAAA,OAAAuM,YAAA9L,EAAA8L,YAAAyU,UAAA,MAA8DtgB,UAAWrG,MAAAoG,EAAA,QAAsB7C,IAAKgjB,OAAA,SAAA9iB,GAA0BA,EAAA+iB,OAAAC,WAAsCnjB,EAAAojB,KAAAtgB,EAAA,SAAA3C,EAAA+iB,OAAAxmB,QAA8C,SAAAyD,GAAkB,OAAAH,EAAAsoB,aAAAxlB,EAAA,YAAuC6lB,KAAA,SAAAxoB,GAAkD,OAAxBA,EAAAyoB,iBAAwB5oB,EAAA6pB,gBAAA/mB,OAAmC9C,EAAAJ,GAAA,KAAAR,EAAA,QAAyBO,YAAA,sBAAgCK,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAAwCO,YAAA,kBAA4BK,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAA4CO,YAAA,iBAA2BK,EAAA6C,GAAA7C,EAAA,sBAAAksB,EAAAC,GAAyD,OAAA/sB,EAAA,KAAAY,EAAAJ,GAAAI,EAAAH,GAAAqsB,QAA0ClsB,EAAAJ,GAAA,KAAAR,EAAA,KAAsBib,aAAa+R,aAAA,SAAA3R,MAAA,SAAqCza,EAAAJ,GAAA,oBAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAkDyM,OAAOwgB,cAAAvpB,EAAA+nB,cAC/+BnL,SAAA5c,EAAA+nB,cACAyB,WAAAxpB,EAAA6nB,eACkBvrB,EAAA,OAAYO,YAAA,mBAAAkM,OAAsC0gB,YAAAzpB,EAAA6nB,eAAgCvrB,EAAA,cAAmBuU,IAAA,kBAAA4U,UAAA,EAAAjpB,OAA2CwkB,WAAA,GAAAlqB,KAAAoG,EAAAsqB,OAAA9G,UAAA,IAAiDvjB,IAAK8jB,kBAAA,SAAA5jB,GAAmC,OAAAH,EAAAgkB,eAAA1hB,EAAA,oBAAoDwM,OAAA,SAAA3O,GAA2B,OAAAH,EAAAwsB,cAAA1pB,EAAA,YAA0CiM,OAAQrS,MAAAoG,EAAA,OAAAiI,SAAA,SAAAiE,GAA6ChP,EAAAojB,KAAAtgB,EAAA,SAAAkM,IAA8BtD,WAAA,kBAA2B,KAAA1L,EAAAJ,GAAA,KAAAR,EAAA,MAA6ByM,OAAOwgB,cAAAvpB,EAAA2nB,aACtgB/K,SAAA5c,EAAA2nB,gBAAiDrrB,EAAA,OAAYO,YAAA,qBAA+BmD,EAAA,WAAA1D,EAAA,SAAgCoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAoG,EAAA,MAAA4I,WAAA,eAA0E/L,YAAA,mBAAAkM,OAAwCygB,WAAAxpB,EAAA8nB,UAA2BtrB,OAAQ+C,KAAA,OAAAqC,SAAA,WAAA2e,UAAA,MAAqDtgB,UAAWrG,MAAAoG,EAAA,OAAqB7C,IAAKgjB,OAAA,SAAA9iB,GAA0BA,EAAA+iB,OAAAC,WAAsCnjB,EAAAojB,KAAAtgB,EAAA,QAAA3C,EAAA+iB,OAAAxmB,QAA6C,SAAAyD,GAAkB,OAAAH,EAAAsoB,aAAAxlB,EAAA,cAAyC1D,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAoG,EAAA,MAAA4I,WAAA,eAA0E/L,YAAA,mBAAAL,OAAwC+C,KAAA,OAAAghB,UAAA,MAA+BtgB,UAAWrG,MAAAoG,EAAA,OAAqB7C,IAAKgjB,OAAA,SAAA9iB,GAA0BA,EAAA+iB,OAAAC,WAAsCnjB,EAAAojB,KAAAtgB,EAAA,QAAA3C,EAAA+iB,OAAAxmB,QAA6C,SAAAyD,GAAkB,OAAAH,EAAAsoB,aAAAxlB,EAAA,kBAAyC9C,EAAAJ,GAAA,KAAAR,EAAA,MAA2ByM,OAAOwgB,cAAAvpB,EAAAykB,WAAA7H,SAAA5c,EAAAykB,WAAA+E,WAAAxpB,EAAA8nB,YAAmFxrB,EAAA,OAAYoM,aAAavP,KAAA,OAAAwP,QAAA,kBAAA/O,MAAAsD,EAAA,gBAAA0L,WAAA,kBAAAC,WAA0GC,UAAA,KAAiBjM,YAAA,mBAAAkM,OAAwC0gB,YAAAzpB,EAAA8nB,UAA4BtrB,OAAQ0M,gBAAAhM,EAAAiM,eAAAnJ,MAA0C1D,EAAA,cAAmBuU,IAAA,iBAAA4U,UAAA,EAAAjpB,OAA0CwkB,WAAA,GAAAlqB,KAAAoG,EAAAumB,OAAA/C,UAAA,GAAA3U,SAAA,GAAAoV,gBAAA,IAAkFhkB,IAAK8jB,kBAAA,SAAA5jB,GAAmC,OAAAH,EAAAgkB,eAAA1hB,EAAA,mBAAmDwM,OAAA,SAAA3O,GAA2B,OAAAH,EAAAysB,cAAA3pB,EAAA,SAAuCiM,OAAQrS,MAAAoG,EAAA,IAAAiI,SAAA,SAAAiE,GAA0ChP,EAAAojB,KAAAtgB,EAAA,MAAAkM,IAA2BtD,WAAA,eAAwB,KAAA1L,EAAAJ,GAAA,KAAAR,EAAA,MAA6ByM,OAAOwgB,cAAAvpB,EAAA4nB,eAC7sDhL,SAAA5c,EAAA4nB,eAAA4B,WAAAxpB,EAAA8nB,YAA8ExrB,EAAA,OAAYO,YAAA,mBAAAkM,OAAsC0gB,YAAAzpB,EAAA8nB,YAA8BxrB,EAAA,cAAmBuU,IAAA,oBAAA4U,UAAA,EAAAjpB,OAA6CwkB,WAAA,GAAAlqB,KAAAoG,EAAAwmB,WAAAhD,UAAA,GAAAS,gBAAA,IAAwEhkB,IAAK8jB,kBAAA,SAAA5jB,GAAmC,OAAAH,EAAAgkB,eAAA1hB,EAAA,sBAAsDwM,OAAA,SAAA3O,GAA2B,OAAAH,EAAAysB,cAAA3pB,EAAA,aAA2CiM,OAAQrS,MAAAoG,EAAA,QAAAiI,SAAA,SAAAiE,GAA8ChP,EAAAojB,KAAAtgB,EAAA,UAAAkM,IAA+BtD,WAAA,mBAA4B,KAAA1L,EAAAJ,GAAA,KAAAR,EAAA,MAA6BO,YAAA,kBAAAkM,OAAqC6T,SAAA5c,EAAA2jB,mBAA+BrnB,EAAA,OAAYO,YAAA,mBAAAM,IAAmCC,MAAA,SAAAC,GAAkD,OAAzBA,EAAAiM,kBAAyBpM,EAAA8oB,eAAAhmB,OAAkC1D,EAAA,OAAYO,YAAA,yBAAmCP,EAAA,MAAWO,YAAA,mBAA8BK,EAAA6C,GAAAC,EAAA,kBAAAwC,EAAAyO,GAA+C,OAAA3U,EAAA,MAAgBoM,aAAavP,KAAA,OAAAwP,QAAA,aAAA/O,MAAAsD,EAAA0lB,eAAApgB,GAAAoG,WAAA,wBAAAC,WAAiH+I,KAAA,KAAY1X,IAAAsI,EAAArJ,KAAA8X,EAAAzO,EAAA2B,QAAA7M,OAAAuF,YAAA,gBAA4EP,EAAA,QAAa2D,UAAUC,YAAAhD,EAAAH,GAAAyF,EAAArJ,SAAkC+D,EAAAJ,GAAA,KAAA0F,EAAA2B,QAAA7M,OAAA,EAAAgF,EAAA,QAAAY,EAAAJ,GAAA,KAAAI,EAAAH,GAAAyF,EAAA2B,QAAA7M,QAAA,OAAA4F,EAAAkM,SAA+G,GAAAlM,EAAAJ,GAAA,KAAAR,EAAA,KAAyBO,YAAA,wDAA8DK,EAAAJ,GAAA,KAAAR,EAAA,QAA6BoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,MAAAoG,EAAAshB,SAAA,OAAA1Y,WAAA,yBAA4F/L,YAAA,gBAAAM,IAAkCC,MAAA,SAAAC,GAAkD,OAAzBA,EAAAiM,kBAAyBpM,EAAA+oB,cAAAjmB,EAAAR,SAAuCtC,EAAAJ,GAAA,KAAAR,EAAA,KAAwBO,YAAA,WAAAM,IAA2BC,MAAA,SAAAC,GAAyB,OAAAH,EAAAgpB,cAAAlmB,EAAAR,WAA2C,GAAAtC,EAAAJ,GAAA,KAAAR,EAAA,SAAAA,EAAA,MAAAA,EAAA,MAA+CO,YAAA,iBAAAL,OAAoC4kB,QAAA,OAAe9kB,EAAA,OAAYO,YAAA,uBAAiCP,EAAA,OAAYO,YAAA,aAAAM,IAA6BC,MAAA,SAAAC,GAAyB,OAAAH,EAAAipB,eAAwBjpB,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAAuCO,YAAA,iBAA2BP,EAAA,aAAkBa,IAAIgjB,MAAAjjB,EAAAkpB,0BAAqCna,OAAQrS,MAAAsD,EAAA,aAAA+K,SAAA,SAAAiE,GAAkDhP,EAAAskB,aAAAtV,GAAqBtD,WAAA,kBAA4B1L,EAAAJ,GAAA,KAAAR,EAAA,SAA0BO,YAAA,kBAA4BK,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAR,EAAA,QAA2CO,YAAA,YAAsBK,EAAAJ,GAAA,8CACxzE,WAAiB,IAAAI,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,YAAAA,EAAA,OAAgCO,YAAA,YAAsBK,EAAAJ,GAAA,KAAAR,EAAA,OAAwBO,YAAA,UAAA0a,aAAmCqS,MAAA,WAAiB1sB,EAAAJ,GAAA,KAAAR,EAAA,OAAwBO,YAAA,UAAA0a,aAAmCqS,MAAA,WAAiB1sB,EAAAJ,GAAA,KAAAR,EAAA,OAAwBO,YAAA,UAAA0a,aAAmCqS,MAAA,WAAiB1sB,EAAAJ,GAAA,KAAAR,EAAA,OAAwBO,YAAA,UAAA0a,aAAmCqS,MAAA,WAAiB1sB,EAAAJ,GAAA,KAAAR,EAAA,OAAwBO,YAAA,UAAA0a,aAAmCqS,MAAA,WAAiB1sB,EAAAJ,GAAA,KAAAR,EAAA,OAAwBO,YAAA,UAAA0a,aAAmCqS,MAAA,WAAiB1sB,EAAAJ,GAAA,KAAAR,EAAA,OAAwBO,YAAA,UAAA0a,aAAmCqS,MAAA,WAAiB1sB,EAAAJ,GAAA,KAAAR,EAAA,OAAwBO,YAAA,mBAA8B,WAAc,IAAAK,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,SAAAA,EAAA,MAA4BO,YAAA,sBAAgCP,EAAA,MAAAY,EAAAJ,GAAA,KAAAR,EAAA,MAAAY,EAAAJ,GAAA,KAAAR,EAAA,MAAAY,EAAAJ,GAAA,KAAAR,EAAA,QAAAY,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,MAA0GO,YAAA,mBAAAL,OAAsC4kB,QAAA,OAAelkB,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAwCO,YAAA,eAAyBP,EAAA,MAAAY,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,MAAwDO,YAAA,WAAqBK,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAAA,EAAA,MAA+DO,YAAA,WAAqBK,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,SAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAqDib,aAAasS,cAAA,UAAsBvtB,EAAA,MAAWO,YAAA,WAAqBK,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAA0Dib,aAAasS,cAAA,UAAsB3sB,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAAY,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAAAY,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,KAAAR,EAAA,MAA2HO,YAAA,gBAA0BP,EAAA,MAAWO,YAAA,WAAqBK,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,OAAAR,EAAA,QAAyCO,YAAA,eAAyBK,EAAAJ,GAAA,KAAAR,EAAA,OAAwBO,YAAA,eAAyBP,EAAA,QAAaO,YAAA,iBAA2BK,EAAAJ,GAAA,sFAAsER,EAAA,MAAAY,EAAAJ,GAAA,+FDDx1D,EACA,KACA,KACA,eEfwEgtB,GCkBxEtsB,SCRA1B,UAEAE,KAAAqV,mBAEAvV,gBAEAE,KAAAsV,qBAEAzV,SAEAC,kBAEAE,KAAAoF,UAAAmQ,IAAA,yBAAAvV,KAAA+tB,kBAGAjuB,oBAEAE,KAAAoF,UAAAqQ,KAAA,yBAAAzV,KAAA+tB,kBAGAjuB,gBAAAmM,GACAjM,KAAAoF,WACA6G,QCUApM,SAEAC,qBAAAkuB,GAEA,MAAAtsB,EAAAjD,OAAAkD,SAAAC,YAAAC,iBACA,WAAAC,QAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAjC,KAAAkC,QACAC,EAAA,qBACAC,EAAA3D,OAAA4D,SAAAsT,WACAnT,KAAgC/D,OAAA4D,SAAAC,IAAA2e,IAAAgN,gBAChC/uB,GACAgvB,OAAAF,EAAAE,OAEAhwB,IAAA8vB,EAAA9vB,KAGAO,OAAAkD,SAAAiB,kBAAAX,EAAAE,EAAAC,EAAAI,EAAAtD,GAEAT,OAAAkD,SAAAkB,MACAC,OAAAV,EACAE,IAAAE,EAGA1H,KAAAoE,EAEA8D,aAAA,SAEAC,KAAAnI,IACA,MAAAoI,EAAApI,OACA2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,uBAAMT,GAErEjD,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAnB,EAAAmB,IACqBpI,IACrB2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,sBAAMT,GACrE,MAAAwB,EAAApI,OAEA2D,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAlB,EAAAlH,WCvEAgF,OACA,OAEAge,WAAA,SAEAC,YAAA/d,KAAAmuB,WAEAC,iBAAA,GAEAC,cAAA,IAGAxuB,SAEAC,eAAAkZ,GACAhZ,KAAA+d,YAAA/E,GAIAlZ,gBAAA8iB,GAEA5iB,KAAAouB,iBAAAxL,EAEA5iB,KAAAquB,cAAAruB,KAAAgmB,QAAAsI,MAAAnH,wBAAA7rB,OAAA0E,KAAAgmB,QAAAuI,KAAApH,wBAAA7rB,OAAA0E,KAAAgmB,QAAAwI,KAAArH,wBAAA7rB,OAEA0E,KAAAoe,gBAAA,IAIAte,cAEAE,KAAAyuB,mBAEAzuB,KAAAoe,gBAAA,IAGAte,eAEA,OAAAE,KAAA0uB,MAAApzB,OAIA,OADA0E,KAAAoF,UAAAJ,MAAA,2CACA,EAEA,MAAA2pB,GAEAT,OAAAluB,KAAAouB,iBACAlwB,IAAA8B,KAAA4uB,gBAGA5uB,KAAA6uB,qBAAAF,GACA1rB,KAAAnI,IACAkF,KAAA8uB,mBAAAh0B,IACiBA,IACjB2D,OAAAe,QAAAqb,MAAA/f,MAIAgF,mBAAAhF,GACA,GAAAA,EAAAi0B,QAAA,CAEA,MAAAC,EAAAl0B,OAAAk0B,UAEAC,EAAAn0B,OAAAm0B,SAEAC,EAAAp0B,OAAAo0B,YAEAnL,EAAAjpB,OAAAipB,KACA/jB,KAAAqZ,gBAAA,KAEArZ,KAAAoF,UAAAJ,MAAA,8BAAAgqB,GACAhvB,KAAAoF,UAAAJ,MAAA,6BAAAiqB,GACAjvB,KAAAoF,UAAAJ,MAAA,6BAAAkqB,GAEAnL,GACA/jB,KAAAoF,UAAAJ,MAAA,+BAAA+e,KAIA/jB,KAAA+e,mBAGA/e,KAAAoF,UAAAJ,MAAA,qBAAAlK,EAAA6F,QAAA,aHxEA0C,OAEA8qB,YACA5qB,KAAA6K,QACAvD,SAAA,IAGA/P,KAAA,MAGAq0B,eAAA1wB,OAAA4D,SAAAC,IAAA2e,IAAAmO,YAEAC,4BAAA,EAEAX,WAGAle,UAEA1Q,iCACA,OAAAE,KAAAqvB,2BAAA,gBAGAvvB,UACA,OACAuM,MAAA,EAEA4R,KAAAje,KAAAsvB,+BACAxvB,SAAAyvB,GACA9wB,OAAAe,QAAAE,IAAA,aAOAG,SACAC,mBAAA0vB,GACAxvB,KAAAwvB,MAAyBryB,KAAA,IACzB6C,KAAAwvB,KAAAryB,KAAAqyB,EAAAryB,KAEA6C,KAAAyuB,mBAEAzuB,KAAAqvB,4BAAA,GAIAvvB,cAAA2vB,GACA,MAAAC,EAAA1vB,KACA0vB,EAAAL,4BAAA,EAEAI,EAAAV,SACAW,EAAAd,eAAAa,EAAA30B,KAEA40B,EAAAlM,MAAAmM,SAAA9jB,OAAA,KACA6jB,EAAAhB,MAAA9yB,KAAA8zB,EAAAF,MACAE,EAAAlM,MAAAoM,eAAAC,eAGA7vB,KAAAyuB,mBAEAzuB,KAAAoF,UAAAJ,MAAA,qBAAAyqB,EAAA9uB,QAAA,WAIAb,YAAA+a,EAAA6T,EAAAoB,GACA9vB,KAAAqvB,4BAAA,EAGArvB,KAAAyuB,mBAEAzuB,KAAAoF,UAAAJ,MAAA,sCAGAlF,mBACAE,KAAAwjB,MAAAoM,eAAAC,aACA7vB,KAAA0uB,YI5EeqB,aAXCx0B,OAAA4E,EAAA,QAAA5E,CACduyB,ECTQ,WAAgB,IAAA5sB,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,mBAA6BO,YAAA,mBAAAL,OAAsCoe,MAAA1d,EAAA4c,WAAAe,QAAA3d,EAAA2d,SAA6C1d,IAAK6uB,MAAA,SAAA3uB,GAAyB,OAAAH,EAAA6d,YAAA1d,IAA+Byd,OAAA,SAAAzd,GAA2B,OAAAH,EAAA6d,YAAA1d,IAA+Bwd,QAAA,SAAAxd,GAA4B,OAAAH,EAAA8d,aAAA3d,KAAiC4O,OAAQrS,MAAAsD,EAAA,YAAA+K,SAAA,SAAAiE,GAAiDhP,EAAA6c,YAAA7N,GAAoBtD,WAAA,iBAA2BtM,EAAA,OAAYO,YAAA,6BAAuCP,EAAA,OAAYO,YAAA,qBAA+BP,EAAA,YAAiBO,YAAA,mBAA6BK,EAAAJ,GAAA,WAAAI,EAAAJ,GAAA,KAAAR,EAAA,cAAiDuU,IAAA,iBAAAhU,YAAA,gBAAAL,OAAwDyvB,OAAA/uB,EAAAiuB,eAAAe,OAAA,aAAAp1B,MAA0DozB,OAAAhtB,EAAAktB,iBAAA1d,MAAAxP,EAAAmtB,eAAqD8B,gBAAAjvB,EAAAkvB,mBAAAC,aAAAnvB,EAAAovB,cAAAC,WAAArvB,EAAAsvB,YAAAC,oBAAA,EAAAzqB,UAAA,KAA6I1F,EAAA,cAAmBE,OAAO+C,KAAA,QAAAmtB,KAAA,2BAAAzS,KAAA,SAA8D,GAAA/c,EAAAJ,GAAA,KAAAR,EAAA,OAA4BO,YAAA,kBAA4BK,EAAAJ,GAAA,uCAAAI,EAAAJ,GAAA,KAAAR,EAAA,uBAAsFuU,IAAA,WAAAhU,YAAA,eAAAL,OAAiDmwB,MAAA,KAAYzvB,EAAA6C,GAAA7C,EAAA,eAAA8C,EAAAR,GAAyC,OAAAlD,EAAA,OAAiBpC,IAAA8F,EAAA7G,KAAAqG,EAAA3C,YAAA,gCAAgEP,EAAA,KAAU2D,UAAUC,YAAAhD,EAAAH,GAAAiD,EAAA7G,aAAqC,gBDY56C,EACA,KACA,KACA,eENe,ICTyDyzB,GCqBxEpvB,SCXA1B,UAEAE,KAAAqV,mBAEAvV,gBAEAE,KAAAsV,qBAEAzV,SAEAC,kBAEAE,KAAAoF,UAAAmQ,IAAA,uBAAAvV,KAAA6wB,gBAGA/wB,oBAEAE,KAAAoF,UAAAqQ,KAAA,uBAAAzV,KAAA6wB,gBAGA/wB,gBAAAmM,GACAjM,KAAAoF,WACA6G,QCUApM,SAEAC,mBAEA,MAAA4B,EAAAjD,OAAAkD,SAAAC,YAAAC,iBACA,WAAAC,QAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAjC,KAAAkC,QACAC,EAAA,4BACAC,EAAA3D,OAAA4D,SAAAE,UACAC,KAAgC/D,OAAA4D,SAAAC,IAAA2e,IAAA6P,QAChC5xB,KAEAT,OAAAkD,SAAAiB,kBAAAX,EAAAE,EAAAC,EAAAI,EAAAtD,GAEAT,OAAAkD,SAAAkB,MACAC,OAAAV,EACAE,IAAAE,EAGAO,OAAA7D,EAEA8D,aAAA,SAEAC,KAAAnI,IACA,MAAAoI,EAAApI,OACA2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,uBAAMT,GAErEjD,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAnB,EAAAmB,IACqBpI,IACrB2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,sBAAMT,GACrE,MAAAwB,EAAApI,OAEA2D,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAlB,EAAAlH,QAKAgF,gBAAAiD,GAEA,MAAArB,EAAAjD,OAAAkD,SAAAC,YAAAC,iBACA,WAAAC,QAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAjC,KAAAkC,QACAC,EAAA,2BACAC,EAAA3D,OAAA4D,SAAAsT,WACAnT,KAAgC/D,OAAA4D,SAAAC,IAAA2e,IAAA8P,OAChC7xB,GAEAmhB,KAAAtd,EAAAsd,MAGA5hB,OAAAkD,SAAAiB,kBAAAX,EAAAE,EAAAC,EAAAI,EAAAtD,GAEAT,OAAAkD,SAAAkB,MACAC,OAAAV,EACAE,IAAAE,EAGA1H,KAAAoE,EAEA8D,aAAA,SAEAC,KAAAnI,IACA,MAAAoI,EAAApI,OACA2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,uBAAMT,GAErEjD,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAnB,EAAAmB,IACqBpI,IACrB2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,sBAAMT,GACrE,MAAAwB,EAAApI,OAEA2D,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAlB,EAAAlH,QAKAgF,sBAEA,MAAA4B,EAAAjD,OAAAkD,SAAAC,YAAAC,iBACA,WAAAC,QAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAjC,KAAAkC,QACAC,EAAA,sBACAC,EAAA3D,OAAA4D,SAAAE,UACAC,KAAgC/D,OAAA4D,SAAAC,IAAA2e,IAAA+P,eAChC9xB,KAEAT,OAAAkD,SAAAiB,kBAAAX,EAAAE,EAAAC,EAAAI,EAAAtD,GAEAT,OAAAkD,SAAAkB,MACAC,OAAAV,EACAE,IAAAE,EAGAO,OAAA7D,EAEA8D,aAAA,SAEAC,KAAAnI,IACA,MAAAoI,EAAApI,OACA2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,uBAAMT,GAErEjD,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAnB,EAAAmB,IACqBpI,IACrB2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,sBAAMT,GACrE,MAAAwB,EAAApI,OAEA2D,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAlB,EAAAlH,QAKAgF,2BAAAiD,EAAAkuB,GAEA,MAAAvvB,EAAAjD,OAAAkD,SAAAC,YAAAC,iBACA,WAAAC,QAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAjC,KAAAkC,QAEAC,EAAA,6BACAC,EAAA3D,OAAA4D,SAAAsT,WAEAnT,EAAA/D,OAAA4D,SAAA0T,QAAAtX,OAAA4D,SAAAC,IAAA2e,IAAAiQ,YAA6FzyB,OAAA4D,SAAAC,IAAA2e,IAAAiQ,WAAmCD,IAChI/xB,GACAiyB,OAAApuB,EAAAouB,OACAC,MAAAruB,EAAAghB,KACAiL,UAAAjsB,EAAAisB,UACAC,SAAAlsB,EAAAksB,SACAC,YAAAnsB,EAAAmsB,aAGAzwB,OAAAkD,SAAAiB,kBAAAX,EAAAE,EAAAC,EAAAI,EAAAtD,GAEAT,OAAAkD,SAAAkB,MACAC,OAAAV,EACAE,IAAAE,EAGA1H,KAAAoE,EAEA8D,aAAA,SAEAC,KAAAnI,IACA,MAAAoI,EAAApI,OACA2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,uBAAMT,GAErEjD,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAnB,EAAAmB,IACqBpI,IACrB2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,sBAAMT,GACrE,MAAAwB,EAAApI,OAEA2D,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAlB,EAAAlH,WJ5LAgF,OACA,OAEAge,WAAA,OAEAC,YAAA/d,KAAAqxB,SAEAC,cAAA,KAEAtT,cACA3R,MAAA,EACA4R,KAAA,KACAne,WACArB,OAAAe,QAAAE,IAAA,aAMAG,SAEAC,eAAAkZ,GACAhZ,KAAA+d,YAAA/E,GAIAlZ,cAAAyxB,GAEAvxB,KAAAwxB,wBAEAxxB,KAAAyxB,qBAAAF,EAAAxN,MAEA/jB,KAAA0xB,2BAEA1xB,KAAAoe,gBAAA,GAEApe,KAAAsxB,cAAAC,GAIAzxB,cAEAE,KAAA2xB,mBAEA3xB,KAAA4xB,eAEA5xB,KAAAoe,gBAAA,IAGAte,eAEA,IAAAqxB,EAAA,GACAnxB,KAAA6xB,cAAA1rB,QAAA,SAAAnC,EAAAR,GACA2tB,MAA6BntB,EAAA0R,UAE7B,cAAA1V,KAAA8xB,MAAA,KAAA9xB,KAAA8xB,KAGa,MAAA9xB,KAAA8xB,MAAA,cAAAX,GAAA,KAAAA,GAKb,cAAAA,GAAA,cAAAA,EAAA71B,QAAA,KAAA61B,IACAA,IAAAY,UAAA,EAAAZ,EAAA71B,OAAA,IAGA0E,KAAAgyB,4BAAAhyB,KAAAyB,UAAA0vB,GArEW,GAuEXnxB,KAAAoe,gBAAA,IAVA3f,OAAAuP,OAAAikB,OAAAhkB,SAA8C2Q,MAAA,eAH9CngB,OAAAuP,OAAAikB,OAAAhkB,SAA8C2Q,MAAA,aAgB9C9e,UAAAqxB,GAOA,OANAnxB,KAAAwW,WAAA2a,SAEAnxB,KAAAwW,WAAAwY,UAAAhvB,KAAAsxB,cAAAtC,UACAhvB,KAAAwW,WAAAyY,SAAAjvB,KAAAsxB,cAAArC,SACAjvB,KAAAwW,WAAA0Y,YAAAlvB,KAAAsxB,cAAApC,YACAlvB,KAAAwW,WAAAuN,KAAA/jB,KAAAsxB,cAAAvN,KACA3kB,KAAAC,MAAAD,KAAAgZ,UAAApY,KAAAwW,cAGA1W,mBACAE,KAAAkyB,IAAAC,IAAA,GACAnyB,KAAAkyB,IAAA/0B,KAAA,IAGA2C,eAEAE,KAAA6xB,iBAEA7xB,KAAAoyB,UAAAjsB,QAAAvI,IACAA,EAAAy0B,UAAA,IAGAryB,KAAAsyB,YAAA,EAEAtyB,KAAAuyB,iBACAvyB,KAAAwyB,iBACAxyB,KAAAwjB,MAAAiP,WAAAC,WAAA1yB,KAAAwyB,kBKnGA13B,KAAA,SAGA+E,SAEAC,wBACA,WAAAgC,QAAA,CAAAC,EAAAC,KACAhC,KAAA2yB,mBAAA1vB,KAAAnI,IACA,QAAAM,EAAA,EAAmCA,EAAAN,OAAAQ,OAAsBF,IAAA,CACzD,MAAA82B,GACAxc,KAAA5a,OAAAM,GAAAsa,KACAvY,KAAArC,OAAAM,GAAA+B,KACAk1B,UAAA,GAEAryB,KAAAoyB,UAAAx2B,KAAAs2B,KAEiBp3B,IACjBkH,EAAAlH,QAKAgF,qBAAAiD,GACA,WAAAjB,QAAA,CAAAC,EAAAC,KACAhC,KAAA4yB,gBAAA7vB,GAAAE,KAAAnI,IACA,WAAAA,EAAA4a,MAAA,cAAA5a,OAAA,CACAkF,KAAA6yB,SAAA/3B,OACA,QAAAM,EAAA,EAAuCA,EAAA4E,KAAA6yB,SAAAv3B,OAA0BF,IACjE4E,KAAA6yB,SAAAz3B,GAAA03B,GAAA13B,EAAA,IAGiBN,IACjBkH,EAAAlH,QAKAgF,2BACAE,KAAA+yB,sBAAA9vB,KAAAnI,IACA,QAAAA,EAAA4a,OACA1V,KAAAgzB,WAAAl4B,SAEaA,IACb2D,OAAAe,QAAAqb,MAAA/f,MAIAgF,4BAAAmzB,EAAA1vB,GACA,WAAAzB,QAAA,CAAAC,EAAAC,KACAhC,KAAAkzB,2BAAAD,EAAA1vB,GAAAN,KAAAnI,IAEA,GADAkF,KAAAwW,WAAAuN,KAAAoP,MAAA,EACA,QAAAr4B,EAAA4a,KAAA,CACA,MAAA0d,GAA2Cpa,KAAA,SAAArY,QAAA,YAC3CzB,EAAAE,KAAAgZ,UAAAgb,GACA30B,OAAA40B,SACA50B,OAAA40B,OAAAC,OAAAC,YAAAr0B,EAAA,KACAT,OAAA60B,OAAAtD,aAEqB,QAAAl1B,EAAA4a,MACrBjX,OAAAuP,OAAArN,QAAAka,MAAA/f,EAAA6F,UAEiB7F,IACjBkH,EAAAlH,WHlDAuI,OAEAguB,UACA9tB,KAAA6K,QACAvD,SAAA,IAGA/P,KAAA,MAGA04B,QAAA,GAEAX,YAEAY,WAAA,IAEA5B,iBAEAmB,YAAA,EAEAV,YAAA,EAEAoB,eAAA,EAEAC,YAAA,EAEApB,iBAEAH,aAEAN,KAAA,IAEAU,iBAEAoB,uBAAAn1B,OAAA4D,SAAAC,IAAA2e,IAAA4S,qBAEA3B,KACAC,IAAA,GACA2B,MAAA,IAGAtd,YACA2a,UACApN,QACAiL,aACAC,YACAC,kBAIArvB,SACAC,eACAE,KAAA0zB,eAAA1zB,KAAA0zB,eAGA5zB,WAAAi0B,GACA,MAAArE,EAAA1vB,KAEA,GADA+zB,EAAA1B,UAAA0B,EAAA1B,SACA0B,EAAA1B,SAAA,CACA3C,EAAAsD,aACAtD,EAAAkC,eACAmC,EAAA1B,UAAA0B,EAAA1B,UAGA,MAAA2B,GACA72B,KAAA42B,EAAA52B,KACAuY,KAAAqe,EAAAre,KACA2c,UAAA,GAEA3C,EAAAmC,cAAAj2B,KAAAo4B,GAEAtE,EAAA8C,cAAA52B,aAAiDm4B,EAAAre,QACjDga,EAAAlM,MAAAiP,WAAAC,WAAAhD,EAAA8C,cACA9C,EAAA6C,cAAA32B,KAAAm4B,EAAAre,WAGAga,EAAAmC,cAAA1rB,QAAA,SAAAnC,EAAAR,GACAQ,EAAA0R,OAAAqe,EAAAre,MACAga,EAAAmC,cAAAr1B,OAAAgH,EAAA,KAGAksB,EAAA8C,cAAArsB,QAAA,SAAAnC,EAAAR,GACAQ,YAA0C+vB,EAAAre,QAC1Cga,EAAA8C,cAAAh2B,OAAAgH,EAAA,KAGAksB,EAAA6C,cAAApsB,QAAA,SAAAnC,EAAAR,GACAQ,IAAA+vB,EAAA,MACArE,EAAA6C,cAAA/1B,OAAAgH,EAAA,KAGAksB,EAAAlM,MAAAiP,WAAAC,WAAAhD,EAAA8C,cAGAxyB,KAAAsyB,YAAAtyB,KAAA6xB,cAAAv2B,QAGAwE,OAAA0H,EAAAysB,GACA,MAAAvE,EAAA1vB,KAGA,GAFA0vB,EAAAwC,IAAA4B,MAAA,GACApE,EAAAwC,IAAAC,IAAA,GACAzC,EAAAsD,YAEA,GAAAxrB,EAAA0sB,cAAAvtB,MAAA,CAGA,MAAAwtB,KACA,QAAA/4B,EAAA,EAAmCA,EAAAoM,EAAAlM,OAAqBF,IAAA,CACxD,MAAA44B,GACA72B,KAAAqK,EAAApM,GAAA+B,KACAuY,KAAAlO,EAAApM,GAAAqF,GACA4xB,UAAA,GAEA8B,EAAAv4B,KAAAo4B,GAGAtE,EAAAmC,iBACA,MAAAoB,KACA,QAAA73B,EAAA,EAAmCA,EAAA+4B,EAAA74B,OAAsBF,IACzD63B,EAAAkB,EAAA/4B,GAAAsa,OACAga,EAAAmC,cAAAj2B,KAAAu4B,EAAA/4B,IAKAs0B,EAAA0C,UAAAjsB,QAAA,SAAAnC,EAAAR,GACAksB,EAAAmC,cAAA1rB,QAAA,SAAAK,EAAAyO,GACAjR,EAAA0R,OAAAlP,EAAAkP,OACA1R,EAAAquB,SAAA7rB,EAAA6rB,cAKA3C,EAAA0C,UAAAjsB,QAAA,SAAAnC,EAAAR,IACA,IAAAksB,EAAA6C,cAAAxzB,QAAAiF,EAAA0R,QACA1R,EAAAquB,UAAA,KAIA3C,EAAA4C,YAAA5C,EAAAmC,cAAAv2B,aAEa,YAAAkM,EAAAjE,KAAA,CAEbmsB,EAAAkC,eACA,MAAAoC,GACA72B,KAAAqK,EAAArK,KACAuY,KAAAlO,EAAA/G,GACA4xB,UAAA,GAEA3C,EAAAmC,cAAAj2B,KAAAo4B,GAEAtE,EAAA6C,cAAA32B,KAAA4L,EAAA/G,IAEAivB,EAAA0C,UAAAjsB,QAAA,SAAAnC,EAAAR,GACAksB,EAAAmC,cAAA1rB,QAAA,SAAAK,EAAAyO,GACAjR,EAAA0R,OAAAlP,EAAAkP,OACA1R,EAAAquB,SAAA7rB,EAAA6rB,cAKA3C,EAAA4C,YAAA5C,EAAAmC,cAAAv2B,SAIAwE,iBAAAi0B,GACA/zB,KAAA2zB,WAAA,MAAAI,GAGAj0B,SAAAi0B,GACA/zB,KAAAyzB,WAAAM,EACA/zB,KAAA8xB,KAAAiC,GAGAj0B,kBACAE,KAAA0zB,eAAA1zB,KAAA0zB,cACA1zB,KAAA2zB,YAAA,GAGA7zB,gBAAAi0B,GAGA/zB,KAAAo0B,gBAAAL,GAEA/zB,KAAAq0B,oBAAAN,GAEA/zB,KAAAs0B,iBAAAP,GAEA/zB,KAAAsyB,YAAAtyB,KAAA6xB,cAAAv2B,QAGAwE,gBAAAi0B,GAEA/zB,KAAAoyB,UAAAjsB,QAAA,SAAAnC,EAAAR,GACAQ,EAAA0R,OAAAqe,EAAAre,OACA1R,EAAAquB,UAAA,MAKAvyB,oBAAAi0B,GAEA/zB,KAAA6xB,cAAA1rB,QAAA,SAAAnC,EAAAR,GACAQ,EAAA0R,OAAAqe,EAAAre,MACA1V,KAAA6xB,cAAAr1B,OAAAgH,EAAA,MAKA1D,iBAAAi0B,GACA,GAAA/zB,KAAA6xB,cAAAv2B,QAAA,GAEA,MAAAi5B,EAAAv0B,KAAAuyB,cAAAxzB,QAAAg1B,EAAAre,MACA6e,GAAA,IAEAv0B,KAAAgzB,WACAhzB,KAAAuyB,cAAA/1B,OAAA+3B,EAAA,GACqBv0B,KAAAgzB,aACrBhzB,KAAAuyB,cAAA,IAEAvyB,KAAAwyB,cAAAh2B,OAAA+3B,EAAA,GACAv0B,KAAAwjB,MAAAiP,WAAAC,WAAA1yB,KAAAwyB,mBInPwEgC,cC0CxE7wB,YAEQ8wB,SAAA7e,EAEAmO,OAEAwF,MAEAuB,KAEAoC,QAEA6C,oBAEA2E,KChDQn5B,OAAA4E,EAAA,QAAA5E,CACdq1B,ECTQ,WAAgB,IAAA1vB,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,mBAA6BO,YAAA,iBAAAL,OAAoCoe,MAAA1d,EAAA4c,WAAAe,QAAA3d,EAAA8c,cAAkD7c,IAAK2d,OAAA,SAAAzd,GAA0B,OAAAH,EAAA6d,YAAA1d,IAA+Bwd,QAAA,SAAAxd,GAA4B,OAAAH,EAAA8d,aAAA3d,KAAiC4O,OAAQrS,MAAAsD,EAAA,YAAA+K,SAAA,SAAAiE,GAAiDhP,EAAA6c,YAAA7N,GAAoBtD,WAAA,iBAA2BtM,EAAA,OAAYO,YAAA,2BAAqCP,EAAA,OAAYO,YAAA,gBAA0BP,EAAA,OAAYO,YAAA,aAAuBP,EAAA,MAAAY,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAAgEO,YAAA,mBAAAkM,OAAsCC,OAAA,MAAA9L,EAAAuyB,YAA+BtyB,IAAKC,MAAA,SAAAC,GAAyB,OAAAH,EAAAyzB,SAAA,SAA2BzzB,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAA4CO,YAAA,gCAA0CP,EAAA,OAAYO,YAAA,iBAAAM,IAAiCC,MAAA,SAAAC,GAAkD,OAAzBA,EAAAiM,kBAAyBpM,EAAA0zB,gBAAAvzB,OAAqCf,EAAA,OAAYO,YAAA,mBAA6BP,EAAA,MAAWO,YAAA,mBAAAL,OAAsCC,GAAA,UAAcS,EAAA6C,GAAA7C,EAAA,uBAAA8C,EAAAR,GAAiD,OAAAlD,EAAA,MAAgBpC,IAAAsF,EAAA3C,YAAA,kBAAAkM,OAA+CC,OAAA9L,EAAA8xB,cAAwB1yB,EAAA,QAAAY,EAAAJ,GAAAI,EAAAH,GAAAiD,EAAA7G,SAAA+D,EAAAJ,GAAA,KAAAR,EAAA,QAAgEoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,MAAAsD,EAAA,WAAA0L,WAAA,eAA4E/L,YAAA,iBAAAM,IAAmCC,MAAA,SAAAC,GAAkD,OAAzBA,EAAAiM,kBAAyBpM,EAAA2zB,gBAAA7wB,WAAuC,KAAA9C,EAAAJ,GAAA,SAAAI,EAAAoxB,YAAAhyB,EAAA,QAAsDO,YAAA,iBAAAM,IAAiCC,MAAA,SAAAC,GAAkD,OAAzBA,EAAAiM,kBAAyBpM,EAAA0wB,aAAAvwB,OAAkCH,EAAAJ,GAAA,UAAAI,EAAAkM,KAAAlM,EAAAJ,GAAA,KAAAR,EAAA,QAAmDO,YAAA,mBAA6BP,EAAA,QAAAY,EAAAJ,GAAA,OAAAI,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAAqEoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,MAAAsD,EAAA,cAAA0L,WAAA,kBAAkF/L,YAAA,gBAA4BP,EAAA,OAAYO,YAAA,oBAA8BP,EAAA,OAAYO,YAAA,eAAyBP,EAAA,QAAayM,OAAOC,OAAA9L,EAAAyyB,YAAuBxyB,IAAKC,MAAA,SAAAC,GAAkD,OAAzBA,EAAAiM,kBAAyBpM,EAAA4zB,iBAAA,SAAmC5zB,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAR,EAAA,QAA0CyM,OAAOC,QAAA9L,EAAAyyB,YAAwBxyB,IAAKC,MAAA,SAAAC,GAAkD,OAAzBA,EAAAiM,kBAAyBpM,EAAA4zB,iBAAA,SAAmC5zB,EAAAJ,GAAA,eAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAA8CO,YAAA,sBAAgCP,EAAA,OAAYoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,MAAAsD,EAAA,WAAA0L,WAAA,eAA4E/L,YAAA,eAAAkM,OAAoCgoB,mBAAA7zB,EAAAyyB,cAAoCrzB,EAAA,kBAAuBuU,IAAA,aAAArU,OAAwBgkB,cAAA,OAAAC,eAAA,aAAA1U,SAAA,GAAAilB,YAAA,GAAAC,YAAA,EAAAjvB,SAAA,IAA8G7E,IAAK6O,OAAA9O,EAAA8O,QAAoBC,OAAQrS,MAAAsD,EAAA,cAAA+K,SAAA,SAAAiE,GAAmDhP,EAAAqxB,cAAAriB,GAAsBtD,WAAA,oBAA6B,GAAA1L,EAAAJ,GAAA,KAAAI,EAAA8xB,WAA0Y9xB,EAAAkM,KAA1Y9M,EAAA,OAA8CO,YAAA,eAAAkM,OAAkCgoB,mBAAA7zB,EAAAyyB,cAAoCrzB,EAAA,kBAAuBuU,IAAA,aAAArU,OAAwBgkB,cAAA,OAAAC,eAAA,aAAA1U,SAAA,GAAAilB,YAAA,GAAAC,YAAA,GAAgG9zB,IAAKqT,OAAAtT,EAAA8O,QAAoBC,OAAQrS,MAAAsD,EAAA,cAAA+K,SAAA,SAAAiE,GAAmDhP,EAAAqxB,cAAAriB,GAAsBtD,WAAA,oBAA6B,GAAA1L,EAAAJ,GAAA,KAAAR,EAAA,OAAqCoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,OAAAsD,EAAAyyB,WAAA/mB,WAAA,gBAA8E/L,YAAA,oBAAgCP,EAAA,MAAWO,YAAA,eAA0BK,EAAA6C,GAAA7C,EAAA,mBAAA8C,EAAAR,GAA6C,OAAAlD,EAAA,MAAgBpC,IAAA8F,EAAA7G,KAAAqG,EAAA3C,YAAA,cAAAkM,OAAuDmoB,QAAAh0B,EAAA8xB,cAAyB1yB,EAAA,QAAaO,YAAA,gBAAAkM,OAAmCC,OAAAhJ,EAAAquB,UAAsBpuB,UAAWC,YAAAhD,EAAAH,GAAAiD,EAAA7G,OAAgCgE,IAAKC,MAAA,SAAAC,GAAkD,OAAzBA,EAAAiM,kBAAyBpM,EAAAi0B,WAAAnxB,WAAkC,OAAA9C,EAAAJ,GAAA,KAAAR,EAAA,OAA+BO,YAAA,sBAAAM,IAAsCC,MAAA,SAAAC,GAAyBA,EAAAiM,sBAA4BhN,EAAA,KAAAY,EAAAJ,GAAA,oCAAAR,EAAA,QAAAY,EAAAJ,GAAAI,EAAAH,GAAAG,EAAAoxB,gBAAApxB,EAAAJ,GAAA,iCAAAI,EAAAJ,GAAA,KAAAR,EAAA,cAAuKO,YAAA,cAAAL,OAAiC+C,KAAA,UAAA0a,KAAA,MAA6B9c,IAAKC,MAAAF,EAAAk0B,iBAA0B,OAAAl0B,EAAAJ,GAAA,KAAAR,EAAA,OAAgCO,YAAA,qCAA+CK,EAAAJ,GAAA,YAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAA2CO,YAAA,kBAA4BP,EAAA,OAAYO,YAAA,aAAuBK,EAAAJ,GAAA,UAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAAyCO,YAAA,oBAA8BP,EAAA,aAAkBO,YAAA,iBAAAL,OAAoC60B,OAAA,GAAAC,gBAAAp0B,EAAA2xB,YAA0CvyB,EAAA,oBAAyBE,OAAO+0B,KAAA,KAAAzkB,MAAA,KAAA8c,MAAA,SAAwC1sB,EAAAJ,GAAA,KAAAR,EAAA,oBAAqCE,OAAO+0B,KAAA,OAAAzkB,MAAA,QAA4B5P,EAAAJ,GAAA,KAAAR,EAAA,oBAAqCE,OAAO+0B,KAAA,SAAAzkB,MAAA,MAAA8c,MAAA,QAA4C1sB,EAAAJ,GAAA,KAAAR,EAAA,oBAAqCE,OAAO+0B,KAAA,UAAAzkB,MAAA,OAAA8c,MAAA,SAA+C1sB,EAAAJ,GAAA,KAAAR,EAAA,oBAAqCE,OAAO+0B,KAAA,SAAAzkB,MAAA,UAAgC5P,EAAAJ,GAAA,KAAAR,EAAA,oBAAqCE,OAAO+0B,KAAA,SAAAzkB,MAAA,WAAgC,kBDYt3J,EACA,KACA,KACA,eD2CAtP,SGjDA1B,UAEAE,KAAAqV,mBAEAvV,gBAEAE,KAAAsV,qBAEAzV,SAEAC,kBAEAE,KAAAoF,UAAAmQ,IAAA,qBAAAvV,KAAAw1B,kBAGA11B,oBAEAE,KAAAoF,UAAAqQ,KAAA,qBAAAzV,KAAAw1B,kBAGA11B,gBAAAmM,GACAjM,KAAAoF,WACA6G,QCvBAnR,KAAA,SAGA0V,UAEA1Q,SACA,OAAAsO,QAAApO,KAAAoF,UAAAyd,gBAAAD,MAGA9iB,MACA,OAAAE,KAAAoF,UAAAyd,gBAAAD,MAGA/iB,SAEA41B,eAAA36B,IACAA,EAAA46B,YAAA56B,EAAA66B,aACA76B,EAAAsmB,SAAgCtmB,EAAA66B,gBAAqB76B,EAAA46B,aAErD56B,EAAAsmB,OAAA,OAAAtmB,EAAA66B,aAAA,GAAA76B,EAAA66B,eAAA,OAAA76B,EAAA46B,WAAA,GAAA56B,EAAA46B,YAEA56B,GAGAgF,sBAAAhF,EAAAmsB,GAAA,GAEAjnB,KAAAqZ,gBAAA,KAEArZ,KAAAoF,UAAAJ,MAAA,+BAAAlK,EAAAipB,KAAAkD,GAEAjnB,KAAAoF,UAAAJ,MAAA,8BAAAlK,EAAAk0B,UAAA/H,GAEAjnB,KAAAoF,UAAAJ,MAAA,6BAAAlK,EAAAm0B,SAAAhI,GAEAjnB,KAAAoF,UAAAJ,MAAA,6BAAAlK,EAAAo0B,YAAAjI,MAKAnnB,uBACA,MAAA81B,GAA+BhT,IAAA5iB,KAAA4iB,KAE/B5iB,KAAA61B,uBAAAD,GACA3yB,KAAAuT,IACAxW,KAAA81B,iBAAAtf,EAAA1b,KAAAo0B,aAEAlvB,KAAA+1B,sBAAAvf,EAAA1b,OACiB,SAAAA,GAEjB2D,OAAAe,QAAAqb,MAAA/f,MAKAgF,mBAEAE,KAAAg2B,qBACA/yB,KAAAuT,IAEAxW,KAAAy1B,eAAAjf,EAAA1b,MAEAkF,KAAAqZ,gBAAA,KAEArZ,KAAAoF,UAAAJ,MAAA,+BAAAwR,EAAA1b,SAEiB,SAAAA,GAEjB2D,OAAAe,QAAAqb,MAAA/f,MAKAgF,iCAEAE,KAAAi2B,4BACAhzB,KAAAuT,IACAxW,KAAAk2B,mBAAA1f,EAAA1b,KAEA,WAAA0b,EAAA1b,MAEAkF,KAAAm2B,qBAEiB,SAAAr7B,GAEjB2D,OAAAe,QAAAqb,MAAA/f,MAMAgF,oBACA,GAAAE,KAAAo2B,OAAA,CACA,MAAArzB,GAEAszB,IAAAr2B,KAAA4iB,KAGA5iB,KAAAs2B,wBAAAvzB,GACAE,KAAAuT,IAEAxW,KAAA6yB,SAAArc,GACqB,SAAA1b,GAErB2D,OAAAe,QAAAqb,MAAA/f,OAMAgF,cAEA,OACA8iB,IAAA5iB,KAAAoF,UAAAyd,gBAAAD,IAEAmB,KAAA/jB,KAAAu2B,OAAA3S,eAEAoL,UAAAhvB,KAAAsuB,MAAA1K,eAEAqL,SAAAjvB,KAAAuuB,KAAA3K,eAEAsL,YAAAlvB,KAAAwuB,KAAA5K,iBAKA9jB,sBAEA,OAAAE,KAAAsuB,MAAAkI,kBAAAx2B,KAAAuuB,KAAAiI,kBAAAx2B,KAAAwuB,KAAAgI,mBAIA12B,eAEA,MAAAZ,EAAAc,KAAAy2B,cAEAz2B,KAAA02B,YAAAx3B,EAAA,QACA+D,KAAAnI,IACA,WAAAA,EAAA4a,KAAA,CAEA,IAAAihB,GAAwCh2B,QAAA,YACxClC,OAAA40B,OAAAC,OAAAC,YAAAoD,EAAA,KAEA32B,KAAA42B,gBAAA97B,OAAAoE,GAEAc,KAAA62B,oBAAA33B,GAEAc,KAAA82B,aAAA,uBACqB,QAAAh8B,EAAA4a,MAErB1V,KAAA82B,aAAAh8B,EAAA6F,UAEiB,KAEjBX,KAAA82B,aAAA,kBAIAh3B,gBAAAoD,EAAAhE,GAEAA,EAAA0jB,IAAA1f,EAAA0f,IAIA1jB,EAAA6kB,KAAAnB,IAAA1f,EAAA0f,IAEA1jB,EAAA6kB,KAAAhB,MAAA7f,EAAA6f,MAEA7jB,EAAA6kB,KAAA1D,KAAAnd,EAAAmd,KAEAnhB,EAAA6kB,KAAAjB,IAAA5f,EAAA6zB,GAEA73B,EAAA+vB,SAAA/rB,EAAApI,KAAAm0B,SACA/vB,EAAAgwB,YAAAhsB,EAAApI,KAAAo0B,YACAhwB,EAAA8vB,UAAA9rB,EAAApI,KAAAk0B,UACAhvB,KAAA81B,iBAAA52B,EAAAgwB,aAEAlvB,KAAA+1B,sBAAA72B,IAIAY,oBAAAhF,GACA,IAGA,MAAAk8B,GACAhe,KAAA,QACArY,QAAA,WACAzB,UAEA+3B,EAAA73B,KAAAgZ,UAAA4e,GACAv4B,OAAA40B,OAAAC,OAAAC,YAAA0D,EAAA,KACa,MAAA33B,MAMbQ,kCAEA,GAEAE,KAAAsuB,MAAA4I,oBAEAl3B,KAAAuuB,KAAA2I,oBAEAl3B,KAAAwuB,KAAA0I,mBACA,CAEA,MAAAh4B,EAAAc,KAAAy2B,cAEAz2B,KAAAqZ,gBAAA,KAEArZ,KAAAoF,UAAAJ,MAAA,uBAAA9F,UAIAc,KAAAm3B,wBAEAn3B,KAAA82B,aAAA,0BAKAh3B,kBAEAgC,QAAAqU,KAEAnW,KAAAu2B,OAAA/W,WAEAxf,KAAAsuB,MAAA9O,WAEAxf,KAAAuuB,KAAA/O,WAEAxf,KAAAwuB,KAAAhP,aAEAvc,KAAA,KAEAjD,KAAAo3B,mCACiB,KAEjBp3B,KAAAq3B,yBAEAr3B,KAAA82B,aAAA,eAKAh3B,kCAIAE,KAAAsuB,MAAA4I,oBAEAl3B,KAAAuuB,KAAA2I,oBAEAl3B,KAAAwuB,KAAA0I,mBAGAl3B,KAAAs3B,oBAGAt3B,KAAAm3B,wBAEAn3B,KAAA82B,aAAA,4BAKAh3B,mBAEA,MAAAZ,EAAAc,KAAAy2B,cACA,WAAA30B,QAAA,CAAAC,EAAAC,KAEAhC,KAAA02B,YAAAx3B,EAAA,UACA+D,KAAAnI,IACA,QAAAA,EAAA4a,MAEA1V,KAAA42B,gBAAA97B,OAAAoE,GAEAc,KAAAu3B,QAAAr4B,IACyB,QAAApE,EAAA4a,MAEzB1V,KAAA82B,aAAAh8B,EAAA6F,UAEqB7F,IACrBkH,EAAAlH,QAMAgF,QAAAhF,GAEA,IAGA,MAAAk8B,GACAhe,KAAA,QACArY,QAAA,WACAzB,UAEA+3B,EAAA73B,KAAAgZ,UAAA4e,GACAv4B,OAAA40B,OAAAC,OAAAC,YAAA0D,EAAA,KACa,MAAA33B,IAMbb,OAAA+4B,SAAAC,QAAsCh5B,OAAAi5B,aAAAC,gBAAoC78B,EAAA8nB,OAG1E9iB,eAAAkZ,GACAhZ,KAAA43B,YAAA5e,GAGAlZ,kBACA,MAAA4vB,EAAA1vB,KAEAA,KAAA63B,gBAAA,GAEA/1B,QAAAqU,KAEAnW,KAAAu2B,OAAA/W,WAEAxf,KAAAsuB,MAAA9O,WAEAxf,KAAAuuB,KAAA/O,WAEAxf,KAAAwuB,KAAAhP,aAEAvc,KAAA,KAEAjD,KAAA43B,YACA53B,KAAA83B,OAAAjZ,SACAhL,UAAA,yBAEA+K,MAAA,OAEAmZ,QAAA,6BACAlZ,SACAxS,MAAA,EACA4R,KAAA,KACAne,WACArB,OAAAe,QAAAE,IAAA,SAEAgwB,EAAAsI,oCAIAlZ,QACAzS,MAAA,EACA4R,KAAA,KACAne,WACArB,OAAAe,QAAAE,IAAA,aAMAM,KAAAg4B,mCAEiB,KAEjBh4B,KAAAq3B,yBAEAr3B,KAAA82B,aAAA,eAGAh3B,iBAAAm4B,GACAA,GACAA,EAAA9xB,QAAAnC,IACA,MAAAA,EAAAgS,MAAA,MAAAhS,EAAAgS,MACAhS,EAAA0nB,YAAA,EACA1nB,EAAA2nB,cAAA,EACA3nB,EAAAykB,YAAA,EACAzkB,EAAA4nB,gBAAA,EACA5nB,EAAA6nB,aAAA,EACA7nB,EAAA8nB,UAAA,EACA9nB,EAAA+nB,eAAA,EACA/nB,EAAAgoB,OAAA,KAEAhoB,EAAA0nB,YAAA,EACA1nB,EAAA6nB,aAAA,GAEA7nB,EAAAgoB,SACAhoB,EAAA+nB,eAAA,GAEA,KAAA/nB,EAAAgoB,QACAhoB,EAAA0nB,YAAA,EACA1nB,EAAAkoB,MAAA,GACAloB,EAAA8d,IAAA,GACA9d,EAAAmoB,QAAA,GACAnoB,EAAA8nB,UAAA,EACA9nB,EAAA2nB,cAAA,EACA3nB,EAAAykB,YAAA,EACAzkB,EAAA4nB,gBAAA,GACqB,GAAA5nB,EAAAgoB,QACrBhoB,EAAA0nB,YAAA,EACA1nB,EAAA8nB,UAAA,GACqB,GAAA9nB,EAAAgoB,SACrBhoB,EAAA0nB,YAAA,EACA1nB,EAAA8d,IAAA,GACA9d,EAAAmoB,QAAA,GACAnoB,EAAA8nB,UAAA,EACA9nB,EAAAykB,YAAA,EACAzkB,EAAA4nB,gBAAA,SCpZA/rB,SAEAC,oBACA,MAAAW,EAAA,gBACA,IAAAy3B,EAAA/U,SAAAgV,eAAA13B,GACAy3B,KACAA,EAAA/U,SAAAiV,cAAA,WACA33B,KACAy3B,EAAAtK,MAAA,MACAsK,EAAAG,OAAA,MACAlV,SAAAmV,KAAAC,YAAAL,IAEAA,EAAAM,IAAA/5B,OAAAi5B,aAAAe,UAGA34B,yBAEA,MAEA44B,EAFAvV,SAAAwV,iBAAA,mDAEA,GAEAC,EAAAzV,SAAA6F,cAAA,gBAEA0P,GAEAj6B,OAAAkD,SAAAk3B,qBAAAH,EAAAE,IAIA94B,wBAEA,MAAA44B,EAAAvV,SAAA6F,cAAA,kBAEA4P,EAAAzV,SAAA6F,cAAA,gBAEA0P,GAEAj6B,OAAAkD,SAAAk3B,qBAAAH,EAAAE,IAIA94B,aAAAL,EAAA8D,EAAA,QAAAu1B,EAAA,GAEA94B,KAAA+4B,eAEA/4B,KAAAg5B,SAAAv6B,OAAAuP,OAAArN,QAAA4C,IACAw0B,QAAAt4B,EACAq5B,cAIAh5B,eACA,mBAAAE,KAAAg5B,UACAh5B,KAAAg5B,YAIAl5B,kBAAAb,GAEAA,EAAAmlB,OAAA6U,UAAAC,SAAA,gBAEAl5B,KAAA+4B,gBAIAj5B,gBAAAa,EAAA4C,EAAA,QAAAu1B,EAAA,GAEA94B,KAAA82B,aAAAn2B,EAAA4C,EAAAu1B,OCnEAh5B,gBAEAE,KAAAm5B,eAEAt5B,SAEAC,aAEAE,KAAAo5B,gBAGAt5B,gBAEAE,KAAAq5B,mBAGAv5B,gBAEAE,KAAAs5B,mBAGAx5B,eAEAE,KAAAqZ,gBAAA,KAEArZ,KAAAoF,UAAAJ,MAAA,yBAAAhF,KAAAoF,UAAAyd,gBAAAD,QAIA9iB,yBACAE,KAAAu5B,qBAGAz5B,YACArB,OAAAkD,SAAAR,GAAAgiB,SAAAmV,KAAA,QAAAt4B,KAAAw5B,oBAGA15B,cACArB,OAAAkD,SAAA83B,IAAAtW,SAAAmV,KAAA,QAAAt4B,KAAAw5B,uBCNA35B,SAEAC,qBAEA,MAAA4B,EAAAjD,OAAAkD,SAAAC,YAAAC,iBACA,WAAAC,QAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAjC,KAAAkC,QACAC,EAAA,uBACAC,EAAA3D,OAAA4D,SAAAE,UACAC,KAAgC/D,OAAA4D,SAAAC,IAAA2e,IAAAyY,mBAA0C,IAAApqB,MAAAwG,YAC1E5W,KAEAT,OAAAkD,SAAAiB,kBAAAX,EAAAE,EAAAC,EAAAI,EAAAtD,GAEAT,OAAAkD,SAAAkB,MACAC,OAAAV,EACAE,IAAAE,EAGAO,OAAA7D,EAEA8D,aAAA,SAEAC,KAAAnI,IACA,MAAAoI,EAAApI,OACA2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,uBAAMT,GAErEjD,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAnB,EAAAmB,IACqBpI,IACrB2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,sBAAMT,GACrE,MAAAwB,EAAApI,OAEA2D,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAlB,EAAAlH,QAKAgF,4BAEA,MAAA4B,EAAAjD,OAAAkD,SAAAC,YAAAC,iBACA,WAAAC,QAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAjC,KAAAkC,QACAC,EAAA,qBACAC,EAAA3D,OAAA4D,SAAAE,UACAC,KAAgC/D,OAAA4D,SAAAC,IAAA2e,IAAAiV,qBAChCh3B,KAEAT,OAAAkD,SAAAiB,kBAAAX,EAAAE,EAAAC,EAAAI,EAAAtD,GAEAT,OAAAkD,SAAAkB,MACAC,OAAAV,EACAE,IAAAE,EAGAO,OAAA7D,EAEA8D,aAAA,SAEAC,KAAAnI,IACA,MAAAoI,EAAApI,OACA2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,uBAAMT,GAErEjD,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAnB,EAAAmB,IACqBpI,IACrB2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,sBAAMT,GACrE,MAAAwB,EAAApI,OAEA2D,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAlB,EAAAlH,QAKAgF,wBAAAiD,GAEA,MAAArB,EAAAjD,OAAAkD,SAAAC,YAAAC,iBACA,WAAAC,QAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAjC,KAAAkC,QAEAC,EAAA,qBACAC,EAAA3D,OAAA4D,SAAAE,UACAC,KAAgC/D,OAAA4D,SAAAC,IAAA2e,IAAA0Y,mBAChCz6B,GAEAm3B,IAAAtzB,EAAAszB,KAGA53B,OAAAkD,SAAAiB,kBAAAX,EAAAE,EAAAC,EAAAI,EAAAtD,GAEAT,OAAAkD,SAAAkB,MACAC,OAAAV,EACAE,IAAAE,EAGAO,OAAA7D,EAEA8D,aAAA,SAEAC,KAAAnI,IACA,MAAAoI,EAAApI,OACA2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,uBAAMT,GAErEjD,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAnB,EAAAmB,IACqBpI,IACrB2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,sBAAMT,GACrE,MAAAwB,EAAApI,OAEA2D,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAlB,EAAAlH,QAKAgF,YAAAkuB,EAAAzqB,GAEA,MAAA7B,EAAAjD,OAAAkD,SAAAC,YAAAC,iBACA,WAAAC,QAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAjC,KAAAkC,QACAC,EAAA,oBACAC,EAAA3D,OAAA4D,SAAAsT,WAEAnT,EAAA/D,OAAA4D,SAAA0T,QAAAtX,OAAA4D,SAAAC,IAAA2e,IAAAiQ,SAAAzyB,OAAA4D,SAAAC,IAAA2e,IAAAiQ,UAAA,SAAA3tB,EAAA,SAEArE,GAEA0jB,IAAAoL,EAAApL,IAEAE,IAAAkL,EAAAlL,IAEAC,MAAAiL,EAAAjL,MAEAqO,MAAApD,EAAAjK,KAEAiL,UAAAhB,EAAAgB,UAEAC,SAAAjB,EAAAiB,SAEAC,YAAAlB,EAAAkB,aAGAzwB,OAAAkD,SAAAiB,kBAAAX,EAAAE,EAAAC,EAAAI,EAAAtD,GAEAT,OAAAkD,SAAAkB,MACAC,OAAAV,EACAE,IAAAE,EAGA1H,KAAAoE,EAEA8D,aAAA,SAEAC,KAAAnI,IACA,MAAAoI,EAAApI,OACA2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,uBAAMT,GAErEjD,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAnB,EAAAmB,IACqBpI,IACrB2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,sBAAMT,GACrE,MAAAwB,EAAApI,OAEA2D,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAlB,EAAAlH,QAKAgF,uBAAAiD,GAEA,MAAArB,EAAAjD,OAAAkD,SAAAC,YAAAC,iBACA,WAAAC,QAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAjC,KAAAkC,QACAC,EAAA,6BACAC,EAAA3D,OAAA4D,SAAAE,UAEAC,EAAA/D,OAAA4D,SAAA0T,QAAAtX,OAAA4D,SAAAC,IAAA2e,IAAA2Y,WAAAn7B,OAAA4D,SAAAC,IAAA2e,IAAA2Y,WAAA72B,EAAA6f,IACA1jB,KAEAT,OAAAkD,SAAAiB,kBAAAX,EAAAE,EAAAC,EAAAI,EAAAtD,GAEAT,OAAAkD,SAAAkB,MACAC,OAAAV,EACAE,IAAAE,EAGAO,OAAA7D,EAEA8D,aAAA,SAEAC,KAAAnI,IACA,MAAAoI,EAAApI,OACA2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,uBAAMT,GAErEjD,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAnB,EAAAmB,IACqBpI,IACrB2D,OAAAkD,SAAAC,YAAAuB,WAA+DhB,sBAAMT,GACrE,MAAAwB,EAAApI,OAEA2D,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GACAlB,EAAAlH,WP3LAA,KAAA,MAGAoH,QAAAzD,OAAA4D,SAAAH,QAEAg0B,mBAAA,WAGA1lB,UAGA2iB,MAAA,IACA,EAGArzB,YACA,iBAAAE,KAAAk2B,oBAAA,IAAAl2B,KAAAmzB,OAGArzB,YACA,kBAAAE,KAAAk2B,oBAAA,IAAAl2B,KAAAmzB,QAGArzB,UAEAE,KAAA4L,QAEA/L,SAEAC,OAGAE,KAAAoF,UAAAyd,gBAAAD,IAEA5iB,KAAA65B,uBAGA75B,KAAA85B,mBAGA95B,KAAA+5B,iCAEA/5B,KAAAg6B,aAIAl6B,UAAAm6B,GACAj6B,KAAAu2B,OAAA0D,GAIAn6B,SAAAo6B,GACAl6B,KAAAsuB,MAAA4L,GAIAp6B,QAAAq6B,GACAn6B,KAAAuuB,KAAA4L,GAIAr6B,QAAAs6B,GACAp6B,KAAAwuB,KAAA4L,MQzHwEC,cCaxEl9B,KAAA,WACAwG,YAAiB22B,UCND/+B,OAAA4E,EAAA,QAAA5E,CACdi5B,ECTQ,WAAgB,IAAAtzB,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBO,YAAA,mBAA6BP,EAAA,UAAeO,YAAA,qBAA+BP,EAAA,MAAWO,YAAA,aAAuBK,EAAAJ,GAAA,aAAAI,EAAAJ,GAAA,KAAAR,EAAA,QAA6Ca,IAAImL,MAAApL,EAAAq5B,UAAAxZ,QAAA7f,EAAAs0B,oBAAqD,GAAAt0B,EAAAJ,GAAA,KAAAR,EAAA,QAA6BO,YAAA,sBAAgCP,EAAA,UAAeO,YAAA,sBAAgCP,EAAA,MAAWO,YAAA,aAAuBK,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAAgDO,YAAA,oBAA8BP,EAAA,cAAmBO,YAAA,WAAAM,IAA2BC,MAAAF,EAAAs5B,0BAAoCt5B,EAAAJ,GAAA,cAAAI,EAAAJ,GAAA,KAAAR,EAAA,cAAoDO,YAAA,SAAAM,IAAyBC,MAAAF,EAAAu5B,gBAA0Bv5B,EAAAJ,GAAA,gBAAAI,EAAAJ,GAAA,KAAAR,EAAA,KAA6CO,YAAA,wBAAgCK,EAAAJ,GAAA,KAAAR,EAAA,OAA0BuU,IAAA,QAAA1T,IAAgBmL,MAAApL,EAAAw5B,SAAA/Q,OAAAzoB,EAAA22B,eAAA9W,QAAA7f,EAAAs0B,mBAAgFt0B,EAAAJ,GAAA,KAAAR,EAAA,MAAuBuU,IAAA,OAAA1T,IAAemL,MAAApL,EAAAy5B,QAAA5Z,QAAA7f,EAAAs0B,mBAAmDt0B,EAAAJ,GAAA,KAAAR,EAAA,SAA0BuU,IAAA,OAAA1T,IAAemL,MAAApL,EAAA05B,QAAAjR,OAAAzoB,EAAA22B,eAAA9W,QAAA7f,EAAAs0B,oBAA+E,GAAAt0B,EAAAJ,GAAA,KAAAR,EAAA,UAA+BO,YAAA,qBAA+BP,EAAA,OAAYO,YAAA,yBAAmCP,EAAA,cAAmBO,YAAA,OAAAM,IAAuBC,MAAAF,EAAA25B,cAAwB35B,EAAAJ,GAAA,QAAAI,EAAAJ,GAAA,KAAAR,EAAA,cAA8CO,YAAA,UAAAM,IAA0BC,MAAAF,EAAA45B,iBAA2B55B,EAAAJ,GAAA,iBAAAI,EAAAJ,GAAA,KAAAR,EAAA,YAAAY,EAAAJ,GAAA,KAAAR,EAAA,qBAAAY,EAAAJ,GAAA,KAAAR,EAAA,iBDY53C,EACA,KACA,KACA,eDAAxF,KAAA,SAIAigC,QAAA,eGAeC,aAXCz/B,OAAA4E,EAAA,QAAA5E,CACd8+B,ECTQ,WAAgB,IAAaj6B,EAAbJ,KAAaK,eAA0BC,EAAvCN,KAAuCO,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBO,YAAA,gBAA0BP,EAAA,OAAYO,YAAA,mBAA6BP,EAAA,wBDY7K,EACA,KACA,KACA,eERA,MAAA26B,GACAt3B,YAAiBu3B,QAAStlB,GAC1BulB,SAAA,+BAGAC,EAAA,QAAGC,IAAKC,EAAA,SAEO,IAAAC,EAAA,IAAID,EAAA,SACnBE,SAEAz7B,KAAA,IACA07B,SAAA,QAGA17B,KAAA,QACA5C,KAAA,WACAu+B,UAAuBt3B,IAGvBrE,KAAA,QACA5C,KAAA,WACAu+B,UAAAT,IAGAl7B,KAAA,OACA5C,KAAA,UACAu+B,UAAuBV,MCvBRW,EAGf,KCJev2B,EAAA,IAAIg2B,EAAA,SACnBtgC,KAAA,MAGA+nB,iBAEAD,IAAA,GAEAE,KAAA,EAEAC,MAAA,IAGA6Y,oBAGA97B,UAEAE,KAAAqV,mBAEAvV,gBAEAE,KAAAsV,qBAEAzV,SAEAC,mBAAA+iB,GAEA7iB,KAAA6iB,mBAGA/iB,kBAAA87B,GAEA57B,KAAA47B,kBAGA97B,kBAEAE,KAAAuV,IAAA,0BAAAvV,KAAA67B,oBAEA77B,KAAAuV,IAAA,yBAAAvV,KAAA87B,oBAGAh8B,oBAEAE,KAAAyV,KAAA,0BAAAzV,KAAA67B,oBAEA77B,KAAAyV,KAAA,yBAAAzV,KAAA87B,uBChDA,MAEAC,GACAlxB,QAAA,UACApL,KAAA,cACAsvB,QAAA,UACA9gB,QAAA,UACA4M,MAAA,QACAmhB,QAAA,WA6De,IC7EyDC,GDoBxE9+B,QAXyBw+B,YAYzBh4B,cACAN,OACA00B,SACAx0B,KAAAuH,OACAD,QAAA,WAEAtH,MACAA,KAAAuH,OACAD,QAAA,WAGAgJ,UAAA/I,OACAguB,UACAv1B,KAAAiK,OACA3C,QAAA,MAGA/P,KAAA,SAGAyT,SACAiC,UACA1Q,cACA,OACA,aACAi8B,EAAA/7B,KAAAuD,MACAvD,KAAA6T,UAAA7T,KAAA6T,UAAA,MAIAhU,SAEAC,aACAE,KAAAk8B,OACAC,aAAAn8B,KAAAk8B,QAIAp8B,aACAE,KAAAgwB,SAGAlwB,QACAE,KAAAk8B,OACAC,aAAAn8B,KAAAk8B,OAEA/Y,SAAAmV,KAAA8D,YAAAp8B,KAAAgmB,QAAAqW,OAGAv8B,UAEAE,KAAAk8B,MAAAI,WAAA,KACAt8B,KAAAgwB,SACShwB,KAAA84B,YEvDMn4B,aAXCpF,OAAA4E,EAAA,QAAA5E,CACd0gC,ECTQ,WAAgB,IAAA/6B,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiByM,MAAA7L,EAAAq7B,YAAAp7B,IAA0Bq7B,WAAAt7B,EAAAs7B,WAAAC,WAAAv7B,EAAAu7B,cAAyDn8B,EAAA,QAAaO,YAAA,WAAAM,IAA2BC,MAAA,SAAAC,GAAyB,OAAAH,EAAA8uB,YAAqB9uB,EAAAJ,GAAA,KAAAR,EAAA,OAAwBO,YAAA,UAAAoD,UAAgC2L,UAAA1O,EAAAH,GAAAG,EAAA62B,mBDY3U,EACA,KACA,WACA,eE0Be,IAAA2E,GA/Bf58B,KAAA+P,GACA,OAAA7P,KAAAW,QAAA,OAAAkP,IAEA/P,QAAA+P,GACA,OAAA7P,KAAAW,QAAA,UAAAkP,IAEA/P,QAAA+P,GACA,OAAA7P,KAAAW,QAAA,UAAAkP,IAEA/P,MAAA+P,GACA,OAAA7P,KAAAW,QAAA,QAAAkP,IAEA/P,QAAA+P,GACA,OAAA7P,KAAAW,QAAA,UAAAkP,IAEA/P,QAAAyD,EAAAsM,GACA,IAAA8sB,EAAA9sB,EACA,iBAAA8sB,IACAA,GAAwB5E,QAAA4E,IAExBA,EAAAp5B,OACA,MAAAq5B,EAAAD,MACAE,EAAA,IAA6BzB,EAAA,SAC7B0B,OAAAC,GACAA,EAAyBp8B,GAAkB0C,MAAAu5B,EAAA/nB,IAAA,gBAElCmoB,SAET,OADA7Z,SAAAmV,KAAAC,YAAAsE,EAAAR,KACAQ,EAAArZ,MAAAyZ,YCTe,IC7ByDC,GDUxE75B,OACAgJ,MACA9I,KAAA6K,QACAvD,SAAA,GAEAoT,MACA1a,KAAAuH,OACAD,QAAA,KAGA2F,UACA1Q,YACA,OAfe,mBAiBEuM,KAAArM,KAAAqM,UELF8wB,cAXC5hC,OAAA4E,EAAA,QAAA5E,CACd2hC,ECTQ,WAAgB,IAAa98B,EAAbJ,KAAaK,eAA0BC,EAAvCN,KAAuCO,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiByM,MAAhF/M,KAAgFo9B,YAAoB98B,EAAA,QAAaO,YAAA,0BDY3I,EACA,KACA,WACA,eEkDe,IAAAw8B,IArDfR,SAAA,KAEA/8B,QACAE,KAAA68B,SAEA78B,KAAA68B,SAAAxwB,OAGArM,KAAAs9B,mBAIAx9B,SACAE,KAAA68B,UAEA78B,KAAA68B,SAAAzhB,QAIAtb,kBACAE,KAAA68B,SAAA,IAA4BzB,EAAA,SAC5Bz3B,YAAyB45B,YAAAJ,IAEzBr9B,OAAAi9B,GACA,OAAAA,EACA,eAMA15B,OAAgCgJ,KAAArM,KAAAw9B,mBAMhC1iC,MAAmB0iC,aAAA,GACnB39B,SAEAC,OACAE,KAAAw9B,aAAA,GAGA19B,OACAE,KAAAw9B,aAAA,MAGSR,SAET7Z,SAAAmV,KAAAC,YAAAv4B,KAAA68B,SAAAR,OCiGe,IC/JyDoB,IDWxEtgC,QAAaw+B,SACbt4B,OAEAwQ,UAAA/I,OAEA4yB,aACAn6B,KAAAuH,OACAD,QAAA,SAGA+iB,OAAApgB,OAAA1C,QAEAutB,QAAA7qB,OAAA1C,QAEA6yB,QAAAnwB,QAEAowB,MAAAxvB,QAEA7K,MACAsH,QAAA,UACAgW,UAAAjjB,IAEA,iCAAAmB,QAAAnB,IAIAghB,OACArb,KAAAuH,OACAD,QAAA,MAGAktB,SACAx0B,KAAAuH,OACAD,QAAA,WAGAjN,OACA2F,KAAAuH,OACAD,QAAA,OAGAgU,SACAtb,KAAAhI,OACAsP,QAAA,WACA,OACAwB,MAAA,EACA4R,KAAA,KACAne,WACArB,OAAAe,QAAAE,IAAA,aAMAof,QACAvb,KAAAhI,OACAsP,QAAA,WACA,OACAwB,MAAA,EACA4R,KAAA,KACAne,WACArB,OAAAe,QAAAE,IAAA,cAMA6O,SACAzO,OACA,OAEA+9B,aAAA79B,KAAApC,QAGA4S,UAEA1Q,cACA,OAhFe,WAkFfE,KAAAuD,KACAvD,KAAA6T,WACiBiqB,SAAA99B,KAAA49B,SAIjBG,aAAA,KAEA,kBAIAC,mBAAA,KAEA,yBAIAC,iBAAA,KAEA,uBAIAC,mBAAA,KAEA,yBAIAp+B,eACA,MAAAq+B,KAaA,OAXAn+B,KAAA4tB,QACAuQ,EAAAvQ,MAAA,iBAAA5tB,KAAA4tB,SAAmE5tB,KAAA4tB,UAAW5tB,KAAA4tB,OAG9E5tB,KAAAq4B,SACA8F,EAAA9F,OAAA,iBAAAr4B,KAAAq4B,UAAqEr4B,KAAAq4B,WAAYr4B,KAAAq4B,QAGjFr4B,KAAA29B,SACAQ,EAAAR,OAAA39B,KAAA29B,QAEAQ,IAGAt+B,SAEAC,UAEAqjB,SAAAmV,KAAA8D,YAAAp8B,KAAAgmB,QAAAqW,MAGAtd,YAAA,WAEA,sBAAAxjB,OAAAC,UAAA2D,SAAAzD,KAAAsE,KAAA8e,OAAA7S,WAAAjM,KAAA8e,OAAA7S,WAEAjM,KAAAo+B,WAGAt+B,eAEA,sBAAAvE,OAAAC,UAAA2D,SAAAzD,KAAAsE,KAAA6e,QAAA5S,WAAAjM,KAAA6e,QAAA5S,SAAA,WAAAjM,KAAAuD,KAAAvD,KAAA69B,aAAA,IAEA79B,KAAAo+B,aExIeC,cAXC9iC,OAAA4E,EAAA,QAAA5E,CACdkiC,GCTQ,WAAgB,IAAAv8B,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,cAAwBE,OAAOrD,KAAA+D,EAAAw8B,eAAwBp9B,EAAA,OAAYyM,MAAA7L,EAAAq7B,cAAsBj8B,EAAA,OAAYyM,MAAA7L,EAAA68B,aAAAO,MAAAp9B,EAAA,eAAgDZ,EAAA,UAAeyM,MAAA7L,EAAA88B,qBAA6B19B,EAAA,MAAW2D,UAAUC,YAAAhD,EAAAH,GAAAG,EAAA0d,YAAiC1d,EAAAJ,GAAA,KAAAR,EAAA,OAA0ByM,MAAA7L,EAAA+8B,mBAA2B39B,EAAA,OAAYO,YAAA,gBAAAoD,UAAsC2L,UAAA1O,EAAAH,GAAAG,EAAA62B,YAAiC72B,EAAAJ,GAAA,gBAAAI,EAAAqC,KAAAjD,EAAA,OAAgDO,YAAA,qBAA+BP,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAsD,EAAA,aAAA0L,WAAA,iBAAkFpM,OAAS+C,KAAA,QAAcU,UAAWrG,MAAAsD,EAAA,cAA2BC,IAAKgjB,MAAA,SAAA9iB,GAAyBA,EAAA+iB,OAAAC,YAAsCnjB,EAAA28B,aAAAx8B,EAAA+iB,OAAAxmB,aAAuCsD,EAAAkM,OAAAlM,EAAAJ,GAAA,KAAAR,EAAA,OAAqCyM,MAAA7L,EAAAg9B,qBAA6Bh9B,EAAA4d,OAAA,KAAAxe,EAAA,UAAiCO,YAAA,mBAAAoD,UAAyCC,YAAAhD,EAAAH,GAAAG,EAAA4d,OAAAb,OAAsC9c,IAAKC,MAAA,SAAAC,GAAyB,OAAAH,EAAA6d,kBAA2B7d,EAAAkM,KAAAlM,EAAAJ,GAAA,KAAAI,EAAA2d,QAAA,KAAAve,EAAA,UAAuDO,YAAA,oBAAAoD,UAA0CC,YAAAhD,EAAAH,GAAAG,EAAA2d,QAAAZ,OAAuC9c,IAAKC,MAAA,SAAAC,GAAyB,OAAAH,EAAA8d,mBAA4B9d,EAAAkM,kBDYzuC,EACA,KACA,KACA,eEiCe,IAAAmxB,IAnCfz+B,MAAA+P,GACA7P,KAAAw+B,eAAA,QAAA3uB,IAEA/P,QAAA+P,GACA7P,KAAAw+B,eAAA,UAAA3uB,IAEA/P,OAAA+P,GACA7P,KAAAw+B,eAAA,SAAA3uB,IAEA/P,eAAAyD,EAAAsM,GACA,IAAA8sB,EAAA9sB,EACA,iBAAA8sB,IACAA,GAAwB5E,QAAA4E,IAExBA,EAAAp5B,OACA,UAAAA,IAEAo5B,EAAA7d,QACAzS,MAAA,EACA4R,KAAA,KACAne,eAKA,MAAA88B,EAAAD,MACAE,EAAA,IAA6BzB,EAAA,SAC7B0B,OAAAC,GACAA,EAAyBsB,IAAgBh7B,MAAAu5B,MAEhCI,SAET7Z,SAAAmV,KAAAC,YAAAsE,EAAAR,OCnCeoC,IAEf3+B,KAAA4+B,EAAAC,GAOA,SAAAC,EAAAt/B,GAsBA,GAAAo/B,EAAAxF,SAAA55B,EAAA8kB,QACA,SAGAua,EAAA/xB,YACA+xB,EAAA/gC,MAAA0B,GAIAo/B,EAAAG,oBAAAD,EACAzb,SAAA2b,iBAAA,QAAAF,IAEA9+B,WAIAA,OAAA4+B,GAEAvb,SAAA4b,oBAAA,QAAAL,EAAAG,4BACAH,EAAAG,8CCnBA,MAAAG,IACA,MACA,SACA,UACA,mBACA,oBACA,UACA,SACA,mBACA,OACA,UACA,kBACA,UACA,OACA,eACA,mBACA,iBACA,iBACA,mBACA,qBACA,mBACA,iBACA,eACA,aACA,YACA,aACA,QACA,eAEe,ICtEyDC,ICiBxEz9B,SFsDA3B,SAEAC,gBAAA+P,EAAA1S,GAGA,MAAAuE,EAAAjD,OAAAkD,UAAAlD,OAAAkD,SAAAC,YAAAnD,OAAAkD,SAAAC,YAAAC,iBAAA,EACA,WAAAC,QAAA,CAAAC,EAAAC,KACA,MAAAC,EAAAjC,KAAAkC,QACAC,iBAA6ChF,KAC7CiF,EAAAyN,EAAA/M,OAAAid,cACAvd,EAAAqN,EAAAvN,IAEApD,EAAA2Q,EAAA/U,KAEA2D,OAAAkD,UAAAlD,OAAAkD,SAAAiB,mBACAnE,OAAAkD,SAAAiB,kBAAAX,EAAAE,EAAAC,EAAAI,EAAAtD,GAGA,MAAAggC,GACAp8B,OAAAV,EACAE,IAAAE,EAGAO,OAAA,QAAAX,EAAAlD,KACApE,KAAA,QAAAsH,EAAAlD,KAEA8D,aAAA,QAGA,UAAAm8B,KAAAtvB,GACA,IAAAmvB,GAAAjgC,QAAAogC,KACAD,EAAAC,GAAAtvB,EAAAsvB,IAGAD,EAAA58B,IAAAE,EAEgB48B,KAAKF,GAAAj8B,KAAAnI,IACrB,MAAAoI,EAAApI,OAEA2D,OAAAkD,UAAAlD,OAAAkD,SAAAyB,oBAEA3E,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GAEAzE,OAAAkD,UAAAlD,OAAAkD,SAAAC,aACAnD,OAAAkD,SAAAC,YAAAuB,WAA+DhB,uBAAMT,GAErEK,EAAAmB,IACiBpI,IACjB2D,OAAAkD,UAAAlD,OAAAkD,SAAAC,aACAnD,OAAAkD,SAAAC,YAAAuB,WAA+DhB,sBAAMT,GAErE,MAAAwB,EAAApI,OAEA2D,OAAAkD,UAAAlD,OAAAkD,SAAAyB,oBAEA3E,OAAAkD,SAAAyB,mBAAAnB,EAAAE,EAAAe,GAEAlB,EAAAlH,SAOAgF,kBAAA4C,GACA,WAAAZ,QAAA,CAAAC,EAAAC,KAEA,GAAAhC,KAAAq/B,UAAA,CAEA,MAAAngC,KAEA,uBAAA3D,OAAAC,UAAA2D,SAAAzD,KAAAsE,KAAAs/B,qBACA,UAAAn9B,KAAAnC,KAAAs/B,oBACApgC,EAAAiD,GAAAnC,KAAAs/B,oBAAAn9B,GAIAjD,EAAAwD,QAEA,MAAA68B,GACAz8B,OAAA9C,KAAAw/B,aACA1kC,KAAAoE,EACAoD,IAAAtC,KAAAq/B,WAGAr/B,KAAAy/B,gBAAAF,EAAA,QAAAt8B,KAAAkC,IACApD,EAAAoD,IACiBrK,IACjBkH,EAAAlH,UAGAkH,EAAA,IAAA0U,MAAA,8BG5JArT,OAEAiR,aACA/Q,KAAA6K,QACAvD,SAAA,GAGA60B,OACAn8B,KAAAiK,OACA3C,QAAA,MAGA/P,KAAA,MAGA6kC,UAAA,EAEAC,gBAAA,EAEAC,UAAA,IAGAhgC,SAEAC,YAAAkZ,GACAhZ,KAAA6/B,SAAA7mB,GAGAlZ,YAAAkZ,GACAhZ,KAAA2/B,SAAA3mB,GAGAlZ,iBAEAE,KAAA8/B,aAAA,GAEA9/B,KAAA+/B,cAAA,GAEA//B,KAAAwjB,MAAAwc,QAAAnW,QAGA/pB,kBAAA0D,GACAxD,KAAA4/B,eAAAp8B,GAGA1D,qBAEAE,KAAAigC,mBAAA,IAGAngC,QACA,IAAAE,KAAAyR,cAAAnW,OACA,SAGA0E,KAAAigC,kBAAAjgC,KAAA4/B,eAAA,GAEA5/B,KAAA4/B,eAAA,GAEA5/B,KAAAigC,kBAAA,GAGAjgC,KAAAkgC,uBAIApgC,UACA,IAAAE,KAAAyR,cAAAnW,OACA,SAGA0E,KAAAigC,kBAAAjgC,KAAA4/B,eAAA,GACA5/B,KAAA4/B,eAAA5/B,KAAAyR,cAAAnW,OAAA,IACA0E,KAAA4/B,eAAA5/B,KAAAyR,cAAAnW,OAAA,GAGA0E,KAAAkgC,uBAGApgC,sBACAE,KAAAmgC,UAAA,KAEA,MAAAC,EAAApgC,KAAAwjB,iBAA6DxjB,KAAA4/B,kBAE7DQ,GAAAz5B,MAAAC,QAAAw5B,ICnCe,EAAAC,EAAAC,EAAAC,KACf,MACA3H,EAAA0H,EACAE,EAAAD,GAAA,EAEAE,EAJAJ,EAIAK,wBACAC,EAAA/H,EAAA8H,wBAEAE,EAAAD,EAAAE,OAAAJ,EAAAI,OAEA,GAAAD,EAAA,EAEA,OADAhI,EAAAkI,WAAAhZ,KAAAiZ,IAAAH,GAAAJ,GACA,EAEA,MAAAQ,EAAAL,EAAAM,IAAAR,EAAAQ,IAEAD,EAAA,IACApI,EAAAkI,WAAAhZ,KAAAiZ,IAAAC,GAAAR,IDmBoB3H,CAAoBuH,EAAA,GAAApgC,KAAAwjB,MAAA0d,wBAKxCphC,YAAAuB,GACArB,KAAAmhC,WACA,cAAA79B,KAAAjC,EAAA+/B,UACA//B,EAAAyoB,kBAKAhqB,cAAAuB,GAEA,OAAAA,EAAA+/B,SACA,QACAphC,KAAAmhC,YAEAnhC,KAAAqhC,QACAhgC,EAAAyoB,kBAEA,MACA,QACA9pB,KAAAmhC,YAEAnhC,KAAAshC,UACAjgC,EAAAyoB,kBAEA,MACA,QACA9pB,KAAAmhC,WAEAnhC,KAAAuhC,mBAUAzhC,cAEAE,KAAA8/B,aAAA,GAEA9/B,KAAA69B,eAEA79B,KAAA+/B,cAAA,GAEA//B,KAAAwhC,eAGAxhC,KAAAgF,MAAA,QAAAhF,KAAA69B,eAGA/9B,cAEAE,KAAA69B,cAAA79B,KAAA2/B,UAEA3/B,KAAA+/B,cAAA,GAEA//B,KAAAyhC,YACAtF,aAAAn8B,KAAAyhC,YAGAzhC,KAAAyhC,WAAAnF,WAAA,KAEAt8B,KAAA0hC,qBAEA1hC,KAAAsU,YAEAtU,KAAA2hC,cAAA3hC,KAAAmF,UAGAnF,KAAA4hC,eAAA5hC,KAAA69B,eAEiB79B,KAAA0/B,QAGjB1/B,KAAA+/B,cAAA,GAGA//B,KAAAgF,MAAA,QAAAhF,KAAA69B,eAGA/9B,eASAA,kBAEA,IAAAE,KAAA4/B,gBAAA5/B,KAAAyR,cAAAnW,OAEA0E,KAAA6hC,iBAAA7hC,KAAAyR,cAAAzR,KAAA4/B,iBAGA5/B,KAAAigC,mBAAA,OE7LA58B,OAEAgO,OACA9N,KAAAiK,OACA3C,QAAA,IAGAi3B,eACAv+B,KAAA6K,QACAvD,SAAA,GAGAk3B,WACAx+B,KAAAuH,OACAD,QAAA,UAGAm3B,gBACAz+B,KAAA6K,QACAvD,SAAA,IAIA/P,KAAA,MAGA2W,iBASA0vB,WAAA,IAGAthC,SAEAC,aAAAkZ,GACAhZ,KAAAmhC,UAAAnoB,EAEAA,GACAhZ,KAAA0R,sBAIA5R,SAEAE,KAAAmhC,WACAnhC,KAAA+/B,cAAA,IAIAjgC,iBAAAqF,GACAnF,KAAAyR,cAAAtM,GAGArF,mBAAA4C,GAGA,GAAA1C,KAAAgiC,gBAAAt/B,EAAA,CAEA,MAAAu/B,EAAAv/B,EAAAyM,MAAA,KAAA2I,OAAA9T,GAAA,KAAAA,GACA8W,KAAA,KACA,WAAAoF,WAAsC+hB,KAAO,OAE7C,WAAA/hB,WAAkCxd,KAAM,QAIxC5C,aAAA4C,EAAAyC,GACA,MAAAE,KAEA68B,EAAAliC,KAAAmiC,mBAAAz/B,GAEA,IAAA0/B,GAAA,EA8BA,OA5BAj9B,EAAAmN,MAAAtO,IAEA,GAAAk+B,EAAA5+B,KAAAU,EAAAhE,KAAA+K,QAAA,CAEA,MAAAs3B,EAAAr+B,EAAAhE,KAAA+K,OAAA8d,QAAAqZ,EAAA,qCAEAhjC,GAEAY,CAAAE,KAAA+K,OAAA/G,EAAAhE,KAAA+K,OAEA+F,MAAAuxB,EAEAr+B,QAGAA,EAAAhE,KAAA+K,SAAArI,IACA0/B,EAAA/8B,EAAA/J,QAGA+J,EAAAzJ,KAAAsD,GAGA,OAAAmG,EAAA/J,OAAA0E,KAAAqR,QAIArR,KAAAigC,kBAAAmC,GAEA/8B,GAGAvF,cAAAqF,GAEA,MAAAE,EAAArF,KAAAsiC,aAAAtiC,KAAA69B,aAAA14B,GAEAnF,KAAA0R,iBAAArM,IAIAvF,iBAAAkE,GAEAhE,KAAAuiC,eAAAv+B,IAaA49B,eAAA,SAAAl/B,GAEA1C,KAAAwiC,aAAA,GAEA,mBAAAxiC,KAAAuU,oBACAvU,KAAAuU,oBAAA7R,GAAAO,KAAAkC,IAEAnF,KAAA2hC,cAAAx8B,KAEAs9B,QAAA,KAEAziC,KAAAwiC,aAAA,KAIAxiC,KAAA0iC,kBAAAhgC,GAAAO,KAAAkC,IAEAnF,KAAA2hC,cAAAx8B,KAEAs9B,QAAA,KAEAziC,KAAAwiC,aAAA,SH3IA91B,YAAiBi2B,cAAelE,IAEhCxuB,OACAslB,KAAA,QACAt2B,MAAA,SAEAoE,OAGAzF,OACA2F,MAAAuH,OAAA0C,QACA3C,QAAA,IAIAE,OACAxH,KAAAuH,OACAD,QAAA,QAGA1F,UAEA5B,KAAAoD,MAEAkE,QAAA,WACA,WAKAjF,UACArC,KAAA6K,QACAvD,SAAA,GAKA6Z,WACAnhB,KAAA6K,QACAvD,SAAA,GAIAiF,aACAvM,KAAAuH,OACAD,QAAA,cAMAkF,UACAxM,KAAA6K,QACAvD,SAAA,GAIA20B,cAEAj8B,KAAAuH,OACAD,QAAA,OAIAw0B,WACA97B,KAAAuH,OACAD,QAAA,6CAIAy0B,qBAA8B/7B,KAAAhI,QAG9BgZ,qBAA8BhR,KAAA0H,WAE9BnL,OACA,OAEA8iC,UAAA,KAEAxvB,eAEAyqB,aAAA79B,KAAApC,QAGA4S,YACAjC,OACA3Q,OACAkC,QAAA0a,GAEAxa,KAAA6iC,gBAAAroB,IAEAsoB,WAAA,IAGAhjC,UAEAE,KAAAgF,MAAA,QAAAhF,OAEAH,SAEAC,gBAAAlC,GACAoC,KAAA69B,aAAAjgC,GAIAmlC,WAAA,WAEA/iC,KAAAgjC,mBAEAhjC,KAAA6iC,kBAEA7iC,KAAAijC,kBAIAnjC,mBAEAE,KAAAuiC,oBAGAziC,eAAAkE,GAEAhE,KAAAoT,YAAApP,EAIAhE,KAAA2I,aAGA7I,YAEAE,KAAAgF,MAAA,SAAAhF,KAAAoT,YAAApT,SIrIekjC,cAXC3nC,OAAA4E,EAAA,QAAA5E,CACd0jC,GCTQ,WAAgB,IAAA/9B,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBoM,aAAavP,KAAA,gBAAAwP,QAAA,kBAAA/O,MAAAsD,EAAA,OAAA0L,WAAA,WAAsF/L,YAAA,sBAAAkM,OAA2CC,OAAA9L,EAAAigC,aAAwB7gC,EAAA,OAAYO,YAAA,eAAAkM,OAC5RnH,SAAA1E,EAAA0E,SACAf,OAAA3D,EAAAigC,UACAgC,MAAAjiC,EAAAy+B,YACUr/B,EAAA,SAAcoM,aAAavP,KAAA,QAAAwP,QAAA,UAAA/O,MAAAsD,EAAA,aAAA0L,WAAA,iBAAkFiI,IAAA,UAAAhU,YAAA,WAAAL,OAA8C+C,KAAA,OAAAuM,YAAA5O,EAAA4O,aAA4C7L,UAAWrG,MAAAsD,EAAA,cAA2BC,IAAKiiC,MAAA,SAAA/hC,GAAyB,OAAAH,EAAAmiC,YAAAhiC,IAA+BiiC,QAAA,SAAAjiC,GAA4B,OAAAH,EAAAqiC,cAAAliC,IAAiC8hC,MAAAjiC,EAAAsiC,YAAArf,OAAA,SAAA9iB,GAAmDA,EAAA+iB,OAAAC,YAAsCnjB,EAAA28B,aAAAx8B,EAAA+iB,OAAAxmB,QAAqCsD,EAAAsgC,aAAA3X,KAAA3oB,EAAAuiC,cAAyCviC,EAAAJ,GAAA,KAAAI,EAAA,UAAAZ,EAAA,QAAyCoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,MAAAsD,EAAA,aAAA0L,WAAA,iBAAgF/L,YAAA,WAAAM,IAA6BC,MAAAF,EAAA6hC,cAAwB7hC,EAAAJ,GAAA,UAAAI,EAAAkM,OAAAlM,EAAAJ,GAAA,KAAAR,EAAA,OAAoDoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,MAAAsD,EAAA,UAAA0L,WAAA,cAA0E/L,YAAA,4BAAwCK,EAAA,cAAAZ,EAAA,OAAgCoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,MAAA,IAAAsD,EAAAuQ,cAAAnW,OAAAsR,WAAA,+BAA4G/L,YAAA,kBAA8BK,EAAAJ,GAAAI,EAAAH,GAAAG,EAAA6gC,cAAA7gC,EAAAkM,KAAAlM,EAAAJ,GAAA,KAAAR,EAAA,MAAgEoM,aAAavP,KAAA,OAAAwP,QAAA,SAAA/O,MAAAsD,EAAAuQ,cAAA,OAAA7E,WAAA,yBAAgGiI,IAAA,sBAAAhU,YAAA,oBAA2DK,EAAA6C,GAAA7C,EAAA,uBAAA8C,EAAAR,GAAiD,OAAAlD,EAAA,MAAgBpC,IAAAsF,EAAAQ,EAAA9C,EAAA6J,OAAA8J,IAAA,WAAArR,EAAAimB,UAAA,EAAA5oB,YAAA,eAAAkM,OAAiGC,OAAA9L,EAAA0+B,iBAAAp8B,GAAoChD,OAAQoe,MAAA5a,EAAA9C,EAAA6J,QAAwB5J,IAAKqL,UAAA,SAAAnL,GAAsD,OAAzBA,EAAAiM,kBAAyBpM,EAAA2gC,iBAAA79B,OAAoC9C,EAAAwiC,GAAA,WAAApjC,EAAA,OAA8BO,YAAA,oBAAAoD,UAA0C2L,UAAA1O,EAAAH,GAAAiD,EAAA8M,YAAoC9M,UAAY,KAAM,YDQxuD,EACA,KACA,KACA,eE2Le,IC1MyD2/B,IDWxE1zB,OACAslB,KAAA,OACAt2B,MAAA,UAGAoE,OAEAwQ,UAAA/I,OAEA4yB,aACAn6B,KAAAuH,OACAD,QAAA,SAGA+iB,OAAApgB,OAAA1C,QAEAutB,QAAA7qB,OAAA1C,QAEA6yB,QAAAnwB,QAEAowB,MAAAxvB,QAEAwQ,OACArb,KAAAuH,OACAD,QAAA,SAGAwB,MACA9I,MAAA6K,QAAAZ,QACA3C,SAAA,GAGA+4B,WACArgC,KAAA6K,QACAvD,SAAA,GAGAgU,SACAtb,KAAAhI,OACAsP,QAAA,MAEAwB,MAAA,EACA4R,KAAA,KACAne,SAAAyvB,GACA9wB,OAAAe,QAAAE,IAAA,SACA6vB,EAAAsU,gBAMA/kB,QACAvb,KAAAhI,OACAsP,QAAA,MAEAwB,MAAA,EACA4R,KAAA,KACAne,WACArB,OAAAe,QAAAE,IAAA,aAMAwtB,OACA3pB,KAAAhI,OACAsP,QAAA,MAEAwB,MAAA,EACA4R,KAAA,KACAne,SAAAyvB,GACA9wB,OAAAe,QAAAE,IAAA,SACA6vB,EAAAsU,iBAMA/jC,OACA,OAEA09B,YAAAx9B,KAAAqM,OAGAkC,OAEAzO,KAAA0H,GACAxH,KAAAw9B,YAAAh2B,IAIAgJ,UAEA1Q,cACA,OAEAE,KAAAw9B,YAAA,UApGe,eAsGfx9B,KAAAuD,KACAvD,KAAA6T,WACiBiqB,SAAA99B,KAAA49B,SAIjBG,aAAA,KAEA,sBAIAC,mBAAA,KAEA,6BAIAC,iBAAA,KAEA,2BAIAC,mBAAA,KAEA,6BAIAp+B,eACA,MAAAq+B,KAaA,OAXAn+B,KAAA4tB,QACAuQ,EAAAvQ,MAAA,iBAAA5tB,KAAA4tB,SAAmE5tB,KAAA4tB,UAAW5tB,KAAA4tB,OAG9E5tB,KAAAq4B,SACA8F,EAAA9F,OAAA,iBAAAr4B,KAAAq4B,UAAqEr4B,KAAAq4B,WAAYr4B,KAAAq4B,QAGjFr4B,KAAA29B,SACAQ,EAAAR,OAAA39B,KAAA29B,QAEAQ,IAGAr+B,UAEAqjB,SAAA6F,cAAA,QACAuP,YAAAv4B,KAAAq8B,MAEAx8B,SAEAC,eAAAkZ,GAEAhZ,KAAAw9B,YAAAxkB,EAEAhZ,KAAAgF,MAAA,SAAAhF,KAAAw9B,cAGA19B,YAEAE,KAAA8jC,gBAAA,GACA9jC,KAAAgF,MAAA,UAGAlF,cAEA,sBAAAvE,OAAAC,UAAA2D,SAAAzD,KAAAsE,KAAA8e,OAAA7S,WAAAjM,KAAA8e,OAAA7S,WACAjM,KAAA6jC,YACA7jC,KAAAgF,MAAA,WAGAlF,eAEA,sBAAAvE,OAAAC,UAAA2D,SAAAzD,KAAAsE,KAAA6e,QAAA5S,WAAAjM,KAAA6e,QAAA5S,SAAAjM,MACAA,KAAAgF,MAAA,UAAAhF,OAGAF,aAEA,sBAAAvE,OAAAC,UAAA2D,SAAAzD,KAAAsE,KAAAktB,MAAAjhB,WAAAjM,KAAAktB,MAAAjhB,WACAjM,KAAA6jC,YACA7jC,KAAAgF,MAAA,QAAAhF,OAGAF,aACAE,KAAAgF,MAAA,QAAAhF,MACAA,KAAA6jC,eEnLetU,cAXCh0B,OAAA4E,EAAA,QAAA5E,CACdooC,GCTQ,WAAgB,IAAAziC,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,cAAwBE,OAAOrD,KAAA+D,EAAAw8B,eAAwBp9B,EAAA,OAAYyM,MAAA7L,EAAAq7B,cAAsBj8B,EAAA,OAAYyM,MAAA7L,EAAA68B,aAAAO,MAAAp9B,EAAA,eAAgDZ,EAAA,UAAeyM,MAAA7L,EAAA88B,qBAA6B98B,EAAAwiC,GAAA,UAAApjC,EAAA,MAA4B2D,UAAU2L,UAAA1O,EAAAH,GAAAG,EAAA0d,YAA+B1d,EAAAJ,GAAA,KAAAI,EAAA,UAAAZ,EAAA,QAA2CO,YAAA,eAAAM,IAA+BC,MAAA,SAAAC,GAAyB,OAAAH,EAAA6iC,iBAA0B7iC,EAAAJ,GAAA,QAAAI,EAAAkM,MAAA,GAAAlM,EAAAJ,GAAA,KAAAR,EAAA,OAAoDyM,MAAA7L,EAAA+8B,mBAA2B/8B,EAAAwiC,GAAA,WAAApjC,EAAA,OAA8BO,YAAA,mBAA6BK,EAAAJ,GAAA,mFAAAI,EAAAJ,GAAA,KAAAR,EAAA,OAAkHyM,MAAA7L,EAAAg9B,qBAA6Bh9B,EAAAwiC,GAAA,UAAAxiC,EAAA4d,OAAA,KAAAxe,EAAA,UAAkDO,YAAA,oBAAAoD,UAA0CC,YAAAhD,EAAAH,GAAAG,EAAA4d,OAAAb,OAAsC9c,IAAKC,MAAA,SAAAC,GAAyB,OAAAH,EAAA6d,kBAA2B7d,EAAAkM,KAAAlM,EAAAJ,GAAA,KAAAI,EAAA2d,QAAA,KAAAve,EAAA,UAAuDO,YAAA,qBAAAoD,UAA2CC,YAAAhD,EAAAH,GAAAG,EAAA2d,QAAAZ,OAAuC9c,IAAKC,MAAA,SAAAC,GAAyB,OAAAH,EAAA8d,mBAA4B9d,EAAAkM,KAAAlM,EAAAJ,GAAA,KAAAI,EAAAgsB,MAAA,KAAA5sB,EAAA,UAAqDO,YAAA,mBAAAoD,UAAyCC,YAAAhD,EAAAH,GAAAG,EAAAgsB,MAAAjP,OAAqC9c,IAAKC,MAAA,SAAAC,GAAyB,OAAAH,EAAA8iC,iBAA0B9iC,EAAAkM,QAAA,cDY9yC,EACA,KACA,KACA,eELe62B,GAGf,KAHeA,GAOf,MCVeC,IAiBf/iC,GAAA,KAEAgiB,SAAA2b,iBACA,CAAAuB,EAAAphC,EAAAklC,EAAAC,KACA/D,GAAAphC,GAAAklC,GACA9D,EAAAvB,iBAAA7/B,EAAAklC,EAAA,qBAAA5oC,OAAAC,UAAA2D,SAAAzD,KAAA0oC,QAKA,CAAA/D,EAAAphC,EAAAklC,KACA9D,GAAAphC,GAAAklC,GACA9D,EAAAgE,iBAAyCplC,IAAMklC,IAZ/C,GAgCA1K,IAAA,KAEAtW,SAAA4b,oBACA,CAAAsB,EAAAphC,EAAAklC,EAAAC,KACA/D,GAAAphC,GACAohC,EAAAtB,oBAAA9/B,EAAAklC,EAAA,qBAAA5oC,OAAAC,UAAA2D,SAAAzD,KAAA0oC,QAKA,CAAA/D,EAAAphC,EAAAklC,KACA9D,GAAAphC,GACAohC,EAAAiE,iBAAyCrlC,IAAMklC,IAZ/C,IC7CA,IAAAI,GA0Ce,IAAAC,GAAAC,KACfA,QAAA,IAAAF,KArCA,WAEA,MAAAlE,EAAAld,SAAAiV,cAAA,OACAsM,EAAArE,EAAA/B,MACAoG,EAAAC,SAAA,WACAD,EAAAzD,IAAA,UACAyD,EAAAE,KAAA,UAEAF,EAAAG,cAAA,OAEAH,EAAAI,WAAA,SAEAJ,EAAA9W,MAAA,QACA8W,EAAArM,OAAA,QAEAqM,EAAAK,SAAA,SAEA5hB,SAAAmV,KAAAC,YAAA8H,GAEAkE,GAAAlE,EAAA2E,YAAA3E,EAAA4E,YAEA9hB,SAAAmV,KAAA8D,YAAAiE,GAkBA6E,GAEAX,cCjDA,MAAApjC,GACAA,GAAAs4B,QACIyK,GAEEiB,MAAelB,mBACrBmB,MAA0BnB,eAIX,IClByDoB,IDmBxEloC,QAAa8mC,uBACb5gC,OAEAiiC,mBACA/hC,KAAAiK,OACA3C,QAAA,GAGA06B,sBACAhiC,KAAAiK,OACA3C,QAAA,GAGA26B,YACAjiC,KAAAiK,OACA3C,QAAA,GAGA46B,WACAliC,KAAAiK,OACA3C,QAAA,KAGA66B,kBACAniC,KAAAiK,OACA3C,QAAA,IAGA86B,0BACApiC,KAAA6K,QACAvD,SAAA,IAGA/P,KAAA,MAGA8qC,aAAA,EAEAC,UAAA,EAEAC,OAAA,EAEAC,KAAA,EAEAC,iBAAA,EAEAC,iBAAA,EAEAC,oBAAA,IAGA11B,UAEA1Q,sBACA,OAAAE,KAAA4lC,aAAA5lC,KAAAmmC,iBAGArmC,0BACA,OAAAE,KAAAimC,iBAAAjmC,KAAAkmC,qBAGApmC,kBACA,OAAAgoB,KAAAse,IAAApmC,KAAA0lC,iBAAA1lC,KAAAkmC,oBAAAlmC,KAAAimC,iBAAAjmC,KAAA4lC,eAGA9lC,QACA,OAEAu4B,UAA2Br4B,KAAAmmC,oBAE3BlF,OAAwBjhC,KAAAgmC,uBAIxBlmC,cACA,OACgBqlC,GAEhBnlC,KAAA6lC,UAAA7lC,KAAA2lC,yBAAA,eAIA7lC,iBACA,OACAslC,GAEAplC,KAAA6lC,SAAA,gBAIA/lC,UAEAE,KAAA4L,QAEA9L,gBAEAE,KAAAm5B,cAEAM,GAAAh7B,OAAA,SAAAuB,KAAAqmC,YAEAC,qBAAAtmC,KAAAumC,oCAEAD,qBAAAtmC,KAAAwmC,6BAEA3mC,SAQAC,OAEAE,KAAAqmC,aAEArmC,KAAAymC,iBAAAzmC,KAAAslC,kBAAAtlC,KAAAulC,qBAAAvlC,KAAAwlC,YAEArkC,GAAA1C,OAAA,SAAAuB,KAAAqmC,aASAvmC,aAEAE,KAAA4lC,aAAA5lC,KAAAq8B,IAAAuJ,cAUA9lC,cAAAkZ,GACAhZ,KAAA6lC,SAAA7sB,GAUA0tB,SAAAznC,GACAA,GAAAR,OAAAQ,MAUAa,UAAAb,GACA,MAAA0nC,EAAA1nC,GAAAR,OAAAQ,MACA0nC,EAAA7c,eACA6c,EAAA7c,iBAEA6c,EAAAC,aAAA,GAWA9mC,UAAAgmC,GACA9lC,KAAA8lC,UAWAhmC,QAAAimC,GACA/lC,KAAA+lC,QAUAjmC,oBAAAkmC,GAQA,GANAM,qBAAAtmC,KAAAumC,oCAEAvmC,KAAA6mC,6CACA7mC,KAAA6mC,4CAAA,IAAAv3B,MAAAwG,WAGA9V,KAAA6lC,SACA7lC,KAAAgmC,uBACa,CAEb,MAAAc,GAAA,IAAAx3B,MAAAwG,UAEAgxB,EAAA9mC,KAAA6mC,2CAAA,IAEA7mC,KAAAgmC,mBAEAhmC,KAAA6mC,2CAAAC,GAEA9mC,KAAAumC,mCAAAQ,sBAAA,KACA/mC,KAAAgmC,uBAeAlmC,iBAAAmmC,EAAAC,EAAApF,GAEA9gC,KAAAimC,mBAEAjmC,KAAAkmC,sBAEA,MAAAc,EAAAlG,EAAA9gC,KAAAinC,wBAAAjnC,KAAAknC,oBAEAlnC,KAAAqmC,aAEArmC,KAAAmnC,oBAAAH,IASAlnC,YAEAqB,GAAAgiB,SAAA,YAAAnjB,KAAAonC,QAAA,GACAjmC,GAAAgiB,SAAA,YAAAnjB,KAAAonC,QAAA,GACAjmC,GAAAgiB,SAAA,UAAAnjB,KAAAqnC,UAAA,GACAlmC,GAAAgiB,SAAA,WAAAnjB,KAAAqnC,UAAA,IASAvnC,cAEA25B,GAAAtW,SAAA,YAAAnjB,KAAAonC,QAAA,GACA3N,GAAAtW,SAAA,YAAAnjB,KAAAonC,QAAA,GACA3N,GAAAtW,SAAA,UAAAnjB,KAAAqnC,UAAA,GACA5N,GAAAtW,SAAA,WAAAnjB,KAAAqnC,UAAA,IAUAvnC,UAAAb,GAEAe,KAAAsnC,UAAAroC,GAEA,IAAA0nC,EAAA3mC,KAAA0mC,SAAAznC,GAEA0nC,IAAAY,eAAAZ,EAAAY,eAAA,GAAAZ,EAEA3mC,KAAAwnC,eAAA,GAEAxnC,KAAAynC,UAAAd,EAAAe,OAEA1nC,KAAAg6B,aAUAl6B,OAAAb,GAEA,GAAAe,KAAA6lC,SAAA,CAEA7lC,KAAAsnC,UAAAroC,GAEA,IAAA0nC,EAAA3mC,KAAA0mC,SAAAznC,GAEA0nC,IAAAY,eAAAZ,EAAAY,eAAA,GAAAZ,EAEA3mC,KAAA2nC,QAAAhB,EAAAe,OAEA1nC,KAAA4nC,kBAAA,GAEA5nC,KAAAynC,UAAAd,EAAAe,SAUA5nC,WAEAE,KAAA6lC,WAEA7lC,KAAAwnC,eAAA,GAEAxnC,KAAA4nC,kBAAA,IAGA5nC,KAAAm5B,eAUAr5B,iBAAA+lC,GAEA,MAAAmB,EAAAlf,KAAAse,IAAA,EAAAte,KAAA+f,IAAA7nC,KAAAknC,oBAAAlnC,KAAA+lC,KAAA/lC,KAAA8lC,OAAA9lC,KAAAgmC,mBAEAhmC,KAAA8nC,oBAAAd,EAAAnB,IAWA/lC,oBAAAkmC,EAAAH,GAEA7lC,KAAAmnC,oBAAAnB,GAEA,MAAA+B,EAAA/nC,KAAAgmC,iBAAAhmC,KAAAknC,oBAEAlnC,KAAAgF,MAAA,kBAAA+iC,EAAAlC,IAUA/lC,UAAAb,GAEA,IAAA0nC,EAAA3mC,KAAA0mC,SAAAznC,GAIA,IAFA0nC,IAAAY,eAAAZ,EAAAY,eAAA,GAAAZ,GACAviB,SAAApkB,KAAAq8B,IACA,CAEA,MAAAsI,EAAA3kC,KAAAwjB,MAAAzX,UAAA20B,wBACAsH,EAAArB,EAAAsB,QAAAtD,EAAA1D,IAAAjhC,KAAAmmC,gBAzYW,EA0YX12B,EAAAqY,KAAAogB,KAAAloC,KAAAylC,UAzYA,IA0YAjF,EAAAwH,EAAAv4B,EAEAzP,KAAAmoC,cAAA3H,EAAA/wB,KAYA3P,cAAAsoC,EAAAC,GAEA,OAAAA,EACA,SAGA/B,qBAAAtmC,KAAAwmC,4BAEAxmC,KAAAwmC,2BAAAO,sBAAA,KAEA,MAAAC,EAAAlf,KAAAse,IAAA,EAAAte,KAAA+f,IAAA7nC,KAAAknC,oBAAAkB,EAAApoC,KAAAgmC,mBAEAhmC,KAAA8nC,oBAAAd,GAAA,GAEAhnC,KAAAmoC,cAAAC,EAAAC,EAAA,QEpaeC,GAXC/sC,OAAA4E,EAAA,QAAA5E,CACd8pC,GCRQ,WAAgB,IAAAnkC,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiByM,MAAA7L,EAAAq7B,YAAAp7B,IAA0BC,MAAA,SAAAC,GAAyB,OAAAH,EAAAqnC,UAAAlnC,OAA+Bf,EAAA,OAAYuU,IAAA,YAAA9H,MAAA7L,EAAAkkC,eAAA9G,MAAAp9B,EAAA,MAAAC,IAA+DqnC,WAAA,SAAAnnC,GAAuD,OAAzBA,EAAAiM,kBAAyBpM,EAAAunC,UAAApnC,IAA6BmL,UAAA,SAAAnL,GAAuD,OAAzBA,EAAAiM,kBAAyBpM,EAAAunC,UAAApnC,cDWlZ,EACA,KACA,KACA,cELA,MACAF,GAAMunC,GAAAjP,IAAKkP,IACPzE,GAEE0E,MAAe3E,mBACrB4E,MAAwB5E,eA4aT,IC1byD6E,IDmBxE3rC,QAAa8mC,yBACb5gC,OAEA0lC,kBACAxlC,KAAAiK,OACA3C,QAAA,GAGAm+B,qBACAzlC,KAAAiK,OACA3C,QAAA,GAGAo+B,aACA1lC,KAAAiK,OACA3C,QAAA,GAIA46B,WACAliC,KAAAiK,OACA3C,QAAA,KAGA66B,kBACAniC,KAAAiK,OACA3C,QAAA,IAGA86B,0BACApiC,KAAA6K,QACAvD,SAAA,IAGA/P,KAAA,MAGAmqC,YAAA,EAEAY,UAAA,EAEAqD,OAAA,EAEAC,KAAA,EAEAnD,iBAAA,EAEAoD,gBAAA,EAEAC,mBAAA,IAGA74B,UAEA1Q,sBACA,OAAAE,KAAAilC,YAAAjlC,KAAAspC,gBAGAxpC,0BACA,OAAAE,KAAAopC,gBAAAppC,KAAAqpC,oBAGAvpC,iBACA,OAAAgoB,KAAAse,IAAApmC,KAAA0lC,iBAAA1lC,KAAAqpC,mBAAArpC,KAAAopC,gBAAAppC,KAAAilC,cAGAnlC,QACA,OAEA8tB,SAA0B5tB,KAAAspC,mBAE1B1E,QAAyB5kC,KAAAgmC,uBAIzBlmC,cACA,OACgB8oC,GAEhB5oC,KAAA6lC,UAAA7lC,KAAA2lC,yBAAA,eAIA7lC,iBACA,OACA+oC,GACA7oC,KAAA6lC,SAAA,gBAIA/lC,UAEAE,KAAA4L,QAEA9L,gBAEAE,KAAAm5B,cAEQwP,GAAGlqC,OAAA,SAAAuB,KAAAqmC,YAEXC,qBAAAtmC,KAAAumC,oCAEAD,qBAAAtmC,KAAAwmC,6BAEA3mC,SAQAC,OAEAE,KAAAqmC,aAEArmC,KAAAymC,iBAAAzmC,KAAA+oC,iBAAA/oC,KAAAgpC,oBAAAhpC,KAAAipC,aAEYP,GAAEjqC,OAAA,SAAAuB,KAAAqmC,aASdvmC,aAEAE,KAAAilC,YAAAjlC,KAAAq8B,IAAA4I,aAUAnlC,cAAAkZ,GACAhZ,KAAA6lC,SAAA7sB,GAUA0tB,SAAAznC,GACAA,GAAAR,OAAAQ,MAUAa,UAAAb,GACA,MAAA0nC,EAAA1nC,GAAAR,OAAAQ,MACA0nC,EAAA7c,eACA6c,EAAA7c,iBAEA6c,EAAAC,aAAA,GAWA9mC,UAAAopC,GACAlpC,KAAAkpC,UAUAppC,QAAAqpC,GACAnpC,KAAAmpC,QAUArpC,oBAAAkmC,GAQA,GANAM,qBAAAtmC,KAAAumC,oCAEAvmC,KAAA6mC,6CACA7mC,KAAA6mC,4CAAA,IAAAv3B,MAAAwG,WAGA9V,KAAA6lC,SACA7lC,KAAAgmC,uBACa,CAEb,MAAAc,GAAA,IAAAx3B,MAAAwG,UAEAgxB,EAAA9mC,KAAA6mC,2CAAA,IAEA7mC,KAAAgmC,mBAEAhmC,KAAA6mC,2CAAAC,GAEA9mC,KAAAumC,mCAAAQ,sBAAA,KACA/mC,KAAAgmC,uBAgBAlmC,iBAAAspC,EAAAC,EAAAE,GAEAvpC,KAAAopC,kBAEAppC,KAAAqpC,qBAEA,MAAArC,EAAAuC,EAAAvpC,KAAAinC,wBAAAjnC,KAAAknC,oBAEAlnC,KAAAqmC,aAEArmC,KAAAmnC,oBAAAH,IASAlnC,YAEY4oC,GAAEvlB,SAAA,YAAAnjB,KAAAonC,QAAA,GACFsB,GAAEvlB,SAAA,YAAAnjB,KAAAonC,QAAA,GACFsB,GAAEvlB,SAAA,UAAAnjB,KAAAqnC,UAAA,GACFqB,GAAEvlB,SAAA,WAAAnjB,KAAAqnC,UAAA,IASdvnC,cAEY6oC,GAAGxlB,SAAA,YAAAnjB,KAAAonC,QAAA,GACHuB,GAAGxlB,SAAA,YAAAnjB,KAAAonC,QAAA,GACHuB,GAAGxlB,SAAA,UAAAnjB,KAAAqnC,UAAA,GACHsB,GAAGxlB,SAAA,WAAAnjB,KAAAqnC,UAAA,IAUfvnC,UAAAb,GAEAe,KAAAsnC,UAAAroC,GAEA,IAAA0nC,EAAA3mC,KAAA0mC,SAAAznC,GAEA0nC,IAAAY,eAAAZ,EAAAY,eAAA,GAAAZ,EAEA3mC,KAAAwnC,eAAA,GAEAxnC,KAAAwpC,UAAA7C,EAAA8C,OAEAzpC,KAAAg6B,aAUAl6B,OAAAb,GACA,GAAAe,KAAA6lC,SAAA,CAEA7lC,KAAAsnC,UAAAroC,GAEA,IAAA0nC,EAAA3mC,KAAA0mC,SAAAznC,GAEA0nC,IAAAY,eAAAZ,EAAAY,eAAA,GAAAZ,EAEA3mC,KAAA0pC,QAAA/C,EAAA8C,OAEAzpC,KAAA2pC,mBAAA,GAEA3pC,KAAAwpC,UAAA7C,EAAA8C,SAUA3pC,WAEAE,KAAA6lC,WAEA7lC,KAAAwnC,eAAA,GAEAxnC,KAAA2pC,mBAAA,IAGA3pC,KAAAm5B,eAUAr5B,kBAAA+lC,GAEA,MAAAmB,EAAAlf,KAAAse,IAAA,EAAAte,KAAA+f,IAAA7nC,KAAAknC,oBAAAlnC,KAAAmpC,KAAAnpC,KAAAkpC,OAAAlpC,KAAAgmC,mBAEAhmC,KAAA4pC,qBAAA5C,EAAAnB,IAWA/lC,qBAAAkmC,EAAAH,GAEA7lC,KAAAmnC,oBAAAnB,GAEA,MAAA+B,EAAA/nC,KAAAgmC,iBAAAhmC,KAAAknC,oBAEAlnC,KAAAgF,MAAA,mBAAA+iC,EAAAlC,IAUA/lC,UAAAb,GAEA,IAAA0nC,EAAA3mC,KAAA0mC,SAAAznC,GAIA,IAFA0nC,IAAAY,eAAAZ,EAAAY,eAAA,GAAAZ,GACAviB,SAAApkB,KAAAq8B,IACA,CAEA,MAAAsI,EAAA3kC,KAAAwjB,MAAAzX,UAAA20B,wBACAsH,EAAArB,EAAAkD,QAAAlF,EAAAC,KAAA5kC,KAAAspC,eAxYW,EAyYX75B,EAAAqY,KAAAogB,KAAAloC,KAAAylC,UAxYY,IAyYZjF,EAAAwH,EAAAv4B,EAEAzP,KAAAmoC,cAAA3H,EAAA/wB,KAYA3P,cAAAsoC,EAAAC,GAEA,OAAAA,EACA,SAGA/B,qBAAAtmC,KAAAwmC,4BAEAxmC,KAAAwmC,2BAAAO,sBAAA,KAEA,MAAAC,EAAAlf,KAAAse,IAAA,EAAAte,KAAA+f,IAAA7nC,KAAAknC,oBAAAkB,EAAApoC,KAAAgmC,mBAEAhmC,KAAA4pC,qBAAA5C,GAAA,GAEAhnC,KAAAmoC,cAAAC,EAAAC,EAAA,QEnaeyB,GAXCvuC,OAAA4E,EAAA,QAAA5E,CACdutC,GCRQ,WAAgB,IAAA5nC,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiByM,MAAA7L,EAAAq7B,YAAAp7B,IAA0BC,MAAA,SAAAC,GAAyB,OAAAH,EAAAqnC,UAAAlnC,OAA+Bf,EAAA,OAAYuU,IAAA,YAAA9H,MAAA7L,EAAAkkC,eAAA9G,MAAAp9B,EAAA,MAAAC,IAA+DqnC,WAAA,SAAAnnC,GAAuD,OAAzBA,EAAAiM,kBAAyBpM,EAAAunC,UAAApnC,IAA6BmL,UAAA,SAAAnL,GAAuD,OAAzBA,EAAAiM,kBAAyBpM,EAAAunC,UAAApnC,cDWlZ,EACA,KACA,KACA,cEEA,MAAM0oC,MAAe9F,YAGrB9iC,GAAM6oC,GAAAvQ,IAAKwQ,IACP/F,GAEW,ICtByDgG,IDuBxE/sC,QAAa8mC,cAEbtgC,YACQwmC,kBAAA7B,GACA8B,oBAAAN,IAERzmC,OAKAgJ,MACA9I,KAAA6K,QACAvD,SAAA,GAMA7H,cACAO,KAAA6K,QACAvD,SAAA,GAMAw/B,iBACA9mC,KAAAoD,MACAkE,QAAA,KACA,kBAOA46B,WACAliC,KAAAiK,OACA3C,QAAA,KAMA60B,OACAn8B,KAAAiK,OACA3C,QAAA,KAMA66B,kBACAniC,KAAAiK,OACA3C,QAAA,IAIA86B,0BACApiC,KAAA6K,QACAvD,SAAA,IAGA/K,OACA,OAEAwqC,gBAAAtqC,KAAAuqC,YAAAvqC,KAAAqM,KAGAm+B,sBAAA,EAEAC,wBAAA,EAGA3J,UAAA,EAEAyI,WAAA,EAGAH,gBAAA,EACAnD,iBAAA,EAGAC,oBAAA,EACAmD,mBAAA,EAGAqB,cAAAC,UAAAC,UAAA7qB,cACAhhB,QAAA,oBAEA8rC,cAAA,GAEAhF,UAAA,IAIAt3B,SACAiC,UAEA1Q,6BACA,OAAAE,KAAAimC,iBAAAjmC,KAAAkmC,qBAGApmC,8BACA,OAAAE,KAAAopC,gBAAAppC,KAAAqpC,oBAGAvpC,QACA,OAAAE,KAAA0qC,aAEArS,UAA2Br4B,KAAAkmC,oBAAAlmC,KAAA6qC,kBAE3BpvB,mBAAoCzb,KAAA6qC,uBAIpC/qC,cACA,OACgBiqC,GAChB/pC,KAAA0qC,YAAA,gBACA1qC,KAAAsqC,eAAAtqC,KAAA6lC,SAAA,YAIAiF,qBAAA,QAEmB7G,iBAInB8G,wBAAA,QAEmB9G,qBAInBnkC,UAEAE,KAAA4L,OAEA5L,KAAAgrC,0BAEAhrC,KAAAgF,MAAA,QAAAhF,OAEAF,gBAEAE,KAAAm5B,cAEAn5B,KAAAirC,4BAEA3E,qBAAAtmC,KAAAkrC,uCAEA5E,qBAAAtmC,KAAAmrC,wCAEA7E,qBAAAtmC,KAAAwmC,6BAEA3mC,SAQAC,OAEAE,KAAA6qC,cAAA7qC,KAAAwkC,mBAEAxkC,KAAAqmC,aAEArmC,KAAAg6B,aASAl6B,aAEAE,KAAAqpC,mBAAArpC,KAAAq8B,IAAA4I,YAEAjlC,KAAAkmC,oBAAAlmC,KAAAq8B,IAAAuJ,aAEA5lC,KAAAopC,gBAAAppC,KAAAwjB,MAAA4nB,WAAAC,YAEArrC,KAAAimC,iBAAAjmC,KAAAwjB,MAAA4nB,WAAAE,aAEAtrC,KAAAwqC,qBAAAxqC,KAAAimC,iBAAAjmC,KAAAkmC,oBAEAlmC,KAAAyqC,uBAAAzqC,KAAAopC,gBAAAppC,KAAAqpC,oBASAvpC,4BAEAE,KAAAgD,cAAAhD,KAAAurC,kBACAvrC,KAAAurC,iBAAAC,cAUA1rC,0BAIA,GAAAE,KAAAgD,cAAA,mBAAAvE,OAAAgtC,iBAAA,CAEA,MAAAC,GAEAC,YAAA,EAEAC,WAAA,EAEAC,eAAA,EAEAC,SAAA,EAEAC,mBAAA,EAEAC,uBAAA,EAIA3B,gBAAArqC,KAAAqqC,iBAIArqC,KAAAurC,iBAAA,IAAAE,iBAAA,CAAAQ,EAAAC,KAcAlsC,KAAAmgC,UAAA,KAEAngC,KAAAmsC,SAAA,GAAAlL,EAAA2D,KAEA5kC,KAAAgF,MAAA,mBAAAi8B,EAAA2D,SAKA5kC,KAAAurC,iBAAAa,QAAApsC,KAAAq8B,IAAAqP,KAWAlH,iBAAA,IACmBA,KAUnB1kC,cAAAkZ,GACAhZ,KAAA6lC,SAAA7sB,GAWAlZ,QAAAusC,GAAA,EAAApgC,GAEAjM,KAAAmgC,UAAA,KAEAngC,KAAAqmC,aAEArmC,KAAAssC,aAAAD,GAEA,mBAAApgC,GAEAA,EAAAjM,KAAA8gC,UAAA9gC,KAAAupC,eAWAzpC,YAEYkqC,GAAEvrC,OAAA,SAAAuB,KAAAmsC,UASdrsC,cAEYmqC,GAAGxrC,OAAA,SAAAuB,KAAAmsC,UAUfzF,SAAAznC,GACAA,GAAAR,OAAAQ,MAUAa,UAAAb,GACA,MAAA0nC,EAAA1nC,GAAAR,OAAAQ,MACA0nC,EAAA7c,eACA6c,EAAA7c,iBAEA6c,EAAAC,aAAA,GAUA9mC,gBAEA,GAAAE,KAAAusC,WACA,SAGAvsC,KAAAusC,WAAAjQ,WAAA,KAEAt8B,KAAAgF,MAAA,gBAAAhF,KAAA8gC,UAAA9gC,KAAAupC,YACAvpC,KAAAusC,WAAA,MACavsC,KAAA0/B,QASb5/B,gBAEA,GAAAE,KAAAusC,WACA,SAGAvsC,KAAAusC,WAAAjQ,WAAA,KAEAt8B,KAAAgF,MAAA,gBAAAhF,KAAA8gC,UAAA9gC,KAAAupC,YACAvpC,KAAAusC,WAAA,MACavsC,KAAA0/B,QASb5/B,qBAEA,UAAAE,KAAAwsC,gBAAAxsC,KAAAupC,aAAAvpC,KAAAysC,6BAAAzsC,KAAA8gC,YAAA9gC,KAAA0sC,4BACA1sC,KAAA2sC,gBAGA,UAAA3sC,KAAAwsC,gBAAA,IAAAxsC,KAAAupC,YAAA,IAAAvpC,KAAA8gC,WACA9gC,KAAA4sC,iBAWA9sC,iBAAAb,GAEAe,KAAAwnC,eAAA,GAEAxnC,KAAA6sC,SAAA5tC,EAAA,SAEAe,KAAAwsC,eAAAvtC,EAAA6tC,YAAA,kBAIA9sC,KAAA+sC,sBAUAjtC,YAAAb,GAEAe,KAAAwnC,eAAA,GAEAxnC,KAAA6sC,SAAA5tC,EAAA,SAEAe,KAAAwsC,eAAAvtC,EAAA+tC,OAAA,kBAEAhtC,KAAA+sC,sBAsCAjtC,aAAAusC,GAAA,GAGArsC,KAAA8gC,UAAA9gC,KAAAwjB,MAAA4nB,WAAAtK,UAEA9gC,KAAAupC,WAAAvpC,KAAAwjB,MAAA4nB,WAAA7B,WAEA8C,GAEArsC,KAAAgF,MAAA,SAAAhF,KAAA8gC,UAAA9gC,KAAAupC,YAGAvpC,KAAA6lC,UAEA7lC,KAAAitC,oBAUAntC,mBAEAE,KAAAwqC,sBAAA,iBAAAxqC,KAAAwjB,MAAA2mB,mBAAA,mBAAAnqC,KAAAwjB,MAAA2mB,kBAAA1D,kBAEAzmC,KAAAwjB,MAAA2mB,kBAAA1D,iBAAAzmC,KAAAimC,iBAAAjmC,KAAAkmC,oBAAAlmC,KAAA8gC,WAGA9gC,KAAAyqC,wBAAA,iBAAAzqC,KAAAwjB,MAAA4mB,qBAAA,mBAAApqC,KAAAwjB,MAAA4mB,oBAAA3D,kBAEAzmC,KAAAwjB,MAAA4mB,oBAAA3D,iBAAAzmC,KAAAopC,gBAAAppC,KAAAqpC,mBAAArpC,KAAAupC,aAYAzpC,sBAAAotC,EAAArH,GAEAS,qBAAAtmC,KAAAkrC,uCACAlrC,KAAAkrC,sCAAAnE,sBAAA,KAEA/mC,KAAAwnC,cAAA3B,GAEA7lC,KAAAwjB,MAAA4nB,WAAAtK,UAAA9gC,KAAA0sC,2BAAAQ,KAYAptC,uBAAAotC,EAAArH,GAEAS,qBAAAtmC,KAAAmrC,wCACAnrC,KAAAmrC,uCAAApE,sBAAA,KAEA/mC,KAAAwnC,cAAA3B,GAEA7lC,KAAAwjB,MAAA4nB,WAAA7B,WAAAvpC,KAAAysC,4BAAAS,KAaAptC,UAAAmhC,EAAAh1B,EAAAkhC,GAAA,GACAntC,KAAA6L,OAAAo1B,EAAAjhC,KAAAupC,WAAAt9B,EAAAkhC,IAYArtC,WAAA8kC,EAAA34B,EAAAkhC,GAAA,GACAntC,KAAA6L,OAAA7L,KAAA8gC,UAAA8D,EAAA34B,EAAAkhC,IAaArtC,OAAAmhC,EAAA2D,EAAA34B,EAAAkhC,GAAA,GACA,IAAAC,EAAAnM,EACAoM,EAAAzI,OACA,IAAAwI,IACAA,EAAAptC,KAAA8gC,gBAEA,IAAAuM,IACAA,EAAArtC,KAAAupC,YAGAvpC,KAAAqmC,aAEA,MAAAiH,EAAAF,EAAAptC,KAAA8gC,UAEAyM,EAAAH,EAAAptC,KAAAupC,WAEA95B,EAAA09B,EAAArlB,KAAAogB,KAAAloC,KAAAylC,UA9mBY,IA8mB8D,EAE1E+H,EAAAF,EAAA79B,EAEAg+B,EAAAF,EAAA99B,EAEAzP,KAAAmoC,cAAAqF,EAAAC,EAAAh+B,EAAAxD,EAAAmhC,EAAAC,IAeAvtC,cAAA4tC,EAAAC,EAAAtF,EAAAp8B,EAAAg1B,EAAA2D,GAIA,GAFA0B,qBAAAtmC,KAAAwmC,4BAEA,IAAA6B,EAYA,OAVAroC,KAAAwjB,MAAA4nB,WAAAtK,UAAAG,EACAjhC,KAAAwjB,MAAA4nB,WAAA7B,WAAA3E,EAEA5kC,KAAA8gC,UAAAG,EACAjhC,KAAAupC,WAAA3E,EAEA5kC,KAAAwmC,2BAAAO,sBAAA,KAEA/mC,KAAA4tC,eAAA3hC,EAAAjM,KAAA8gC,UAAA9gC,KAAAupC,eAEA,EAGAvpC,KAAAwmC,2BAAAO,sBAAA,KAEA/mC,KAAAwjB,MAAA4nB,WAAAtK,UAAA9gC,KAAA8gC,UAAA4M,EACA1tC,KAAAwjB,MAAA4nB,WAAA7B,WAAAvpC,KAAAupC,WAAAoE,EAEA3tC,KAAAmoC,cAAAuF,EAAAC,EAAAtF,EAAA,EAAAp8B,EAAAg1B,EAAA2D,MAYA9kC,eAAAmM,KAAA8nB,GACA,mBAAA9nB,GAEAA,EAAAhQ,MAAA,KAAA83B,IAUAwW,SAAA,KACA,MAAAsD,EAAAlD,UAAAC,UAAA7qB,cACA+tB,GAAA,IAAAD,EAAA9uC,QAAA,UACAgvC,GAAA,IAAAF,EAAA9uC,QAAA,WACAivC,GAAA,IAAAH,EAAA9uC,QAAA,QACAkvC,GAAA,IAAAJ,EAAA9uC,QAAA,QACAmvC,GAAA,IAAAL,EAAA9uC,QAAA,YACAovC,GAAA,IAAAN,EAAA9uC,QAAA,SACAqvC,GAAA,IAAAP,EAAA9uC,QAAA,cACAsvC,GAAA,IAAAR,EAAA9uC,QAAA,cACA,OAAA+uC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,KE5rBetiC,cAXCxQ,OAAA4E,EAAA,QAAA5E,CACd2uC,GCTQ,WAAgB,IAAAhpC,EAAAlB,KAAaI,EAAAc,EAAAb,eAA0BC,EAAAY,EAAAX,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiByM,MAAA7L,EAAAq7B,cAAsBj8B,EAAA,OAAYuU,IAAA,aAAA9H,MAAA7L,EAAA4pC,qBAAAxM,MAAAp9B,EAAA,MAAAC,IAAsEmtC,OAAAptC,EAAAorC,aAAAiC,MAAA,SAAAltC,GAAmD,OAAAH,EAAAstC,YAAAntC,IAA+BotC,WAAA,SAAAptC,GAA+B,OAAAH,EAAAwtC,iBAAArtC,IAAoCmnC,WAAA,SAAAnnC,GAAwD,OAAzBA,EAAAiM,kBAAyBpM,EAAAunC,UAAApnC,IAA6BstC,UAAA,SAAAttC,GAAuD,OAAzBA,EAAAiM,kBAAyBpM,EAAAkmC,OAAA/lC,IAA0ButC,SAAA,SAAAvtC,GAAsD,OAAzBA,EAAAiM,kBAAyBpM,EAAAmmC,SAAAhmC,OAA8Bf,EAAA,OAAYuU,IAAA,gBAAA9H,MAAA7L,EAAA6pC,0BAAsD7pC,EAAAwiC,GAAA,iBAAAxiC,EAAAJ,GAAA,KAAAI,EAAA,qBAAAZ,EAAA,sBAA0FuU,IAAA,oBAAArU,OAA+B8kC,kBAAApkC,EAAA+kC,iBAAAV,qBAAArkC,EAAAglC,oBAAAV,WAAAtkC,EAAA4/B,UAAA2E,UAAAvkC,EAAAukC,UAAAC,iBAAAxkC,EAAAwkC,iBAAAC,yBAAAzkC,EAAAykC,0BAA6OxkC,IAAK0tC,gBAAA3tC,EAAA4tC,yBAA6C5tC,EAAAkM,KAAAlM,EAAAJ,GAAA,KAAAI,EAAA,uBAAAZ,EAAA,wBAA+EuU,IAAA,sBAAArU,OAAiCuoC,iBAAA7nC,EAAAkoC,gBAAAJ,oBAAA9nC,EAAAmoC,mBAAAJ,YAAA/nC,EAAAqoC,WAAA9D,UAAAvkC,EAAAukC,UAAAC,iBAAAxkC,EAAAwkC,iBAAAC,yBAAAzkC,EAAAykC,0BAA2OxkC,IAAK4tC,iBAAA7tC,EAAA8tC,0BAA+C9tC,EAAAkM,MAAA,QDY18C,EACA,KACA,KACA,eEeAguB,EAAA,QAAGM,aAAcC,cAAsC5vB,IACvD,MAAApI,IAAoBoI,aAAWwjB,SAAO0f,aAAA/L,IAGtCgM,GAAA,WACA,GAAAA,GAAAC,UACA,SAEA,IAAA/zC,EAAA,EACAqD,OAAAe,QAAAE,IAAA,YAEAnE,OAAA6N,KAAAzF,IACAwC,QAAAjI,IACA9C,IAEA,IAAA+jC,EAAAjhC,EAEAihC,IAAAtW,QAHA,kBAGA,SAAAumB,GAEA,YAAAA,EAAA,OAA4CA,EAAArvB,kBAEhCqb,EAAA,QAAGM,uBAAwByD,IAAKx7B,GAAAzF,IAC5CO,OAAAe,QAAAE,sBAAiDy/B,iBAG7C/D,EAAA,QAAG5/B,UAAA6zC,SAAsB3S,EACzBtB,EAAA,QAAG5/B,UAAA8zC,aAA0BjS,GAC7BjC,EAAA,QAAG5/B,UAAAs8B,OAAoByG,GAEvBnD,EAAA,QAAG5/B,UAAA4J,UAAuBA,EAC9B3G,OAAAe,QAAAE,WAA8BtE,KAC9BqD,OAAAe,QAAAE,IAAA,OAEA6vC,IAAaL,YACb9T,EAAA,QAAGC,IAAAkU,ICtDY,IAAAC,IAEf1vC,KAAA4+B,EAAAC,GAOA,SAAAC,EAAAt/B,GAsBA,GAAAo/B,EAAAxF,SAAA55B,EAAA8kB,QACA,SAGAua,EAAA/xB,YACA+xB,EAAA/gC,MAAA0B,GAIAo/B,EAAAG,oBAAAD,EACAzb,SAAA2b,iBAAA,QAAAF,IAEA9+B,WAIAA,OAAA4+B,GAEAvb,SAAA4b,oBAAA,QAAAL,EAAAG,4BACAH,EAAAG,sBCVe,IAAA4Q,GA7Bf,SAAA7K,EAAA3D,EAAAZ,GAEA,IAAAgN,EAAAzI,EACAwI,EAAAnM,EAEA,MAAAyO,EAAAjxC,OAAAkxC,WACAC,EAAAnxC,OAAAoxC,YAEAC,EAAAzP,EAAA4E,YACA8K,EAAA1P,EAAAuF,aAEAoK,GAAA,kBAWA,OATA3C,EAAAyC,EAAAJ,IACArC,GAAAyC,EACAE,EAAA,WAEA5C,EAAA2C,EAAAH,IACAxC,GAAA2C,EACAC,EAAA,WAIA/O,IAAAmM,EACAxI,KAAAyI,EACA1I,SAAAqL,IClCA,MAAAC,IACA3R,OACAzzB,SACA85B,SAAA,QACA1D,IAAA,IACA2D,KAAA,IACAsL,UAAA,GACAC,mBAAA,OACAC,KAAA,8BACAz0B,MAAA,OACA00B,YAAA,QACAC,QAAA,WACAC,gBAAA,MACAlb,OAAA,6BACAmb,aAAA,8BACAC,aAAA,YACA3L,WAAA,UAEArlC,MAEA0wC,mBAAA,OAEA9a,OAAA,qBAEA1Z,MAAA,QAEA1N,SAEAkiC,mBAAA,OAEA9a,OAAA,qBAEA1Z,MAAA,QAEAoT,SAEAohB,mBAAA,OAEA9a,OAAA,qBAEA1Z,MAAA,QAEAd,OAEAs1B,mBAAA,OAEA9a,OAAA,qBACA1Z,MAAA,SAIA+0B,gBAEAzP,IAAA,GAEA2D,KAAA,KAIA+L,IAEAC,IAAA,KAEA9wC,aAEA,MAAA+wC,EAAA1tB,SAAAiV,cAAA,OAWA,OATAyY,EAAA5X,UAAA6X,IAAA,mBAEAD,EAAAE,aAAA,QAAAd,GAAA3R,MAAAzzB,SAEA8lC,GAAAC,IAAAC,EAEA1tB,SAAA6F,cAAA,QACAuP,YAAAsY,GAEAF,IAIAK,SAAA,KAEAL,GAAAC,IAAAtS,MAAAwG,WAAA,SAEA6L,IAIAM,SAAA,KAEAN,GAAAC,IAAAtS,MAAAwG,WAAA,UAEA6L,IAIA7wC,eAAAb,GAGA,MAAAouC,EAAApuC,EAAA4qC,QAEAuD,EAAAnuC,EAAAgpC,SAEAhH,IACAA,EAAA2D,KACAA,EAAAD,SACAA,GACY8K,GAAkBpC,EAAAD,EAAAuD,GAAAC,KAE9BM,EAAA,SAAAvM,EAAA,GAAAC,EAAAqL,GAAAS,eAAA9L,OAAAqL,GAAAS,eAAA9L,KAEAuM,EAAA,QAAAxM,EAAA,GAAA1D,EAAAgP,GAAAS,eAAAzP,MAAAgP,GAAAS,eAAAzP,IAIA,OAHA0P,GAAAC,IAAAtS,MAAAsG,QAAiCsM,MACjCP,GAAAC,IAAAtS,MAAA2C,OAAgCkQ,MAEhCR,IAGAS,SAAAxzC,IAEA+yC,GAAAC,IAAAhhC,UAAAhS,EACA+yC,IAGAU,SAAAzzC,IAEA+yC,GAAAC,IAAA/8B,UAAAjW,EAAAkd,KAAA,KACA61B,IAGA7wC,SAAAw+B,GACA,uBAAA/iC,OAAAC,UAAA2D,SAAAzD,KAAA4iC,EAAA,MAEA,UAAAn8B,KAAAm8B,EAEAqS,GAAAC,IAAAtS,MAAAn8B,GAAAm8B,EAAAn8B,GAGA,OAAAwuC,KAMe,IAAAxjB,IAEfrtB,KAAA4+B,EAAAC,GAEAgS,GAAAC,KAEAD,GAAAW,aAKA,MAAAC,EAAA5S,EAAA6S,IAAA7S,EAAA6S,IAAA,UAEAC,GAAA,mBACA,UAAAtvC,KAAAw8B,EAAA9xB,UACA4kC,EAAA71C,KAAAuG,GAGA,MAAAuvC,EAAAzB,GAAA3R,MAAAiT,GAEAI,EAAAhT,EAAA9xB,UAAAC,WAAA,EAOA,SAAA8xB,EAAA3/B,GAEA,IAAA2yC,GAAA,EAOA,GALAD,IAEAC,EAAA,SAAAlT,EAAAmT,QAAA/kC,UAAA,SAAA4xB,EAAAoT,WAAAD,QAAA/kC,UAGA6xB,EAAA/gC,OAAAg0C,EAAA,CAEA,MAAAlqC,EAAA,mBAAAi3B,EAAA/gC,MAAA+gC,EAAA/gC,MAAAqB,EAAAy/B,GAAAC,EAAA/gC,MAEA+yC,GAAAS,SAAA1pC,GAEA2pC,SAAAI,GAEAM,SAAAL,GAEAM,eAAA/yC,GAEAgyC,YAKAvS,EAAAuT,aAAA,WAEAvT,EAAAwT,eAAAtT,EAEAzb,SAAA2b,iBAAA,YAAAF,IAGAF,EAAAyT,aAAA,WAEAxB,GAAAK,WAEA7tB,SAAA4b,oBAAA,YAAAL,EAAAwT,uBAEAxT,EAAAwT,iBAIApyC,aAKAA,WAIAA,qBAIAA,OAAA4+B,GAEAvb,SAAA4b,oBAAA,YAAAL,EAAAwT,uBAEAxT,EAAAwT,eAEAxT,EAAAuT,aAAA,KAEAvT,EAAAyT,aAAA,OCxOA/W,EAAA,QAAGgX,UAAA,eAA2B5C,IAE9BpU,EAAA,QAAGgX,UAAA,OAAmBjlB,IACtB1uB,OAAAe,QAAAE,IAAA,YACAjB,OAAAe,QAAAE,IAAA,mCACAjB,OAAAe,QAAAE,IAAA,2BACAjB,OAAAe,QAAAE,IAAA,MCRA07B,EAAA,QAAGtjB,OAAA,aCCYla,IACf,IAAAA,EACA,SAEA,MAAA8J,EAAA9J,EAAAuB,WACA,OAAAuI,EAAA2qC,OAAA,GAAAppB,cAAAvhB,EAAA/I,MAAA,KDJAy8B,EAAA,QAAGtjB,OAAA,cEAY,CAAAla,EAAA00C,KACf,UAAA10C,GAAA,KAAAA,GAAA,mBACA,SAGA,IAAA20C,EAAA30C,EAAAirB,QAAA,UAAwC,IACxC0pB,IAAA1pB,QAAA,UACA,MAAAla,EAAA,IAAAW,KAAAijC,GAEAC,EAAA7jC,EAAA+J,cAEA,IAAA1b,EAAA2R,EAAA8jC,WAAA,EACAz1C,IAAA,OAAqBA,IAAEA,EAEvB,IAAAE,EAAAyR,EAAA+jC,UAEA,OADAx1C,IAAA,OAAsBA,IAAEA,EACxBo1C,KAAuBE,KAAKx1C,KAAKE,QAAUs1C,KAAKx1C,KAAKE,MFfrDuB,OAAAe,QAAAE,IAAA,aACAjB,OAAAe,QAAAE,IAAA,gCACAjB,OAAAe,QAAAE,IAAA,iCACAjB,OAAAe,QAAAE,IAAA,gBGVA,MAAAizC,IAIA3wB,WAAA,GAEAE,eAAA,GAEAT,WAAA,GAEA2J,aAAA,GAEA5D,aAAA,GAEA8C,aAAA,GAGAsoB,WACAC,QAAA,OACAC,QAAA,OACAC,QAAA,OACAC,QAAA,OACAC,QAAA,MAIAC,WACAC,OAAA,KACAC,OAAA,KACAC,OAAA,KACAC,OAAA,KACAC,OAAA,KACAC,OAAA,KACAC,OAAA,KACAC,OAAA,KACAC,OAAA,KACAC,QAAA,KACAC,QAAA,KACAC,QAAA,KACAC,QAAA,MACAC,QAAA,KAKAC,WACAd,OAAA,IACAC,OAAA,IACAC,OAAA,MAIAa,WACAf,OAAA,IACAC,OAAA,KAIAe,WACAC,OAAA,KACAjB,OACA,OACAC,OACA,UAIAiB,WACAlB,OAAA,KACAC,OACA,MACAC,OACA,KACAC,OACA,KACAC,OACA,OACAC,OACA,KACAC,OACA,KACAC,OACA,KACAC,OACA,MACAC,QACA,MACAC,QACA,KACAC,QACA,KACAC,QACA,KACAC,QACA,KACAM,QACA,MACAC,QACA,MACAC,QACA,OACAC,QACA,KACAC,QACA,KACAC,QACA,MACAC,QACA,KACAC,QACA,KACAC,QACA,MACAC,QACA,MACAC,QACA,KACAC,QACA,MACAC,QACA,MACAC,QACA,MACAC,QACA,QACAC,QACA,KACAC,QACA,OACAC,QACA,MACAC,QACA,KACAC,QACA,MACAC,QACA,MACAC,QACA,MACAC,QACA,MACAC,QACA,MACAC,QACA,MACAC,QACA,MACAC,QACA,OACAC,QACA,KACAC,QACA,QACAC,QACA,OACAC,QACA,OACAC,QACA,MACAC,QACA,MACAC,QACA,MACAC,QACA,KACAC,QACA,OACAC,QACA,MACAC,QACA,OACAC,QACA,MACAC,QACA,MACAC,QACA,MACAC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","file":"static/js/app.42123f936e7fa9081651.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"Vtdi\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","/**\r\n * #info\r\n *\r\n *@author   wuwg\r\n * @version 2018.01.01\r\n * @createTime  2018-09-06\r\n * @updateTime  2018-11-13\r\n * @description  module  fdMessage  消息\r\n * @updateTime  2019-1-12 wuwg\r\n * 1.删除多余引用\r\n * 2.增加消息处理 openPdf （用于庭审对接）\r\n */\r\n\r\nwindow.onmessage = function (event) {\r\n    if (event.data) {\r\n        let _data = {};\r\n        try {\r\n            _data = Object.prototype.toString.call(event.data) === '[object String]' ? JSON.parse(event.data) : {};\r\n        } catch (e) {\r\n            _data = {cmd: 'error'};\r\n            window.console.info('%c传入data不是对象形式？请马上修改', 'color:red;font-size:16px;');\r\n            window.console.log(event.data);\r\n        }\r\n        switch (_data.cmd) {\r\n            case 'loading-start':\r\n                window.console.log('ajax-start');\r\n                break;\r\n            case 'loading-finish':\r\n                window.console.log('ajax-finish');\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n    }\r\n};\r\n","export * from \"-!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=49ea52ef&lang=less&scoped=true&\"","export * from \"-!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/index.js??ref--6-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","import mod from \"-!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","<template>\r\n    <div id=\"app\">\r\n        <router-view/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'App',\r\n    methods: {\r\n        clickGoto(path) {\r\n            this.$router.push({path: path});\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n    @import \"./css/index.less\";\r\n</style>\r\n","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=046f2a5d&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\r\n *@file index\r\n *@version 1.0.1\r\n *@author wuwg\r\n *@createTime 2019/10/18 - 15:12\r\n *@updateTime 2019/10/18 - 15:12\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description index 的描述\r\n */\r\nexport default {\r\n    name: 'test1',\r\n    data() {\r\n        return {message: 'test1'};\r\n    }\r\n};\r\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=6eedb376&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fd-test1\"},[_c('h1',[_vm._v(_vm._s(_vm.message))]),_vm._v(\" \"),_c('p',[_vm._v(\"改变数据后，页面渲染内容测试\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\r\n *@file index\r\n *@version 1.0.1\r\n *@author wuwg\r\n *@createTime 2019/10/18 - 15:13\r\n *@updateTime 2019/10/18 - 15:13\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description index 的描述\r\n */\r\nexport default {\r\n    name: 'test2',\r\n    data() {\r\n        return {message: 'test2'};\r\n    },\r\n    methods: {\r\n        clickChange(message) {\r\n            this.message = message;\r\n        }\r\n    }\r\n};\r\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=196ed2e9&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fd-test2\"},[_c('h1',[_vm._v(_vm._s(_vm.message))]),_vm._v(\" \"),_c('button',{on:{\"click\":function($event){return _vm.clickChange('张三')}}},[_vm._v(\"click\")]),_vm._v(\" \"),_c('p',[_vm._v(\"默认渲染内容测试\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n *@file index\r\n *@version 1.0.1\r\n *@author wuwg\r\n *@createTime 2019/10/18 - 15:14\r\n *@updateTime 2019/10/18 - 15:14\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description index 的描述\r\n */\r\nimport request from './request/request.js';\r\nconst NUM_25 = 25;\r\n// 导出模块\r\nexport default {\r\n    name: 'test3',\r\n    // 混入\r\n    mixins:[request],\r\n    props: {test: {type: null}},\r\n    data() {\r\n        return {\r\n            message: 'test3',\r\n            showLog: window.fdConfig.url.showLog,\r\n            serverUrl: window.fdConfig.url.url.test.index,\r\n            data: []\r\n        };\r\n    },\r\n    methods: {\r\n        // 获取数据\r\n        clickGetData() {\r\n            return new Promise((resolve) => {\r\n                // 请求数据\r\n                const queryData = {\r\n                    query: '张三',\r\n                    age: NUM_25\r\n                };\r\n                // 获取用户数据\r\n                this.requestUserData(queryData).then((data) => {\r\n                    this.data = data;\r\n                    resolve();\r\n                });\r\n            });\r\n        }\r\n    },\r\n    mounted() {\r\n        //  console.log(this)\r\n    }\r\n};\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\r\n *@file request\r\n *@version 1.0.1\r\n *@author wuwg\r\n *@createTime 2019/12/09 - 11:03\r\n *@updateTime 2019/12/09 - 11:03\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  阅卷目录request （请求）相关\r\n @namespace  request   请求相关，后面加模块名\r\n 名字解释：\r\n _name ： 用 【模块名】 => 【子模块名】\r\n _method ： 请求的方法\r\n _showLog：  是否显示日志\r\n _url : 请求的url\r\n _data : 请求所需要的数据， 需要的参数名，全部在这里写好， 可以通过传参给对象赋值！\r\n _serverData : 服务器返回的数据\r\n\r\n 请求：\r\n 1. fd工程结构中自带此全局方法\r\n window.fdGlobal.ajax\r\n 2.可以单独使用\r\n axios\r\n\r\n 请求必须输出日志：\r\n 1. 请求日志\r\n window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n 2. 响应日志\r\n window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n\r\n ！important\r\n 请求函数返回一个promise,\r\n 为了性能需要，咱们需要内置性能日志！\r\n 按照以下结构编写即可！\r\n 以下是一个实际案例， 【请求模块】可以通过混入的方式，引入到组件的index.js 中\r\n\r\n request ：为命名空间\r\n TreeData：  为模块名\r\n showLog ： 在组件的 index.js  的data中写好，  如：{showLog: window.fdConfig.url.showLog}, 全局控制日志！\r\n\r\n\r\n */\r\nexport default {\r\n    methods: {\r\n        // 请求【模块test3】=> 【获取用户数据】\r\n        requestUserData(queryData) {\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal.performance.getCurrentTime();\r\n            return new Promise((resolve, reject) => {\r\n                const _showLog = this.showLog;\r\n                const _name = '【模块test3】=> 【获取用户数据】';\r\n                const _method = window.fdConfig.url.methodGet;\r\n                const _url = this.serverUrl;\r\n                const _data = {\r\n                    module: 'test3',\r\n                    query: queryData.query,\r\n                    age: queryData.age\r\n                };\r\n                // 输出日志\r\n                window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n                //  返回shuju\r\n                window.fdGlobal.ajax({\r\n                    method: _method,\r\n                    url: _url,\r\n                    // URL参数\r\n                    // 必须是一个纯对象或者 URL参数对象\r\n                    params: _data,\r\n                    // 默认值是json\r\n                    responseType: 'json'\r\n                }).then((data) => {\r\n                    const _serverData = data.data;\r\n                    window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                    // 后端输出日志\r\n                    window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                    resolve(_serverData);\r\n                }, (data) => {\r\n                    window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                    const _serverData = data.data;\r\n                    // 后端输出日志\r\n                    window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                    reject(data);\r\n                });\r\n            });\r\n        }\r\n    }\r\n};\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @createTime:2019-08-13,\r\n * @updateTime:2019-08-13\r\n * @copyright thunisoft fd\r\n * @description  *  [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n *  [jsdoc-vuejs]{@link  http://npm.taobao.org/package/jsdoc-vuejs}  -\r\n *  [个人博客]{@link  http://www.wuweigang.com}\r\n */\r\nimport unitTest1 from '@/components/app/unit-test/test1/index.vue';\r\nimport unitTest2 from '@/components/app/unit-test/test2/index.vue';\r\nimport unitTest3 from '@/components/app/unit-test/test3/index.vue';\r\nexport default {\r\n    name: 'page-unit',\r\n    components:{\r\n        unitTest1,\r\n        unitTest2,\r\n        unitTest3\r\n    },\r\n    data() {\r\n        return {name: '【页面】> 【unit】'};\r\n    },\r\n    methods: {}\r\n};\r\n\r\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=7b678a94&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fd-test3\"},[_c('h1',[_vm._v(\"异步获取数据\")]),_vm._v(\" \"),_c('p',{attrs:{\"id\":\"jsP\"}},[_vm._v(_vm._s(_vm.test))]),_vm._v(\" \"),_c('ul',_vm._l((_vm.data),function(item){return _c('li',{key:item.id,domProps:{\"textContent\":_vm._s(item.name)}})}),0),_vm._v(\" \"),_c('button',{on:{\"click\":_vm.clickGetData}},[_vm._v(\"getData\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=33bd2a21&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fd-page-unit\"},[_c('h2',[_vm._v(_vm._s(_vm.name))]),_vm._v(\" \"),_c('p',[_vm._v(\"这个模块页面写了一些常用单元测试例子，大家可以参考\")]),_vm._v(\" \"),_c('p',[_vm._v(\"单元测试代码在【test>unit>specs】目录下\")]),_vm._v(\" \"),_c('div',{staticClass:\"fd-layout\"},[_c('unitTest1'),_vm._v(\" \"),_c('unitTest2'),_vm._v(\" \"),_c('unitTest3')],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n * @author  wanghuifeng\r\n * @createTime   2020/12/24\r\n * @updateTime  2020/12/31\r\n * @namespace cache   c  缓存命名空间\r\n *\r\n */\r\nexport default {\r\n    methods: {\r\n        // 初始化缓存对象\r\n        cInitCache() {\r\n            this.cResetCache();\r\n        },\r\n        // 销毁缓存对象\r\n        cDestroyCache() {\r\n            this.cacheObject = null;\r\n        },\r\n        cResetCache() {\r\n            this.cacheObject = new Map();\r\n        },\r\n        // 添加缓存数据\r\n        cAddCache(key, data) {\r\n            this.cacheObject.set(key, data);\r\n        },\r\n        // 获取缓存数据\r\n        cGetCache(key) {\r\n            return this.cacheObject.get(key);\r\n        },\r\n        // 获取所有缓存缓存数据，（key:value）\r\n        cGetAllCache() {\r\n            return this.cacheObject;\r\n        },\r\n        // 删除缓存数据\r\n        cDeleteCache(key) {\r\n            return this.cacheObject.delete(key);\r\n        }\r\n    }\r\n};\r\n","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020/12/27 - 10:57\r\n *@updateTime 2020/12/27 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description 数据过滤模块\r\n @namespace   filter :  数据过滤前缀\r\n */\r\nconst NUM_1 = 1;\r\nconst NUM_2 = 2;\r\nconst NUM_3 = 3;\r\nconst NUM_4 = 4;\r\nconst NUM_5 = 5;\r\nconst NUM_6 = 6;\r\nconst NUM_7 = 7;\r\nconst NUM_8 = 8;\r\nconst NUM_9 = 9;\r\nconst NUM_10 = 10;\r\nconst NUM_11 = 11;\r\nconst NUM_12 = 12;\r\nconst NUM_13 = 13;\r\nconst NUM_14 = 14;\r\nconst NUM_20 = 20;\r\nconst NUM_21 = 21;\r\nconst NUM_30 = 30;\r\nconst NUM_31 = 31;\r\nconst NUM_40 = 40;\r\nconst NUM_41 = 41;\r\nconst NUM_50 = 50;\r\nconst NUM_51 = 51;\r\nconst NUM_52 = 52;\r\nconst NUM_53 = 53;\r\nconst NUM_60 = 60;\r\nconst NUM_70 = 70;\r\nconst NUM_80 = 80;\r\nconst NUM_99 = 99;\r\n// 导出模块\r\nexport default {\r\n    // 当前的激活的来源条目 【业务】\r\n    data() {\r\n        return {\r\n            // 最终的过滤数据\r\n            filterKeys: []\r\n        };\r\n    },\r\n    methods: {\r\n        // 设置业务激活条目\r\n        setFilterYwActiveItem(ywActiveItem) {\r\n            this.filterYwActiveItem = ywActiveItem;\r\n        },\r\n        // 过滤数据\r\n        filterDataList(dataList) {\r\n            const _dataList = [];\r\n            // 过滤控制\r\n            this.filterControl(parseInt(this.filterYwActiveItem.category, 10));\r\n            // 父级控制\r\n            const _filterPKeys = Object.keys(this.filterShowKeysObject);\r\n            // 循环所有的数据列表\r\n            dataList.forEach((item) => {\r\n                // 只有显示的才需要增加到当前列表\r\n                // if (this.filterKeys.indexOf(item[this.dKey]) !== -1) {\r\n                if (_filterPKeys.indexOf(item[this.dKey]) !== -1) {\r\n                    // 目标对象\r\n                    const _targetItem = {};\r\n                    // 克隆对象\r\n                    Object.keys(item).forEach((key) => {\r\n                        if (key === 'children') {\r\n                            _targetItem[key] = [];\r\n                        } else {\r\n                            _targetItem[key] = item[key];\r\n                        }\r\n                    });\r\n                    // 加入到最终的结果数组\r\n                    _dataList.push(_targetItem);\r\n                    // 所有可以显示的子集\r\n                    const _childrenKeys = this.filterShowKeysObject[item[this.dKey]];\r\n                    // 如果存在子集，那么需要过滤子节点\r\n                    if (_childrenKeys.length && item.children.length) {\r\n                        // 循环处理子节点\r\n                        item.children.forEach((itemC) => {\r\n                            // 判断当前数据条目是否在需要显示的子集中\r\n                            if (_childrenKeys.indexOf(itemC[this.dKey]) !== -1) {\r\n                                // 目标对象\r\n                                const _targetItemC = {};\r\n                                // 克隆对象\r\n                                Object.keys(itemC).forEach((key) => {\r\n                                    if (key === 'children') {\r\n                                        _targetItemC[key] = [];\r\n                                    } else {\r\n                                        _targetItemC[key] = itemC[key];\r\n                                    }\r\n                                });\r\n                                // 推到数组中\r\n                                _targetItem.children.push(_targetItemC);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            // 授权控制：移除children为空的项目\r\n            for (let i = _dataList.length - 1; i >= 0; i--) {\r\n                if (_dataList[i]['children'].length === 0) {\r\n                    _dataList.splice(i, 1);\r\n                }\r\n            }\r\n            return _dataList;\r\n        },\r\n        // 状态组控制 【自然人】| 【企业/机构】|【其他】\r\n        filterControl(_value = 1) {\r\n            // 处理方式 @todo 为了复用性，不要把代码进行合并， 以维护性为主\r\n            // 1. 被查询对象， 按情况分类处理！\r\n            switch (_value) {\r\n                // 1. 自然人\r\n                case NUM_1:\r\n                    // 处理 自然人 的情况\r\n                    this.filterControlGroup1ShowKeys(this.filterYwActiveItem.childCategory);\r\n                    break;\r\n                // 2. 企业/机构\r\n                case NUM_2:\r\n                    // 1. 处理 企业/机构 的情况\r\n                    this.filterControlGroup2ShowKeys(this.filterYwActiveItem.childCategory);\r\n                    break;\r\n                // 3. 其他（非自然人和企业/机构，都叫其他）// @ TODO 因为目前其他模块中的查询类型不是唯一的03\r\n                case NUM_3:\r\n                    // 1. 处理 其他的 的情况\r\n                    // this.filterControlGroup3ShowKeys(this.filterYwActiveItem.childCategory);\r\n                    break;\r\n                // 4. 其他\r\n                default:\r\n                    // 1. 处理 其他的 的情况\r\n                    this.filterControlGroup3ShowKeys(this.filterYwActiveItem.childCategory);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        // 当前显示的keys\r\n        filterSetShowKeys(showKeysObject) {\r\n            // this.filterKeys = keys;\r\n            this.filterShowKeysObject = showKeysObject;\r\n        },\r\n\r\n        //  组合1的状态控制 【自然人】\r\n        filterControlGroup1ShowKeys(_value) {\r\n            // 自然人 总是显示的字段 keys\r\n            // 新数据 所有的11 个行业\r\n            // [中国铁路总公司|银行业金融机构|公安部|工信部|中国航空信息有限公司|中国人民银行\r\n            // 自然资源部|证监会|市场监管总局|国家税务总局  |银保监会]\r\n            // const _alwaysShowKeys = ['002001', '001001', '004001', '003001', '002002', '001002',\r\n            //     '004002', '001003', '004003', '004004', '001004'];\r\n            // 老数据 12个行业\r\n            // 查询单位测试|银行业金融机构|公安部|电信运营商|自然资源部|中国人民银行|国家税务总局|市场监管总局|银保监会|证监会|国铁集团|中国航空\r\n            // const _alwaysShowKeys = ['150000000000', '03', '01', '08', '02', '04', '14', '05', '10', '06', '07', '09'];\r\n            // 显示的数据字段\r\n            let _showKeysObject = {};\r\n            // 证件类型\r\n            switch (parseInt(_value, 10)) {\r\n                // 1. 居民身份证\r\n                // [银行业金融机构|工信部|自然资源部|中国人民银行|国家税务总局|银保监会|\r\n                // 证监会|中国铁路总公司|中国航空信息有限公司|市场监管总局|公安部]\r\n                case NUM_10:\r\n                    _showKeysObject = {\r\n                        // 银行业金融机构\r\n                        // '001001': ['账户信息', '交易流水', '金融理财'],\r\n                        '001001': ['001001001', '001001002', '001001003'],\r\n                        // 工信部\r\n                        // '003001': ['登记信息', '话单信息'],\r\n                        '003001': ['003001001', '003001002'],\r\n                        // 自然资源部\r\n                        // '004002': ['不动产全国总库', '不动产精准查询'],\r\n                        '004002': ['004002001', '004002002'],\r\n                        // 中国人民银行\r\n                        // '001002': ['银行账户', '反洗钱', '征信'],\r\n                        '001002': ['001002001', '001002002', '001002006'],\r\n                        // 国家税务局\r\n                        // '004004': ['纳税人登记信息', '纳税信息', '专项附加信息'],\r\n                        '004004': ['004004001', '004004002', '004004004'],\r\n                        // 银保监会\r\n                        // '001004': ['理财产品', '信托产品', '保险产品'],\r\n                        '001004': ['001004001', '001004002', '001004003'],\r\n                        // 证监会\r\n                        // '001003': ['证券账户', '证券持有', '证券持有变动'],\r\n                        '001003': ['001003001', '001003002', '001003003'],\r\n                        // 中国铁路总公司\r\n                        // '002001': ['铁路客票', '用户注册', '同订单同行人'],\r\n                        '002001': ['002001001', '002001002', '002001003'],\r\n                        // 中国航空信息有限公司\r\n                        // '002002': ['航班进出港', '航班同行人信息'],\r\n                        '002002': ['002002001', '002002002'],\r\n                        // 市场监管总局\r\n                        // '004003': ['企业登记'],\r\n                        '004003': ['004003001'],\r\n                        // 公安部\r\n                        '004005': ['004005001', '004005002', '004005003', '004005004', '004005005', '004005006', '004005007', '004005008', '004005009', '004005010', '004005011', '004005012', '004005013', '004005014', '004005015'],\r\n                        // 国家邮政局\r\n                        // '004006': ['快递信息'],\r\n                        '004006': ['004006001']\r\n                    };\r\n                    break;\r\n                // 2. 往来台湾通行证\r\n                // [中国铁路总公司|银行业金融机构|工信部|中国航空信息有限公司|中国人民银行\r\n                // 自然资源部|证监会|国家税务总局  |银保监会]\r\n                case NUM_30:\r\n                    _showKeysObject = {\r\n                        // 中国铁路总公司\r\n                        // '002001': ['铁路客票', '用户注册', '同订单同行人'],\r\n                        '002001': ['002001001', '002001002', '002001003'],\r\n                        // 银行业金融机构\r\n                        '001001': ['001001001', '001001002', '001001003'],\r\n                        // 工信部\r\n                        '003001': ['003001001', '003001002'],\r\n                        // 中国航空信息有限公司\r\n                        '002002': ['002002001', '002002002'],\r\n                        // 中国人民银行\r\n                        '001002': ['001002001', '001002002', '001002006'],\r\n                        // 自然资源部\r\n                        '004002': ['004002001', '004002002'],\r\n                        // 证监会\r\n                        '001003': ['001003001', '001003002', '001003003'],\r\n                        // 国家税务局\r\n                        '004004': ['004004001', '004004002', '004004004'],\r\n                        // 银保监会\r\n                        '001004': ['001004001', '001004002', '001004003']\r\n                    };\r\n                    break;\r\n                // 3. 往来港澳通行证\r\n                // [中国铁路总公司|银行业金融机构|工信部|中国航空信息有限公司|中国人民银行\r\n                // 自然资源部|证监会|国家税务总局|银保监会]\r\n                case NUM_20:\r\n                    _showKeysObject = {\r\n                        // 中国铁路总公司\r\n                        '002001': ['002001001', '002001002', '002001003'],\r\n                        // 银行业金融机构\r\n                        '001001': ['001001001', '001001002', '001001003'],\r\n                        // 工信部\r\n                        '003001': ['003001001', '003001002'],\r\n                        // 中国航空信息有限公司\r\n                        '002002': ['002002001', '002002002'],\r\n                        // 中国人民银行\r\n                        '001002': ['001002001', '001002002', '001002006'],\r\n                        // 自然资源部\r\n                        '004002': ['004002001', '004002002'],\r\n                        // 证监会\r\n                        '001003': ['001003001', '001003002', '001003003'],\r\n                        // 国家税务总局\r\n                        '004004': ['004004001', '004004002', '004004004'],\r\n                        // 银保监会\r\n                        '001004': ['001004001', '001004002', '001004003']\r\n                    };\r\n                    break;\r\n                // 4. 中国公民护照\r\n                // [中国铁路总公司|银行业金融机构|工信部|中国航空信息有限公司|中国人民银行\r\n                // 自然资源部|证监会|国家税务总局|银保监会]\r\n                case NUM_40:\r\n                    _showKeysObject = {\r\n                        // 中国铁路总公司\r\n                        '002001': ['002001001', '002001002', '002001003'],\r\n                        // 银行业金融机构\r\n                        '001001': ['001001001', '001001002', '001001003'],\r\n                        // 工信部\r\n                        '003001': ['003001001', '003001002'],\r\n                        // 中国航空信息有限公司\r\n                        '002002': ['002002001', '002002002'],\r\n                        // 中国人民银行\r\n                        '001002': ['001002001', '001002002', '001002006'],\r\n                        // 自然资源部\r\n                        '004002': ['004002001', '004002002'],\r\n                        // 证监会\r\n                        '001003': ['001003001', '001003002', '001003003'],\r\n                        // 国家税务总局\r\n                        '004004': ['004004001', '004004002', '004004004'],\r\n                        // 银保监会\r\n                        '001004': ['001004001', '001004002', '001004003']\r\n                    };\r\n                    break;\r\n                // 5. 外国公民护照\r\n                // [银行业金融机构|工信部|国家税务总局|银保监会|中国航空信息有限公司]\r\n                case NUM_41:\r\n                    _showKeysObject = {\r\n                        // 银行业金融机构\r\n                        '001001': ['001001001', '001001002', '001001003'],\r\n                        // 工信部\r\n                        '003001': ['003001001', '003001002'],\r\n                        // 国家税务总局\r\n                        '004004': ['004004001', '004004002', '004004004'],\r\n                        // 银保监会\r\n                        '001004': ['001004001'],\r\n                        // 中国航空信息有限公司\r\n                        '002002': ['002002001', '002002002']\r\n                    };\r\n                    break;\r\n                // 6. 其他证件\r\n                // [自然资源部|中国人民银行|银保监会|中国航空信息有限公司]\r\n                case NUM_99:\r\n                    _showKeysObject = {\r\n                        // 自然资源部\r\n                        '004002': ['004002001', '004002002'],\r\n                        // 中国人民银行: ['银行账户'],\r\n                        '001002': ['001002001'],\r\n                        // 银保监会\r\n                        // '001004': ['理财产品', '信托产品'],\r\n                        '001004': ['001004001', '001004002'],\r\n                        // 中国航空信息有限公司\r\n                        '002002': ['002002001', '002002002']\r\n                    };\r\n                    break;\r\n                // 7. 户口簿\r\n                // [银行业金融机构|自然资源部|中国人民银行|工信部|银保监会|证监会|中国铁路总公司|中国航空信息有限公司]\r\n                case NUM_14:\r\n                    _showKeysObject = {\r\n                        // 银行业金融机构\r\n                        '001001': ['001001001', '001001002', '001001003'],\r\n                        // 自然资源部\r\n                        '004002': ['004002001', '004002002'],\r\n                        // 中国人民银行: ['银行账户','征信信息'],\r\n                        '001002': ['001002001', '001002006'],\r\n                        // 工信部\r\n                        '003001': ['003001001', '003001002'],\r\n                        // 银保监会\r\n                        // '001004': ['理财产品', '信托产品', '保险产品'],\r\n                        '001004': ['001004001', '001004002', '001004003'],\r\n                        // 证监会\r\n                        '001003': ['001003001', '001003002', '001003003'],\r\n                        // 中国铁路总公司\r\n                        '002001': ['002001001', '002001002', '002001003'],\r\n                        // 中国航空信息有限公司\r\n                        '002002': ['002002001', '002002002']\r\n                    };\r\n                    break;\r\n                // 7. 军人军官证\r\n                case NUM_50:\r\n                    _showKeysObject = {\r\n                        // 银行业金融机构\r\n                        '001001': ['001001001', '001001002', '001001003'],\r\n                        // 自然资源部\r\n                        '004002': ['004002001', '004002002'],\r\n                        // 中国人民银行: ['银行账户','征信信息'],\r\n                        '001002': ['001002001', '001002006'],\r\n                        // 银保监会\r\n                        // '001004': ['理财产品', '信托产品', '保险产品'],\r\n                        '001004': ['001004001', '001004002', '001004003'],\r\n                        // 证监会\r\n                        '001003': ['001003001', '001003002', '001003003'],\r\n                        // 中国铁路总公司\r\n                        '002001': ['002001001', '002001002', '002001003'],\r\n                        // 中国航空信息有限公司\r\n                        '002002': ['002002001', '002002002']\r\n                    };\r\n                    break;\r\n                // 8. 军人士兵证\r\n                case NUM_51:\r\n                    _showKeysObject = {\r\n                        // 银行业金融机构\r\n                        '001001': ['001001001', '001001002', '001001003'],\r\n                        // 自然资源部\r\n                        '004002': ['004002001', '004002002'],\r\n                        // 中国人民银行: ['银行账户','征信信息'],\r\n                        '001002': ['001002001', '001002006'],\r\n                        // 银保监会\r\n                        // '001004': ['理财产品', '信托产品', '保险产品'],\r\n                        '001004': ['001004001', '001004002', '001004003'],\r\n                        // 中国铁路总公司\r\n                        '002001': ['002001001', '002001002', '002001003'],\r\n                        // 中国航空信息有限公司\r\n                        '002002': ['002002001', '002002002']\r\n                    };\r\n                    break;\r\n                // 9. 武警警官证\r\n                case NUM_52:\r\n                    _showKeysObject = {\r\n                        // 银行业金融机构\r\n                        '001001': ['001001001', '001001002', '001001003'],\r\n                        // 自然资源部\r\n                        '004002': ['004002001', '004002002'],\r\n                        // 中国人民银行: ['银行账户','征信信息'],\r\n                        '001002': ['001002001', '001002006'],\r\n                        // 银保监会\r\n                        // '001004': ['理财产品', '信托产品', '保险产品'],\r\n                        '001004': ['001004001', '001004002', '001004003'],\r\n                        // 证监会\r\n                        '001003': ['001003001', '001003002', '001003003'],\r\n                        // 中国铁路总公司\r\n                        '002001': ['002001001', '002001002', '002001003'],\r\n                        // 中国航空信息有限公司\r\n                        '002002': ['002002001', '002002002']\r\n                    };\r\n                    break;\r\n                // 10. 武警士兵证\r\n                case NUM_53:\r\n                    _showKeysObject = {\r\n                        // 银行业金融机构\r\n                        '001001': ['001001001', '001001002', '001001003'],\r\n                        // 自然资源部\r\n                        '004002': ['004002001', '004002002'],\r\n                        // 银保监会\r\n                        // '001004': [ '保险产品'],\r\n                        '001004': ['001004003'],\r\n                        // 中国航空信息有限公司\r\n                        '002002': ['002002001', '002002002']\r\n                    };\r\n                    break;\r\n                // 11. 香港居民身份证\r\n                case NUM_11:\r\n                    _showKeysObject = {\r\n                        // 自然资源部\r\n                        '004002': ['004002001', '004002002'],\r\n                        // 中国人民银行: ['征信信息'],\r\n                        '001002': ['001002006'],\r\n                        // 银保监会\r\n                        // '001004': [ '保险产品'],\r\n                        '001004': ['001004003'],\r\n                        // 证监会\r\n                        '001003': ['001003001', '001003002', '001003003'],\r\n                        // 中国航空信息有限公司\r\n                        '002002': ['002002001', '002002002']\r\n                    };\r\n                    break;\r\n                // 12. 澳门居民身份证\r\n                case NUM_12:\r\n                    _showKeysObject = {\r\n                        // 自然资源部\r\n                        '004002': ['004002001', '004002002'],\r\n                        // 中国人民银行: ['征信信息'],\r\n                        '001002': ['001002006'],\r\n                        // 银保监会\r\n                        // '001004': [ '保险产品'],\r\n                        '001004': ['001004003'],\r\n                        // 证监会\r\n                        '001003': ['001003001', '001003002', '001003003'],\r\n                        // 中国航空信息有限公司\r\n                        '002002': ['002002001', '002002002']\r\n                    };\r\n                    break;\r\n                // 13. 台湾居民身份证\r\n                case NUM_13:\r\n                    _showKeysObject = {\r\n                        // 自然资源部\r\n                        '004002': ['004002001', '004002002'],\r\n                        // 中国人民银行: ['征信信息'],\r\n                        '001002': ['001002006'],\r\n                        // 国家税务总局\r\n                        '004004': ['004004001', '004004002', '004004004'],\r\n                        // 中国航空信息有限公司\r\n                        '002002': ['002002001', '002002002']\r\n                    };\r\n                    break;\r\n                // 14. 出生医学证明\r\n                case NUM_60:\r\n                    _showKeysObject = {\r\n                        // 银保监会\r\n                        // '001004': [ '保险产品'],\r\n                        '001004': ['001004003']\r\n                    };\r\n                    break;\r\n                // 15. 往来港澳通行证\r\n                case NUM_21:\r\n                    _showKeysObject = {\r\n                        // 中国人民银行: ['银行账户'],\r\n                        '001002': ['001002001'],\r\n                        // 银保监会\r\n                        // '001004': [ '保险产品'],\r\n                        '001004': ['001004003'],\r\n                        // 中国铁路总公司\r\n                        '002001': ['002001001', '002001002', '002001003'],\r\n                        // 中国航空信息有限公司\r\n                        '002002': ['002002001', '002002002']\r\n                    };\r\n                    break;\r\n                // 16. 往来台湾通行证\r\n                case NUM_31:\r\n                    _showKeysObject = {\r\n                        // 中国人民银行: ['银行账户'],\r\n                        '001002': ['001002001'],\r\n                        // 银保监会\r\n                        // '001004': [ '保险产品'],\r\n                        '001004': ['001004003'],\r\n                        // 中国铁路总公司\r\n                        '002001': ['002001001', '002001002', '002001003'],\r\n                        // 中国航空信息有限公司\r\n                        '002002': ['002002001', '002002002']\r\n                    };\r\n                    break;\r\n                // 17. 外国人永久居留证\r\n                case NUM_70:\r\n                    _showKeysObject = {\r\n                        // 国家税务总局\r\n                        '004004': ['004004001', '004004002', '004004004'],\r\n                        // 银保监会\r\n                        // '001004': ['理财产品', '保险产品'],\r\n                        '001004': ['001004001', '001004003'],\r\n                        // 证监会\r\n                        '001003': ['001003001', '001003002', '001003003']\r\n                    };\r\n                    break;\r\n                // 18. 社会保障号\r\n                case NUM_80:\r\n                    _showKeysObject = {\r\n                        // 证监会\r\n                        '001003': ['001003001', '001003002', '001003003']\r\n                    };\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            // 2.设置当前显示的keys\r\n            // this.filterSetShowKeys(_showKeys.concat(_alwaysShowKeys));\r\n            this.filterSetShowKeys(_showKeysObject);\r\n        },\r\n\r\n        // 组合2的状态控制 【企业/机构】\r\n        filterControlGroup2ShowKeys(_value) {\r\n            // 企业/机构 总是显示的字段 keys\r\n\r\n            // 新数据 所有的11 个行业\r\n            // [中国铁路总公司|银行业金融机构|公安部|工信部|中国航空信息有限公司|中国人民银行\r\n            // 自然资源部|证监会|市场监管总局|国家税务总局  |银保监会]\r\n            // const _alwaysShowKeys = ['002001', '001001', '004001', '003001', '002002', '001002',\r\n            //    '004002', '001003', '004003', '004004', '001004'];\r\n            // 显示的数据字段\r\n            let _showKeysObject = {};\r\n            // 证照类型\r\n            switch (parseInt(_value, 10)) {\r\n                // 1. 统一社会信用代码证\r\n                // [银行业金融机构|工信部|中国人民银行\r\n                // 自然资源部|证监会|市场监管总局|国家税务总局|银保监会]\r\n                case NUM_1:\r\n                    _showKeysObject = {\r\n                        // 银行业金融机构\r\n                        '001001': ['001001001', '001001002', '001001003'],\r\n                        // 工信部\r\n                        '003001': ['003001001', '003001002'],\r\n                        // 中国人民银行\r\n                        '001002': ['001002001', '001002002', '001002006'],\r\n                        // 自然资源部\r\n                        '004002': ['004002001', '004002002'],\r\n                        // 证监会\r\n                        '001003': ['001003001', '001003002', '001003003'],\r\n                        // 市场监管总局\r\n                        '004003': ['004003001', '004003002'],\r\n                        // 国家税务总局\r\n                        '004004': ['004004001', '004004002', '004004003'],\r\n                        // 银保监会\r\n                        '001004': ['001004001', '001004002', '001004003']\r\n                    };\r\n                    break;\r\n                // 2. 组织机构代码\r\n                // [银行业金融机构|工信部|中国人民银行\r\n                // 自然资源部|证监会|市场监管总局|国家税务总局|银保监会]\r\n                case NUM_2:\r\n                    _showKeysObject = {\r\n                        // 银行业金融机构\r\n                        '001001': ['001001001', '001001002', '001001003'],\r\n                        // 工信部\r\n                        '003001': ['003001001', '003001002'],\r\n                        // 中国人民银行\r\n                        '001002': ['001002001', '001002002', '001002006'],\r\n                        // 自然资源部\r\n                        '004002': ['004002001', '004002002'],\r\n                        // 证监会\r\n                        '001003': ['001003001', '001003002', '001003003'],\r\n                        // 市场监管总局\r\n                        '004003': ['004003002'],\r\n                        // 国家税务局\r\n                        '004004': ['004004001', '004004002', '004004003'],\r\n                        // 银保监会\r\n                        '001004': ['001004001', '001004002', '001004003']\r\n                    };\r\n                    break;\r\n                // 3. 纳税人识别号\r\n                // [国家税务总局]\r\n                case NUM_3:\r\n                    _showKeysObject = {\r\n                        // 国家税务局\r\n                        '004004': ['004004003']\r\n                    };\r\n                    break;\r\n                case NUM_4:\r\n                    _showKeysObject = {\r\n                        // 中国人民银行\r\n                        '001002': ['001002001', '001002002']\r\n                    };\r\n                    break;\r\n                // 营业执照（工商注册号）\r\n                case NUM_5:\r\n                    _showKeysObject = {\r\n                        // 银行业金融机构\r\n                        '001001': ['001001001', '001001002', '001001003'],\r\n                        // 自然资源部\r\n                        '004002': ['004002001', '004002002'],\r\n                        // 国家税务局\r\n                        '004004': ['004004001', '004004002', '004004004'],\r\n                        // 银保监会\r\n                        // '001004': ['理财产品', '信托产品', '保险产品'],\r\n                        '001004': ['001004001', '001004002', '001004003'],\r\n                        // 证监会\r\n                        // '001003': ['证券账户', '证券持有', '证券持有变动'],\r\n                        '001003': ['001003001', '001003002', '001003003']\r\n                    };\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            // 2.设置当前显示的keys\r\n            // this.filterSetShowKeys(_showKeys.concat(_alwaysShowKeys));\r\n            this.filterSetShowKeys(_showKeysObject);\r\n        },\r\n\r\n        // 组合3的状态控制 【其他】\r\n        filterControlGroup3ShowKeys(_value) {\r\n            // 非【自然和 企业/机构】的都叫其他， 【其他】总是显示的字段 keys\r\n            // 新数据 所有的11 个行业\r\n            // [中国铁路总公司|银行业金融机构|公安部|工信部|中国航空信息有限公司|中国人民银行\r\n            // 自然资源部|证监会|市场监管总局|国家税务总局|银保监会]\r\n            // const _alwaysShowKeys = ['002001', '001001', '004001', '003001', '002002', '001002',\r\n            //    '004002', '001003', '004003', '004004', '001004'];\r\n            // const _alwaysShowKeys = [];\r\n            // 显示的数据字段\r\n            // let _showKeys = [];\r\n            let _showKeysObject = {};\r\n            // 查询类型\r\n            switch (parseInt(_value, 10)) {\r\n                // 1. 银行账/卡号\r\n                // [银行业金融机构|中国人民银行]\r\n                case NUM_4:\r\n                    // _showKeys = ['001001', '001002'];\r\n                    _showKeysObject = {\r\n                        // 银行业金融机构\r\n                        '001001': ['001001001', '001001002', '001001003'],\r\n                        // 中国人民银行\r\n                        '001002': ['001002001', '001002003', '001002004']\r\n                    };\r\n                    break;\r\n                // 2. 手机号\r\n                // [银行业金融机构|工信部]\r\n                case NUM_5:\r\n                    _showKeysObject = {\r\n                        // 银行业金融机构\r\n                        '001001': ['001001001'],\r\n                        // 工信部\r\n                        '003001': ['003001001', '003001002'],\r\n                        // 国家邮政局\r\n                        '004006': ['004006001']\r\n                    };\r\n                    break;\r\n                // 3. 信托产品编码\r\n                // [银保监会]\r\n                case NUM_6:\r\n                    _showKeysObject = {\r\n                        // 银保监会\r\n                        '001004': ['001004002']\r\n                    };\r\n                    break;\r\n                // 4. 理财产品编码\r\n                // [银保监会]\r\n                case NUM_7:\r\n                    _showKeysObject = {\r\n                        // 银保监会\r\n                        '001004': ['001004001']\r\n                    };\r\n                    break;\r\n                // 5. 保险保单号\r\n                // [银保监会]\r\n                case NUM_8:\r\n                    _showKeysObject = {\r\n                        // 银保监会\r\n                        '001004': ['001004003']\r\n                    };\r\n                    break;\r\n                // 6. 商户代码\r\n                // [中国人民银行]\r\n                case NUM_9:\r\n                    _showKeysObject = {\r\n                        // 中国人民银行\r\n                        '001002': ['001002004', '001002005']\r\n                    };\r\n                    break;\r\n                // 7. 商户订单号\r\n                // [中国人民银行]\r\n                case NUM_10:\r\n                    _showKeysObject = {\r\n                        // 中国人民银行\r\n                        '001002': ['001002004']\r\n                    };\r\n                    break;\r\n                // 8. 签购单信息\r\n                // [中国人民银行]\r\n                case NUM_11:\r\n                    _showKeysObject = {\r\n                        // 中国人民银行\r\n                        '001002': ['001002004']\r\n                    };\r\n                    break;\r\n                // 快递单号\r\n                // [国家邮政局]\r\n                case NUM_12:\r\n                    _showKeysObject = {\r\n                        // 国家邮政局\r\n                        '004006': ['004006001']\r\n                    };\r\n                    break;\r\n                // 9. 车牌号\r\n                // case NUM_3:\r\n                //     _showKeys = [];\r\n                //     _showKeysObject = {};\r\n                //     break;\r\n                default:\r\n                    break;\r\n            }\r\n            // 2.设置当前显示的keys\r\n            // this.filterSetShowKeys(_showKeys.concat(_alwaysShowKeys));\r\n            this.filterSetShowKeys(_showKeysObject);\r\n        }\r\n    }\r\n};\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","// 配置文件\r\n// import mockDataList from './mock/dataList.js';\r\n// 导航列表\r\nimport navList from './extend/navList.js';\r\n// 缓存\r\nimport cache from './extend/cache.js';\r\n// 复选\r\nimport multiple from './extend/multiple.js';\r\n// 数据过滤处理\r\nimport filterDataList from './extend/filterDataList.js';\r\n// 导出模块\r\nexport default {\r\n    // 组件名， module 下的a组件， config.componentAcPrefix = ac 为 公用的业务组件\r\n    mixins: [navList, cache, multiple, filterDataList],\r\n    props: {\r\n        // 业务激活条目，用于过滤数据\r\n        ywActiveItem: {\r\n            type: Object,\r\n            default() {\r\n                return {\r\n                    // 自然人, 企业、机构， 其他\r\n                    category: 1,\r\n                    // 子类型， 证件类型|证照类型| 查询类型 中选的值\r\n                    childCategory: 1\r\n                };\r\n            }\r\n        },\r\n        // 数据节点的父id\r\n        dpKey: {\r\n            type: String,\r\n            default: 'parentId'\r\n        },\r\n        // 数据节点的id\r\n        dKey: {\r\n            type: String,\r\n            default: 'id'\r\n        },\r\n        // 数据节点的名称\r\n        dName: {\r\n            type: String,\r\n            default: 'name'\r\n        },\r\n        // 数据节点的子节点\r\n        dChildren: {\r\n            type: String,\r\n            default: 'children'\r\n        },\r\n        // 左侧的数据列表， 这里是全量的数据\r\n        dataList: {\r\n            type: Array,\r\n            default() {\r\n                // return mockDataList;\r\n                return [];\r\n            }\r\n        },\r\n        // 默认选中\r\n        checkedDataList: {type: Array},\r\n        // 点击前置处理函数，返回boolean值，\r\n        // 必须返回true才能执行后续点击事件\r\n        beforeClickHander: {\r\n            type: Function,\r\n            default(item, vm) { // eslint-disable-line\r\n                // 必须返回true 才能点击\r\n                return true;\r\n            }\r\n        },\r\n        // 是否可以选中，返回boolean值\r\n        canSelectHandler: {\r\n            type: Function,\r\n            default(item) {\r\n                // 如果存在子集，那么该节点不可点击\r\n                return !(Array.isArray(item.children) && item.children.length);\r\n            }\r\n        },\r\n        // 是否有扩展箭头，返回boolean值\r\n        hasExtendArrowHandler: {\r\n            type: Function,\r\n            default(item) {\r\n                // 非一级节点\r\n                const _falg1 = !(Array.isArray(item.children) && item.children.length > 0);\r\n                // 非以下 id， @todo 20201231 业务相关\r\n                //  银保监会  001004 => 理财产品信息: 001004005\r\n                //  银保监会  001004 => 信托产品信息: 001004002\r\n                //  银保监会  001004 => 保险产品信息: 001004003\r\n\r\n                //  市场监管总局 004003  => 企业登记: 004003001\r\n                //  市场监管总局 004003  => 统一社会信用代码: 004003002\r\n\r\n                //  国家税务总局 004004 => 专项附加扣除信息: 004004004\r\n                //  国家税务总局 => 纳税信息: 004004002\r\n                //  国家税务总局 => 纳税人登记信息: 004004005\r\n                //  国家税务总局 => 增值税专用发票信息: 004004003\r\n\r\n                //  证监会 001003 => 证券持有变动: 001003003 （有时间选择）\r\n                //  证监会 => 证券持有: 001003002 (有时间选择)\r\n                //  证监会 => 证券账户资料: 001003001\r\n                //  中国人民银行 => 反洗钱数据: 001002002 (有时间选择)\r\n                const _falg2 = !(/^(001004001|001004002|001004003|004003001|004003002|004004004|004004002|004004001|004004003|001003001)$/igm).test(item.id);\r\n                //  中国铁路总公司 => 铁路同行人信息: 002001003\r\n                //  中国铁路总公司 => 铁路注册信息: 002001002\r\n                //  中国铁路总公司 002001 => 铁路客票信息: 002001001\r\n                const _falg3 = !(/^(002001)$/igm).test(item.parentId);\r\n                //  公安部 => 交通违法处理信息: 004005010\r\n                //  公安部 => 驾驶证信息: 004005009\r\n                //  公安部 => 机动车信息: 004005008\r\n                //  公安部 => 在逃人员撤销信息: 004005007\r\n                //  公安部 => 在逃人员登记信息: 004005006\r\n                //  公安部 => 在逃人员登记信息: 004005006\r\n                //  公安部 => 违法犯罪人员信息: 004005005\r\n                //  公安部 => 违法犯罪人员信息: 004005005\r\n                //  公安部 => 口岸出入境记录信息: 004005004\r\n                //  公安部 => 中国公民出国（境）证件签发信息: 004005003\r\n                //  公安部 => 旅馆住宿人员信息: 004005002\r\n                //  公安部 004005 => 人口信息和户籍信息: 004005001\r\n                const _falg4 = !(/^(004005)$/igm).test(item.parentId);\r\n                // 中国人民银行  001002 => 征信信息: 001002006\r\n                // 中国人民银行  => 银行账户: 001002001\r\n                const _falg5 = !(/^(001002)$/igm).test(item.parentId) || (/^(001002002)$/igm).test(item.id);\r\n\r\n                // 中国航空信息有限公司  002002 => 航班通行人信息: 002002002\r\n                // 中国航空信息有限公司   => 航班进出港信息: 002002001\r\n                const _falg6 = !(/^(002002002)$/igm).test(item.id);\r\n\r\n                // 自然资源部  004002 => 不动产（全国库）: 004002001\r\n                // 自然资源部   => 不动产精准查询:004002002   @fixme   缺少数据 20201231【已增加2021/1/13这个有数据】\r\n                const _falg7 = !(/^(004002001)$/igm).test(item.id);\r\n\r\n                // 工信部  003001 => 话单信息: 003001002   @fixme   这里需要处理， 是【通信】\r\n                // 工信部  => 登记信息: 003001001\r\n                // const _falg7 = !(/^(004002001)$/igm).test(item.id);\r\n\r\n                //  国家邮政局 004006 => 快递信息: 004006001\r\n                const _falg8 = !(/^(004006)$/igm).test(item.parentId);\r\n\r\n                return _falg1 && _falg2 && _falg3 && _falg4 && _falg5 && _falg6 && _falg7 && _falg8;\r\n            }\r\n        },\r\n        // 是否是【复选框】类型\r\n        addMultipleProperty: {\r\n            type: Function,\r\n            // dataItem 当前的数据条目\r\n            default(dataItem, dataItemP) { // eslint-disable-line\r\n                // @todo 央地协查业务逻辑\r\n                return dataItem.children && dataItem.children.length === 0;\r\n            }\r\n        },\r\n        // 复选框的前置处理函数，返回boolean值\r\n        checkedHandler: {\r\n            type: Function,\r\n            // dataItem 当前的数据条目\r\n            default(dataItem, dataItemP, vm) { // eslint-disable-line\r\n                // @todo 央地协查业务逻辑\r\n                const flag = true;\r\n                // 3.2. 根据选中条目的id，判断右侧显示什么列表\r\n                switch (dataItem.id) {\r\n                    // 【纳税人登记信息】 004004001\r\n                    case '004004001':// eslint-disable-line\r\n                        // 1.【国家税务总局】\r\n                        // 暂时不处理\r\n                        // 获取 【增值税专用发票信息】=> 004004003  数据条目\r\n                        // const targetItem = vm.cGetCache('004004003');\r\n                        // // 如果 【增值税专用发票信息】 选中，那么 【纳税人登记信息】 不允许取消\r\n                        // if (targetItem) {\r\n                        //     flag = !targetItem.checked;\r\n                        // }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                return flag;\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        // 初始化的方法\r\n        this.init();\r\n    },\r\n    mounted() {\r\n        // 触发ready事件\r\n        this.$emit('ready', this);\r\n    },\r\n    methods: {\r\n        // 初始化的方法\r\n        init() {\r\n            // 1. 初始化当前选中的值\r\n            this.mInitCheckedData();\r\n            // 2. 更新数据列表\r\n            this.update(this.dataList, this.ywActiveItem, () => {\r\n                // 3. 当前选中的值需要设置到树里\r\n                if (Array.isArray(this.checkedDataList) && this.checkedDataList.length) {\r\n                    // 初始化默认选中的值\r\n                    this.mWatchValueHandle(this.checkedDataList);\r\n                }\r\n            });\r\n        },\r\n        // 滚动条\r\n        readyScrollbar(scrollbar) {\r\n            // 滚动条\r\n            this.jsScrollbar = scrollbar;\r\n        },\r\n        // 重置左侧树数据\r\n        resetAsideTree() {\r\n            // 重置滚动条位置\r\n            this.jsScrollbar.update(0, 0, null, false);\r\n        },\r\n        // 更新数据列表\r\n        update(dataList, ywActiveItem, callback) {\r\n            // 1. 重置当前选中数据\r\n            this.mResetCheckedData();\r\n            // 2. 重置激活节点\r\n            this.setActiveItem({});\r\n            // 3.设置当前的激活条目\r\n            this.setFilterYwActiveItem(ywActiveItem || this.ywActiveItem);\r\n            // 4. 初始化导航数据列表\r\n            this.initNavList(dataList);\r\n            // 5.  如果存在回调函数，那么执行回调函数\r\n            if (typeof callback === 'function') {\r\n                callback();\r\n            }\r\n        },\r\n        // 判断是否出现...\r\n        adjustEllipsis(item) {\r\n            // 中国公民出国（境）证件签发信息 004005003\r\n            // 中国航空信息有限公司 002002\r\n            return (/^(004005003)$/).test(item[this.dKey]);\r\n        }\r\n    }\r\n};\r\n\r\n","/**\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @createTime:2020-12-26,\r\n * @updateTime:2020-12-26\r\n * @copyright thunisoft fd\r\n * @description  *  [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n *  [jsdoc-vuejs]{@link  http://npm.taobao.org/package/jsdoc-vuejs}  -\r\n *  [个人博客]{@link  http://www.wuweigang.com}\r\n *  【模块】：导航列表\r\n */\r\nimport toggle from './toggle.js';\r\n//  导出模块\r\nexport default {\r\n    // 混入\r\n    mixins: [toggle],\r\n    data() {\r\n        return {\r\n            // 当前的导航列表\r\n            currentNavList: [],\r\n            // 当前导航激活的条目\r\n            activeItem: {}\r\n        };\r\n    },\r\n    methods: {\r\n        // 设置当前的导航列表\r\n        setCurrentNavList(dataList) {\r\n            this.currentNavList = dataList;\r\n            if (this.currentNavList.length === 0) {\r\n                this.globalBus.$emit('global-spb-lefttree-cxx', true);\r\n            } else {\r\n                this.globalBus.$emit('global-spb-lefttree-cxx', false);\r\n            }\r\n        },\r\n        // 初始化导航列表\r\n        initNavList(dataList) {\r\n            // 优先过滤数据，@todo 审批表业务\r\n            const _dataList = this.filterDataList(dataList);\r\n            // 循环数据条目\r\n            this.transformDataList(_dataList);\r\n            // 设置当前的内容数据列表\r\n            this.setCurrentNavList(_dataList);\r\n        },\r\n        // 点击导航条目\r\n        clickItem(item, pItem) {\r\n            // 点击前置处理函数\r\n            if (this.beforeClickHander(item, this)) {\r\n                // 1.可以点击，并且不是禁用的节点\r\n                if (this.canSelectHandler(item) && !item.disabled) {\r\n                    // 激活节点\r\n                    this.setActiveItem(item);\r\n                }\r\n                // 2.有子节点\r\n                if (item.leaf) {\r\n                    this.eToggleHandler(item);\r\n                }\r\n                // 3.如果是复选框\r\n                if (item.multiple) {\r\n                    // 点击数据条目\r\n                    this.mClickItem(item, pItem);\r\n                }\r\n                // 4.触发事件\r\n                this.$emit('click', item);\r\n            }\r\n        },\r\n        // 设置激活条目\r\n        setActiveItem(item) {\r\n            // 当前激活的条目\r\n            this.activeItem = item;\r\n            //  触发select事件\r\n            this.$emit('select', item);\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {Array} dataList 需要循环的数据列表\r\n         * @returns {void} 无返回值\r\n         */\r\n        transformDataList(dataList) {\r\n            // 初始化缓存\r\n            this.cInitCache();\r\n            // 循环列表\r\n            dataList.forEach((item) => {\r\n                // 递归数据\r\n                this.singleRecursion(item, null);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * 递归循环函数\r\n         * @param {Object} dataItem 当前循环的数据条目\r\n         * @param {Object} dataItemP 当前循环的数据条目的父级条目\r\n         * @returns {void} 无返回值\r\n         */\r\n        singleRecursion(dataItem, dataItemP) {\r\n            // 1. 添加属性\r\n            this.dAddProperty(dataItem, dataItemP);\r\n            // 2. 判断目标子集是不是数组\r\n            if (dataItem[this.dChildren].length) {\r\n                // 循环子集\r\n                dataItem[this.dChildren].forEach((itemC) => {\r\n                    // 继续递归\r\n                    this.singleRecursion(itemC, dataItem);\r\n                });\r\n            }\r\n            //  3.添加缓存\r\n            this.cAddCache(dataItem[this.dKey], dataItem);\r\n        },\r\n        // 添加属性\r\n        dAddProperty(dataItem, dataItemP) {\r\n            // 1. children, 如果子集非数组\r\n            if (!Array.isArray(dataItem[this.dChildren])) {\r\n                dataItem[this.dChildren] = [];\r\n            }\r\n            // 2. checked 增加checked属性\r\n            dataItem.checked = false;\r\n            // 3.multiple 判断是否需要增加 multiple 属性\r\n            if (this.addMultipleProperty(dataItem, dataItemP, this)) {\r\n                // 3.1 增加激活条目属性\r\n                dataItem.multiple = true;\r\n            }\r\n            // 4. hasExtendArrow是否有右侧图标\r\n            dataItem.hasExtendArrow = this.hasExtendArrowHandler(dataItem);\r\n            // 5.leaf 是否有子节点\r\n            dataItem.leaf = dataItem[this.dChildren].length > 0;\r\n            // 6.extend 是否展开\r\n            dataItem.extend = typeof (dataItem.extend) === 'boolean' ? dataItem.extend : true;\r\n            // 7.otherProperty  其他属性, @todo 【业务】\r\n            if (dataItem.hasExtendArrow) {\r\n                // 7.1 checkedDatalist 属性， 子数据长度大于0， 才算复选选中\r\n                // 7.2 startDate 属性， 开始时间\r\n                // 7.3 endDate 属性， 结束时间\r\n                dataItem.otherProperty = {};\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * @version 20201227\r\n * @author wanghuifeng\r\n * @createTime  20201227\r\n * @updateTime  20201227\r\n * @decription  展开收起的事件处理函数\r\n */\r\nexport default {\r\n    methods: {\r\n        // 展开收起的回调函数\r\n        eToggleHandler(dataItem) {\r\n            // 1.展开收起状态切换\r\n            dataItem.extend = !dataItem.extend;\r\n            // 4.回调函数如果是展开\r\n            if (dataItem.extend) {\r\n                this.eToggleExtendHandler(dataItem);\r\n            } else {\r\n                this.eToggleCollpaseHandler(dataItem);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {object} dataItem 当前的对象条目\r\n         * @description 展开 ，触发事件extend\r\n         * @returns {*} 无返回值\r\n         */\r\n        eToggleExtendHandler(dataItem) {\r\n            // 触发事件\r\n            this.$emit('extend', dataItem);\r\n        },\r\n\r\n        /**\r\n         * @param {object} dataItem 当前的对象条目\r\n         * @description 收起 ，触发事件collapse\r\n         * @returns {*} 无返回值\r\n         */\r\n        eToggleCollpaseHandler(dataItem) {\r\n            // 触发事件\r\n            this.$emit('collapse', dataItem);\r\n        }\r\n    }\r\n};\r\n","/**\r\n * @namespace mul   multiple  多选相关的设置\r\n *\r\n */\r\n// 循环对象\r\nimport cache from './cache.js';\r\n// 导出模块\r\nexport default {\r\n    mixins: [cache],\r\n    methods: {\r\n        // 初始化选中数据\r\n        mInitCheckedData() {\r\n            // 设置当前的值\r\n            this.mSetCurrentValue([]);\r\n            // 设置当前的值对应的对象\r\n            this.mSetCheckedData([]);\r\n            // 清除缓存\r\n            this.mCheckedCache = new Map();\r\n        },\r\n        // 设置当前的值\r\n        mSetCurrentValue(value) {\r\n            this.mCurrentValue = value;\r\n        },\r\n        // 设置当前的值对应的对象\r\n        mSetCheckedData(value) {\r\n            this.mCheckedData = value;\r\n        },\r\n        // 重置当前选中数据\r\n        mResetCheckedData() {\r\n            // 1.还原值，当前选中的数据对象全部置为false\r\n            this.mCheckedCache.forEach((item) => {\r\n                if (item) {\r\n                    // 设置默认未被选中\r\n                    item.checked = false;\r\n                    // 如果存在其他属性，那么需要进行清空\r\n                    if (item.hasOwnProperty('otherProperty')) {\r\n                        item.otherProperty = {};\r\n                    }\r\n                }\r\n            });\r\n            // 2.清空选中的数据\r\n            this.mCheckedCache.clear();\r\n            // 3.设置当前的值\r\n            this.mSetCurrentValue([]);\r\n            // 4.设置当前的值对应的对象\r\n            this.mSetCheckedData([]);\r\n        },\r\n        //  监听多选的值的处理函数,  forceUpdate = true 代表强制更新\r\n        mWatchValueHandle(newValue, forceUpdate = false) {\r\n            // 前置处理函数，获取当前选中的值\r\n            const _value = this.mBeforeAdjustHandle(newValue);\r\n            // 值不一致，那么需要清除当前的值\r\n            if (_value.toString() !== this.mCurrentValue.toString() || forceUpdate) {\r\n                // 1. 重置当前选中数据\r\n                this.mResetCheckedData();\r\n                // 2. 设置当前选中的值\r\n                this.mSetCurrentValue(_value);\r\n                // 3. 设置当前选中的数据\r\n                this.mOperateCheckedData(newValue);\r\n                // 4.触发事件\r\n                this.mEmitEvent();\r\n            }\r\n        },\r\n        // 前置处理函数\r\n        mBeforeAdjustHandle(newValue) {\r\n            // 如果不存在，那么就应该初始化数据\r\n            if (!this.mCurrentValue) {\r\n                // 初始化选中数据\r\n                this.mInitCheckedData();\r\n            }\r\n            // 当前的值， 因为有可能value变动了\r\n            let _value = newValue;\r\n            // 如果值不是数组\r\n            if (!Array.isArray(_value)) {\r\n                _value = typeof _value === 'string' ? [_value] : [];\r\n            }\r\n            // 如果存在值，并且值是大于0的数组，并且数组内部的值是对象，那么需要做值的转换\r\n            if (Array.isArray(_value) && _value.length > 0 && typeof _value[0] === 'object') {\r\n                _value = _value.map((item) => item[this.dKey]);\r\n            }\r\n            return _value;\r\n        },\r\n\r\n        // 处理当前选中的数据\r\n        mOperateCheckedData(newValue) {\r\n            // const _dataList = [];\r\n            // 直接这么处理，数据量大的话性能比较差。\r\n            // this.cGetAllCache()\r\n            //     .forEach((item) => {\r\n            //         item.checked = false;\r\n            //     });\r\n            // 循环值，找出对象\r\n            newValue.forEach((item) => {\r\n                // 获取数据\r\n                const _dataItem = this.cGetCache(item[this.dKey]);\r\n                // 如果存在，那么就选中\r\n                if (_dataItem) {\r\n                    _dataItem.checked = true;\r\n                    // 如果拥有其他属性\r\n                    if (_dataItem.hasOwnProperty('otherProperty')) {\r\n                        // 存在选中数据条目，那么进行赋值\r\n                        if (item.hasOwnProperty('sjyList')) {\r\n                            _dataItem.otherProperty.sjyList = item.sjyList;\r\n                        }\r\n                        // 存在开始时间，那么进行赋值\r\n                        if (item.hasOwnProperty('startDate')) {\r\n                            _dataItem.otherProperty.startDate = item.startDate;\r\n                        }\r\n                        // 存在结束时间，那么进行赋值\r\n                        if (item.hasOwnProperty('endDate')) {\r\n                            _dataItem.otherProperty.endDate = item.endDate;\r\n                        }\r\n                        if (item.hasOwnProperty('type')) {\r\n                            _dataItem.otherProperty.type = item.type;\r\n                        }\r\n                    }\r\n                    // 添加选中数据\r\n                    this.mAddCheckedItem(_dataItem, false);\r\n                }\r\n            });\r\n        },\r\n        // 更新条目数据 @todo  有子内容的需要调用该方法，进行数据选中激活\r\n        mUpdateItemCheckedStatus(item) {\r\n            // 父级条目\r\n            const _pItem = this.cGetCache(item[this.dpKey]) || this.currentNavList;\r\n            // 1.如果选中数据大于0\r\n            if (item.checked) {\r\n                // 添加选中条目\r\n                this.mAddCheckedItem(item);\r\n            } else {\r\n                // 删除数据\r\n                this.mDeleteCheckedItem(item);\r\n            }\r\n            // 2.触发数组的更新\r\n            _pItem[this.dChildren].splice(0, 0);\r\n        },\r\n        // 点击数据条目\r\n        mClickItem(item, pItem) {\r\n            // 如果是有箭头的，不做处理\r\n            // @todo  【业务】 部分可选中，部分需要有子节点选中\r\n            if ((!item.hasExtendArrow && this.checkedHandler(item, pItem, this)) || (item.id == '002002001') || (item.id == '001002002')) {\r\n                // 选中否者不选中\r\n                item.checked = !item.checked;\r\n                // 如果是选中，那么执行添加条目的方法\r\n                if (item.checked) {\r\n                    // 添加选中条目\r\n                    this.mAddCheckedItem(item);\r\n                    // 如果是取消选中\r\n                } else {\r\n                    // 删除数据\r\n                    this.mDeleteCheckedItem(item);\r\n                }\r\n                // 触发数组的更新\r\n                pItem[this.dChildren].splice(0, 0);\r\n            }\r\n        },\r\n        // 添加选中条目, 添加成功会返回boolean值\r\n        mAddCheckedItem(item, emitEvent = true) {\r\n            // 1. 添加数据\r\n            this.mCheckedCache.set(item[this.dKey], item);\r\n            // 2.如果触发事件\r\n            if (emitEvent) {\r\n                // 触发事件\r\n                this.mEmitEvent();\r\n            }\r\n        },\r\n        // 删除选中条目\r\n        mDeleteCheckedItem(item, emitEvent = true) {\r\n            // 1.删除数据\r\n            this.mCheckedCache.delete(item[this.dKey]);\r\n            // 2.如果触发事件\r\n            if (emitEvent) {\r\n                // 触发事件\r\n                this.mEmitEvent();\r\n            }\r\n        },\r\n        // 设置当前选中的数据\r\n        mSetCurrentCheckedData() {\r\n            // 当前的值\r\n            const mCurrentValue = [];\r\n            // 当前的值对应的对象\r\n            const mCheckedData = [];\r\n            // 循环当前的Map数据列表\r\n            this.mCheckedCache.forEach((item, key) => {\r\n                // 添加到【当前的值】的数组\r\n                mCurrentValue.push(key);\r\n                // 添加到【当前的值对应的对象】的数组\r\n                mCheckedData.push(item);\r\n            });\r\n            // 1.当前的值\r\n            this.mSetCurrentValue(mCurrentValue);\r\n            // 2.当前的值对应的对象\r\n            this.mSetCheckedData(mCheckedData);\r\n        },\r\n        // 触发事件\r\n        mEmitEvent() {\r\n            // 1.设置当前选中的数据\r\n            this.mSetCurrentCheckedData();\r\n            // 2.发送消息到父级\r\n            this.$emit('input', this.mCurrentValue);\r\n            // 触发change 事件\r\n            this.$emit('change', this.mCheckedData);\r\n        }\r\n    }\r\n};\r\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=1c29769a&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fd-aside-tree-area\"},[_c('component-scrollbar',{attrs:{\"show\":false},on:{\"ready\":_vm.readyScrollbar}},[_c('ul',{staticClass:\"fd-node-content\"},_vm._l((_vm.currentNavList),function(item,index){return _c('li',{key:item[_vm.dKey],staticClass:\"fd-node\",on:{\"mousedown\":function($event){return _vm.clickItem(item, index)}}},[_c('h3',{directives:[{name:\"tips\",rawName:\"v-tips.ellipsis\",value:(item[_vm.dName]),expression:\"item[dName]\",modifiers:{\"ellipsis\":true}}],staticClass:\"fd-node-header level1\",class:{\n                         extend: item.extend,\n                         leaf: item.leaf,\n                         active: item[_vm.dKey] === _vm.activeItem[_vm.dKey],\n                         'show-extend': item.hasExtendArrow,\n                    },attrs:{\"data-ellipsis\":_vm.adjustEllipsis(item)}},[_c('span',{staticClass:\"fd-name\",domProps:{\"textContent\":_vm._s(item[_vm.dName])}}),_vm._v(\" \"),(item.multiple)?_c('span',{staticClass:\"fd-checked \",class:{checked: item.checked}},[_vm._v(\"是否有值, 有值才会显示\")]):_vm._e()]),_vm._v(\" \"),_c('ul',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.extend),expression:\"item.extend\"}],staticClass:\"fd-node-content\"},_vm._l((item[_vm.dChildren]),function(itemChild,index){return _c('li',{key:itemChild[_vm.dKey] + index,staticClass:\"fd-node\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.clickItem(itemChild, item)}}},[_c('h3',{directives:[{name:\"tips\",rawName:\"v-tips.ellipsis\",value:(itemChild[_vm.dName]),expression:\"itemChild[dName]\",modifiers:{\"ellipsis\":true}}],staticClass:\"fd-node-header level2\",class:{\n                                 extend: itemChild.extend,\n                                 leaf: itemChild.leaf,\n                                 active: itemChild[_vm.dKey] === _vm.activeItem[_vm.dKey],\n                                 'show-extend': itemChild.hasExtendArrow\n                            },attrs:{\"data-ellipsis\":_vm.adjustEllipsis(itemChild)}},[_c('span',{staticClass:\"fd-name\",domProps:{\"textContent\":_vm._s(itemChild[_vm.dName])}}),_vm._v(\" \"),(itemChild.multiple)?_c('span',{staticClass:\"fd-checked \",class:{checked: itemChild.checked}},[_vm._v(\"是否有值, 有值才会显示\")]):_vm._e()])])}),0)])}),0)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020/12/28 - 10:57\r\n *@updateTime 2020/12/28 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  时间组合\r\n */\r\nimport type from '../../../../../tools/extend/type';\r\n\r\nconst NUM_2 = 2;\r\nconst NUM_3 = 3;\r\nconst NUM_8 = 8;\r\n// 一天的毫秒数\r\nconst NUM_86400000 = 86400000;\r\n// 导出模块\r\nexport default {\r\n    props: {\r\n        // 开始时间\r\n        startDate: {\r\n            type: [Number, String],\r\n            default: ''\r\n        },\r\n        // 结束时间\r\n        endDate: {\r\n            type: [Number, String],\r\n            default: ''\r\n        },\r\n        // 开始的label\r\n        startLabel: {\r\n            type: String,\r\n            default: '起止时间'\r\n        },\r\n        // 开始的placeholder\r\n        startPlaceholder: {\r\n            type: String,\r\n            default: '选择开始日期'\r\n        },\r\n        // 结束的label\r\n        endLabel: {\r\n            type: String,\r\n            default: '至'\r\n        },\r\n        // 结束的placeholder\r\n        endPlaceholder: {\r\n            type: String,\r\n            default: '选择结束日期'\r\n        },\r\n        // 禁用的日期配置\r\n        disabledToday: {\r\n            type: Object,\r\n            default() {\r\n                // 禁用今天之前的\r\n                // disabledDate: (date) => date && date.valueOf() < Date.now() - NUM_86400000\r\n                return {};\r\n            }\r\n        },\r\n        // 开始时间大于结束时间提示信息\r\n        startGreaterThanEndTipsInfo: {\r\n            type: String,\r\n            default: '开始时间不允许大于结束时间'\r\n        },\r\n        // 提示处理函数\r\n        tipsHandler: {\r\n            type: Function,\r\n            default(info) {\r\n                window.Artery.message.warning(info);\r\n            }\r\n        },\r\n        // 开始结束时间最小间隔，天\r\n        startEndMinSpace: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        // 是否显示结束时间\r\n        showEndDate: {\r\n            type: Boolean,\r\n            default: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            // 开始时间\r\n            currentStartDate: '',\r\n            // 结束时间\r\n            currentEndDate: ''\r\n        };\r\n    },\r\n    watch: {\r\n        // 开始时间\r\n        currentStartDate(newDate) {\r\n            this.changeStartDate(newDate);\r\n        },\r\n        // 结束时间\r\n        currentEndDate(newDate) {\r\n            this.changeEndDate(newDate);\r\n        }\r\n    },\r\n    created() {\r\n        // 执行初始化处理函数\r\n        this.init();\r\n    },\r\n    mounted() {\r\n        // 触发ready事件\r\n        this.$emit('ready', this);\r\n    },\r\n    methods: {\r\n        // 初始化处理函数\r\n        init() {\r\n            this.update(this.startDate, this.endDate);\r\n        },\r\n        // 更新函数\r\n        update(startDate, endDate) {\r\n            // 设置开始时间\r\n            this.currentStartDate = startDate;\r\n            // 设置结束时间\r\n            this.currentEndDate = endDate;\r\n        },\r\n        //  改变开始时间\r\n        changeStartDate(date) {\r\n            if (typeof date === 'string' && date) {\r\n                // 如果显示结束时间\r\n                if (this.showEndDate) {\r\n                    // 当前的【开始时间】\r\n                    let _startDate = this.transferDate(date);\r\n                    // 获取毫秒数\r\n                    _startDate = _startDate.valueOf();\r\n                    // 获取【结束时间】\r\n                    let _endDate = this.currentEndDate;\r\n                    if (_endDate !== '') {\r\n                        // 如果结束时间是字符串需要转义成数字时间\r\n                        if (typeof _endDate === 'string') {\r\n                            _endDate = this.transferDate(_endDate);\r\n                            // 获取毫秒数\r\n                            _endDate = _endDate.valueOf();\r\n                        }\r\n                        // 如果开始时间大于结束时间\r\n                        if (_startDate > _endDate) {\r\n                            // 结束时间等于开始时间 + 最小间隔天数\r\n                            this.currentEndDate = _startDate + this.startEndMinSpace * NUM_86400000;\r\n                            // 触发提示\r\n                            this.emitTipsEvent('startDate');\r\n                        }\r\n                    } else {\r\n                        // 结束时间等于开始时间 + 最小间隔天数\r\n                        // 20230803 不自动填充开始或者结束时间\r\n                        // this.currentEndDate = _startDate + this.startEndMinSpace * NUM_86400000;\r\n                    }\r\n                }\r\n            }\r\n            // 触发日期改变事件\r\n            this.emitEvent();\r\n        },\r\n        //  改变结束时间\r\n        changeEndDate(date) {\r\n            if (typeof date === 'string' && date) {\r\n                // 如果显示结束时间\r\n                if (this.showEndDate) {\r\n                    // 当前的【结束时间】\r\n                    let _endDate = this.transferDate(date);\r\n                    // 获取毫秒数\r\n                    _endDate = _endDate.valueOf();\r\n                    // 获取【开始时间】\r\n                    let _startDate = this.currentStartDate;\r\n                    if (_startDate !== '') {\r\n                        // 如果开始时间是字符串需要转义成数字时间\r\n                        if (typeof _startDate === 'string') {\r\n                            _startDate = this.transferDate(_startDate);\r\n                            // 获取毫秒数\r\n                            _startDate = _startDate.valueOf();\r\n                        }\r\n                        // 如果开始时间大于结束时间\r\n                        if (_startDate > _endDate) {\r\n                            // 结束时间等于开始时间 + 最小间隔天数\r\n                            this.currentStartDate = _endDate - this.startEndMinSpace * NUM_86400000;\r\n                            // 触发提示\r\n                            this.emitTipsEvent('endDate');\r\n                        }\r\n                    } else {\r\n                        // 结束时间等于开始时间 + 最小间隔天数\r\n                        // 20230803 不自动填充开始或者结束时间\r\n                        // this.currentStartDate = _endDate - this.startEndMinSpace * NUM_86400000;\r\n                    }\r\n                }\r\n            }\r\n            // 触发日期改变事件\r\n            this.emitEvent();\r\n        },\r\n\r\n        // 触发提示事件\r\n        emitTipsEvent(category) {\r\n            this.$emit('tips', category);\r\n            // 提示的处理函数\r\n            if (typeof this.tipsHandler === 'function') {\r\n                this.tipsHandler(this.startGreaterThanEndTipsInfo);\r\n            }\r\n        },\r\n        // 触发事件\r\n        emitEvent() {\r\n            // 必须是字符串才触发事件\r\n            if (typeof this.currentStartDate === 'string') {\r\n                this.$emit('change', this.currentStartDate, this.showEndDate ? this.currentEndDate : false);\r\n            }\r\n        },\r\n\r\n        // 解决new Date()IE不支持传参\r\n        transferDate(dateString) {\r\n            // 用空格（带时分秒空格区分）拆分日期\r\n            const _dateString = dateString.split(' ');\r\n            // 获取日期 =>年月日\r\n            const _date = _dateString[0].split('-');\r\n            // 创建一个新的日期\r\n            const _newDate = new Date();\r\n            // 设置当前日期  年月日 （注意原始的月份是0 -11 ）\r\n            _newDate.setUTCFullYear(\r\n                //  年\r\n                _date[0],\r\n                // 月\r\n                ((_date[1] ? _date[1] : 0) - 1),\r\n                // 日\r\n                (_date[NUM_2] ? _date[NUM_2] : 1)\r\n            );\r\n            const _len = _dateString.length;\r\n            // 对时分秒的处理\r\n            if (_len > 1) {\r\n                // 获取时间 => 时分秒\r\n                const _times = _dateString[_len - 1].split(':');\r\n                // 设置当前时间 时分秒  （注意时区转换，北京时间，东八区加了8，所以先减去8 ）\r\n                _newDate.setUTCHours(\r\n                    // 时\r\n                    ((_times[0] ? _times[0] : 0) - NUM_8),\r\n                    // 分\r\n                    (_times[1] ? _times[1] : 0),\r\n                    // 秒\r\n                    (_times[NUM_2] ? _times[NUM_2] : 0),\r\n                    // 毫秒\r\n                    (_times[NUM_3] ? _times[NUM_3] : 0)\r\n                );\r\n            }\r\n            return _newDate;\r\n        }\r\n    }\r\n};\r\n\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=a571f9d0&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fd-date-group\"},[_c('label',{staticClass:\"fd-date-label\",domProps:{\"innerHTML\":_vm._s(_vm.startLabel)}}),_vm._v(\" \"),_c('div',{staticClass:\"fd-date-input-wrap\"},[_c('aty-date-picker',{attrs:{\"type\":\"date\",\"options\":_vm.disabledToday,\"placeholder\":_vm.startPlaceholder,\"transfer\":true},on:{\"change\":_vm.changeStartDate},model:{value:(_vm.currentStartDate),callback:function ($$v) {_vm.currentStartDate=$$v},expression:\"currentStartDate\"}})],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showEndDate),expression:\"showEndDate\"}],staticClass:\"fd-end-date-box\"},[_c('label',{staticClass:\"fd-date-label\",domProps:{\"textContent\":_vm._s(_vm.endLabel)}}),_vm._v(\" \"),_c('div',{staticClass:\"fd-date-input-wrap\"},[_c('aty-date-picker',{attrs:{\"type\":\"date\",\"options\":_vm.disabledToday,\"placeholder\":_vm.endPlaceholder,\"transfer\":true},on:{\"change\":_vm.changeEndDate},model:{value:(_vm.currentEndDate),callback:function ($$v) {_vm.currentEndDate=$$v},expression:\"currentEndDate\"}})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\n *@version 1.0.0\n *@author wanghuifeng\n *@createTime 2020/12/28 - 10:57\n *@updateTime 2020/12/30 - 10:57\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\n @description  选中区域\n */\n// 导出模块\nexport default {\n    props: {\n        // label 类型文本\n        labelCategory: {\n            type: String,\n            default: '银行'\n        },\n        // 开始的label\n        deleteText: {\n            type: String,\n            default: '全部清除'\n        },\n        // 数据列表\n        dataList: {\n            type: Array,\n            default() {\n                return [{\n                    name: '工商银行',\n                    id: '1'\n                }, {\n                    name: '北京银行',\n                    id: '2'\n                }];\n            }\n        },\n        // 数据节点的id\n        dKey: {\n            type: String,\n            default: 'id'\n        },\n        // 数据节点的名称\n        dName: {\n            type: String,\n            default: 'name'\n        },\n        // 最大数量\n        maxCount: {\n            type: Number,\n            default: 20\n        }\n    },\n    data() {\n        return {\n            // 当前的数据列表\n            currentList: []\n        };\n    },\n    computed: {\n        // label 文本\n        label() {\n            return `已选${this.labelCategory}`;\n        },\n        // 当前选中的数量\n        currentListCount() {\n            return `(${this.currentList.length})`;\n        },\n        // 是否显示提示\n        showTip() {\n            if (this.labelCategory === '银行') {\n                return this.currentList.length > 50;\n            } else {\n                return this.currentList.length > 20;\n            }\n        },\n        tipsInfo() {\n            if (this.labelCategory === '银行') {\n                return '最多只能选择50家，超出50家银行不可进行确认提交！';\n            } else {\n                return '最多只能选择20个城市，超出20个城市不可进行确认提交！';\n            }\n        }\n    },\n    created() {\n        // 初始化函数\n        this.init();\n    },\n    mounted() {\n        // 触发ready事件\n        this.$emit('ready', this);\n    },\n    methods: {\n        // 初始化函数\n        init() {\n            //  更新数据\n            this.update(this.dataList);\n        },\n        // 更新数据列表\n        update(dataList, callback) {\n            // 1.设置当前的数据列表\n            this.setCurrentList(dataList);\n            // 2. 执行回调函数\n            if (typeof callback === 'function') {\n                callback();\n            }\n        },\n        // 设置当前的数据列表\n        setCurrentList(dataList) {\n            // 当前数据列表\n            this.currentList = dataList;\n        },\n\n        // 删除某条数据\n        deleteCurrentList(index, count = 1) {\n            // 从数组中删除某个条目\n            this.currentList.splice(index, count);\n        },\n        // 清除数据\n        clearCurrentList() {\n            // 数据全部清空\n            this.setCurrentList([]);\n        },\n\n        //  删除全部\n        clickDeleteAll() {\n            // 清除数据\n            this.clearCurrentList();\n            // 触发事件\n            this.emitEvent();\n        },\n        //  删除单个条目\n        clickDeleteItem(index, item) {\n            // 禁用\n            if (item.disabled) {\n                return false;\n            }\n            // 删除某条数据\n            this.deleteCurrentList(index);\n            // 触发事件\n            this.emitEvent();\n        },\n        // 确定按钮\n        emitEvent() {\n            this.$emit('change', this.currentList);\n        }\n    }\n};\n\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=40c76c6a&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fd-checked-area\"},[_c('h3',{staticClass:\"fd-checked-area-header\"},[_c('span',{staticClass:\"fd-label-text\",domProps:{\"textContent\":_vm._s(_vm.label)}}),_vm._v(\" \"),_c('span',{staticClass:\"fd-count-text\",domProps:{\"textContent\":_vm._s(_vm.currentListCount)}}),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showTip),expression:\"showTip\"}],staticClass:\"fd-tips\",domProps:{\"innerHTML\":_vm._s(_vm.tipsInfo)}}),_vm._v(\" \"),_c('span',{staticClass:\"fd-delete-all\",domProps:{\"textContent\":_vm._s(_vm.deleteText)},on:{\"click\":_vm.clickDeleteAll}})]),_vm._v(\" \"),_c('div',{staticClass:\"fd-checked-area-content\"},[_c('ul',{staticClass:\"fd-checked-area-list\"},_vm._l((_vm.currentList),function(item,index){return _c('li',{key:item[_vm.dName],staticClass:\"fd-item\",class:{\n                   'not-allowed': item.disabled\n                },on:{\"click\":function($event){$event.stopPropagation();return _vm.clickDeleteItem(index, item)}}},[_c('span',{staticClass:\"fd-name\",domProps:{\"textContent\":_vm._s(item[_vm.dName])}}),_vm._v(\" \"),_c('span',{staticClass:\"fd-icon-delete\"},[_vm._v(\"删除按钮\")])])}),0)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n * @namespace sl   search-list  搜索列表命名空间\r\n *\r\n */\r\nexport default {\r\n    props: {\r\n        // 限制结果\r\n        limit: {\r\n            type: Number,\r\n            default: 1000\r\n        },\r\n        // 空文本的提示\r\n        placeholderSearch: {\r\n            type: String,\r\n            default: '请输入银行关键字...'\r\n        }\r\n    },\r\n    methods: {\r\n        // 搜索选中\r\n        slSelect(item) {\r\n            const _targetItem = item.item;\r\n            if (_targetItem) {\r\n                // 父条目\r\n                const _pItem = this.cGetCache(_targetItem[this.dpKey]);\r\n                // 选中条目\r\n                this.mClickItem(_targetItem, _pItem);\r\n                // 判断是否存在重复条目\r\n                this.mAdjustRepeatItem(_targetItem);\r\n            }\r\n        },\r\n        // 添加搜索数据条目\r\n        slAddCurrentDataItem(dataItem) {\r\n            // 添加数据\r\n            this.slCurrentDataCache.set(dataItem[this.dKey], dataItem);\r\n        },\r\n        // 设置当前的数据\r\n        slSetCurrentData(dataList) {\r\n            this.slCurrentData = dataList;\r\n        },\r\n        // 获取当前的数据列表\r\n        slGetCurrentData() {\r\n            // 先判断当前是否存在数据\r\n            if (this.slCurrentData.length) {\r\n                return this.slCurrentData;\r\n            }\r\n            // 当前的数据列表\r\n            const slCurrentData = [];\r\n            // 循环缓存对象\r\n            this.slCurrentDataCache.forEach((item) => {\r\n                if (item.parentId) {\r\n                    slCurrentData.push(item);\r\n                }\r\n            });\r\n            // 设置当前的数据列表\r\n            this.slSetCurrentData(slCurrentData);\r\n            // 返回当前的数据列表\r\n            return slCurrentData;\r\n        },\r\n        // 初始化当前的数据\r\n        slInitCurrentData() {\r\n            // 清空当前的数据\r\n            this.slSetCurrentData([]);\r\n            // 添加缓存对象\r\n            this.slCurrentDataCache = new Map();\r\n        },\r\n        // 设置当前的显示状态\r\n        remoteRequestMethod() {\r\n            return new Promise((resolve) => {\r\n                // 返回当前的数据列表\r\n                resolve(this.slGetCurrentData());\r\n            });\r\n        }\r\n    }\r\n};\r\n","/**\r\n * @author  wuwg\r\n * @createTime  wuwg 2020/06/13\r\n * @updateTime  wuwg 2020/11/29\r\n * @namespace cache   c  缓存命名空间\r\n *\r\n */\r\nexport default {\r\n    methods: {\r\n        // 初始化缓存对象\r\n        cInitCache() {\r\n            this.cResetCache();\r\n        },\r\n        // 销毁缓存对象\r\n        cDestroyCache() {\r\n            this.cacheObject = null;\r\n        },\r\n        cResetCache() {\r\n            this.cacheObject = new Map();\r\n        },\r\n        // 添加缓存数据\r\n        cAddCache(key, data) {\r\n            // 如果已经存在，那么需要添加缓存其他的缓存数据\r\n            if (this.cacheObject.has(key)) {\r\n                // 找到目标数据，添加以下两个属性 @todo  业务需要 20201231 wuwg\r\n                const _targetItem = this.cGetCache(key);\r\n                // 数据重复\r\n                _targetItem.repeatCache = true;\r\n                // 重复缓存id\r\n                _targetItem.repeatCacheId = `${key}repeat`;\r\n\r\n                // 当前数据添加以下两个属性\r\n                data.repeatCache = true;\r\n                // 重复缓存id\r\n                data.repeatCacheId = key;\r\n                // 存放当前数据\r\n                this.cacheObject.set(`${key}repeat`, data);\r\n            } else {\r\n                // 因为存在重复数据，所以对每个key都需要进行判断\r\n                this.cacheObject.set(key, data);\r\n            }\r\n        },\r\n        // 获取缓存数据\r\n        cGetCache(key) {\r\n            return this.cacheObject.get(key);\r\n        },\r\n        // 获取所有缓存缓存数据，（key:value）\r\n        cGetAllCache() {\r\n            return this.cacheObject;\r\n        },\r\n        // 删除缓存数据\r\n        cDeleteCache(key) {\r\n            return this.cacheObject.delete(key);\r\n        }\r\n    }\r\n};\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\n * @version 1.0.1\n * @author wuwg  <wuwg@thunisoft.com>\n * @createTime:2020-12-26,\n * @updateTime:2020-12-26\n * @copyright thunisoft fd\n * @description  *  [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\n *  [jsdoc-vuejs]{@link  http://npm.taobao.org/package/jsdoc-vuejs}  -\n *  [个人博客]{@link  http://www.wuweigang.com}\n *  【模块】：内容列表\n *  @namespace  content\n */\n// 搜索列表\nimport searchList from './extend/search-list.js';\n// 缓存\nimport cache from './extend/cache.js';\n// 复选框\nimport multiple from './extend/multiple.js';\n// 银行\n// import dataListBlank from './mock/dataListBlank.js';\n// 城市\n// import dataListCity from './mock/dataListCity.js';\n// 导出模块\nexport default {\n    // 内部的搜索\n    mixins: [searchList, cache, multiple],\n    props: {\n        // 数据节点的父id\n        dpKey: {\n            type: String,\n            default: 'parentId'\n        },\n        // 数据节点的id\n        dKey: {\n            type: String,\n            default: 'id'\n        },\n        // 数据节点的名称\n        dName: {\n            type: String,\n            default: 'name'\n        },\n        // 数据节点的子节点\n        dChildren: {\n            type: String,\n            default: 'children'\n        },\n        // 数据咧白哦\n        dataList: {\n            type: Array,\n            default() {\n                // mock 数据\n                // 城市\n                // return dataListCity;\n                // 银行\n                // return dataListBlank;\n            }\n        },\n        // 默认选中节点\n        checkedDataList: {type: Array},\n        // 能选中的最大数量\n        selectMaxCount: {\n            type: Number,\n            default: 50\n        },\n        // 提示处理函数\n        tipsHandler: {\n            type: Function,\n            default(info) {\n                window.Artery.message.warning(info);\n            }\n        },\n        // 是否添加【激活条目】属性\n        addKindActiveItemProperty: {\n            type: Function,\n            // dataItem 当前的数据条目\n            default(dataItem, dataItemP) { // eslint-disable-line\n                // @todo 央地协查业务逻辑\n                return dataItem.name === '省份' || dataItem.name === '各省银行';\n            }\n        },\n        // 是否是【复选框】类型\n        addMultipleProperty: {\n            type: Function,\n            // dataItem 当前的数据条目\n            default(dataItem, dataItemP) { // eslint-disable-line\n                // @todo 央地协查业务逻辑\n                return !(dataItemP && dataItemP.name === '省份' ||\n                    dataItemP && dataItemP.name === '各省银行' ||\n                    dataItem.name === '省份' ||\n                    dataItem.name === '各省银行' ||\n                    dataItem.name === '重点城市');\n            }\n        },\n        // 添加其他节点属性\n        dAddOtherPropertyCallback: {\n            type: Function,\n            // dataItem 当前的数据条目\n            default(dataItem) { // eslint-disable-line\n\n            }\n        },\n        // 添加独有的class\n        dAddClassCallback: {\n            type: Function,\n            // dataItem 当前的数据条目\n            default(dataItem, dataItemP, vm) { // eslint-disable-line\n                return '';\n            }\n        },\n        // 是否有搜索\n        hasSearch: {\n            type: Boolean,\n            default: true\n        },\n        // 是否显示警告提示\n        showWarningTips: {\n            type: Boolean,\n            default: true\n        },\n        // 提示文字\n        warningTips: {\n            type: String,\n            default: '话单信息仅支持全选'\n        },\n        // 提示文字\n        adjustEllipsisHandler: {\n            type: Function,\n            default(item) {\n                return item.name.length > 4; // eslint-disable-line\n            }\n        }\n    },\n    data() {\n        return {\n            // 搜索框的值\n            searchValue: '',\n            // 当前的数据列表\n            currentDataList: [],\n            // 无数据提示\n            dataEmptyText: '暂无数据',\n            // 当前激活的条目\n            currentItem: {}\n        };\n    },\n    created() {\n        // 执行初始化的方法\n        this.init();\n    },\n    mounted() {\n        // 触发ready事件\n        this.$emit('ready', this);\n    },\n    // 销毁之前\n    beforeDestroy() {\n        // 调用销毁的方法\n        this.destroy();\n    },\n    methods: {\n        // 初始化的数据方法\n        init() {\n            this.currentDataList = [];\n            // 1. 初始化变量\n            this.mInitCheckedData();\n            // 2. 更新数据列表\n            this.update(this.dataList, () => {\n                // 3. 设置当前选中的值\n                this.mWatchValueHandle(this.checkedDataList);\n            });\n        },\n        // 刷新的方法\n        refresh() {\n            // 执行初始化的方法\n            this.init();\n        },\n        // 设置搜索框的值\n        setSearchValue(value) {\n            // 清空搜索框的值\n            this.searchValue = value;\n        },\n        // 更新函数\n        update(dataList, callback) {\n            // 1.清空搜索框的值\n            this.setSearchValue('');\n            // 2. 重置当前选中数据\n            this.mResetCheckedData();\n            // 3.初始化当前的数据咧白哦\n            this.initCurrentDataList(dataList);\n            // 4. 如果存在回调函数，那么执行回调函数\n            if (typeof callback === 'function') {\n                callback();\n            }\n        },\n        // 销毁\n        destroy() {\n            // 1. 销毁缓存\n            this.cDestroyCache();\n            // 2. 重置数据\n            this.mInitCheckedData();\n        },\n        // 初始化级联数据列表\n        initCurrentDataList(dataList) {\n            // 1.转换数据列表\n            this.transformDataList(dataList);\n            // 2.设置当前的内容数据列表\n            this.setCurrentDataList(dataList);\n        },\n        // 设置当前的数据列表\n        setCurrentDataList(dataList) {\n            this.currentDataList = dataList;\n        },\n\n        /**\n         *\n         * @param {Array} dataList 需要循环的数据列表\n         * @returns {void} 无返回值\n         */\n        transformDataList(dataList) {\n            // 1. 初始化缓存\n            this.cInitCache();\n            // 2. 初始化搜索数据列表\n            this.slInitCurrentData();\n            // 3. 循环数据列表\n            dataList.forEach((item) => {\n                // 递归数据\n                this.singleRecursion(item, null);\n            });\n        },\n\n        /**\n         * 递归循环函数\n         * @param {Object} dataItem 当前循环的数据条目\n         * @param {Object} dataItemP 当前循环的数据条目的父级条目\n         * @returns {void} 无返回值\n         */\n        singleRecursion(dataItem, dataItemP) {\n            // 1. 添加属性\n            this.dAddProperty(dataItem, dataItemP);\n            // 2. 判断目标子集是不是数组\n            if (Array.isArray(dataItem[this.dChildren])) {\n                // 循环子集\n                dataItem[this.dChildren].forEach((itemC) => {\n                    // 继续递归\n                    this.singleRecursion(itemC, dataItem);\n                });\n            } else {\n                dataItem[this.dChildren] = [];\n            }\n            //  3.添加缓存\n            this.cAddCache(dataItem[this.dKey], dataItem);\n        },\n        // 添加属性\n        dAddProperty(dataItem, dataItemP) {\n            // 1. 增加checked属性\n            dataItem.checked = false;\n            // 2.判断是否需要增加 kindActiveItem 属性\n            if (this.addKindActiveItemProperty(dataItem, dataItemP, this)) {\n                // 2. 增加激活条目属性\n                dataItem.kindActiveItem = {};\n            }\n            // 3.判断是否需要增加 multiple 属性\n            if (this.addMultipleProperty(dataItem, dataItemP, this)) {\n                // 3.1 增加激活条目属性\n                dataItem.multiple = true;\n                // 3.2 添加搜索数据条目\n                this.slAddCurrentDataItem(dataItem);\n            }\n            // 4.单独的className\n            dataItem.className = this.dAddClassCallback(dataItem, dataItemP, this);\n            // 5.添加其他属性\n            this.dAddOtherPropertyCallback(dataItem, dataItemP, this);\n        },\n        // 处理子集选中状态\n        operateChildrenCheckedStatus(dataItem, maxCount) {\n            // 循环子集\n            dataItem[this.dChildren].every((itemC) => {\n                let _flag = true;\n                // 判断子集选中态是否和父级一致\n                if (itemC.checked !== dataItem.checked) {\n                    itemC.checked = dataItem.checked;\n                    // 如果存在重复数据\n                    if (itemC.repeatCache) {\n                        // 重复数据\n                        const _repeatItem = this.cGetCache(itemC.repeatCacheId);\n                        _repeatItem.checked = itemC.checked;\n                    }\n                    if (itemC.checked) {\n                        // 添加选中数据\n                        _flag = this.mAddCheckedItem(itemC, maxCount, false);\n                        // 如果添加失败，那么取消父级选中\n                        if (!_flag) {\n                            dataItem.checked = false;\n                        }\n                    } else {\n                        // 删除选中条目\n                        this.mDeleteCheckedItem(itemC, false);\n                    }\n                }\n                return _flag;\n            });\n        },\n        // 全选事件\n        clickSelectAll(item) {\n            // 如果是复选框\n            if (item && item.multiple) {\n                // 1.复选框的状态\n                item.checked = !item.checked;\n                // 2.处理子集选中状态\n                // 多选点击条目\n                if (item.name === '全国银行' || item.name === '各省银行' || item.name === '其他银行') {\n                    this.operateChildrenCheckedStatus(item, 50);\n                } else {\n                    this.operateChildrenCheckedStatus(item, 20);\n                }\n                // 3.触发数组的更新\n                this.currentDataList.splice(0, 0);\n                // 4. 触发事件\n                this.mEmitEvent();\n            }\n            this.$emit('clickItem', item);\n        },\n        // 点击节点条目\n        clickNodeItem(item, pItem) {\n            // 禁用\n            if (item.disabled) {\n                return false;\n            }\n            // 如果是多选\n            if (item.multiple) {\n                // 多选点击条目\n                if (pItem.name === '全国银行' || pItem.name === '各省银行' || pItem.name === '其他银行') {\n                    this.mClickItem(item, pItem, 50);\n                } else {\n                    this.mClickItem(item, pItem, 20);\n                }\n                // 判断是否存在重复条目\n                this.mAdjustRepeatItem(item);\n                // 处理父级选中状态\n                    this.operateParentCheckedStatus(item);\n            } else {\n                // 单选点击条目\n                this.sClickItem(item, pItem);\n            }\n        },\n        // 单选点击条目\n        sClickItem(item, pItem) {\n            // 当前的条目不等于value值\n            if (pItem.kindActiveItem && pItem.kindActiveItem[this.dKey] !== item[this.dKey]) {\n                // 设置类激活条目\n                this.setKindActiveItem(item, pItem);\n            }\n            // 发送消息到父级\n            this.$emit('clickItem', item, pItem);\n        },\n        // 设置当前选中得数据\n        setKindActiveItem(item, pItem) {\n            // 设置类激活条目\n            pItem.kindActiveItem = item;\n            // 触发数组的更新\n            this.currentDataList.splice(0, 0);\n        },\n        // 判断是否显示提示\n        adjustEllipsis(item) {\n            return typeof this.adjustEllipsisHandler === 'function' ? this.adjustEllipsisHandler(item) : true;\n        }\n    }\n};\n","/**\n * @namespace mul   multiple  多选相关的设置\n *\n */\n// 循环对象\nimport cache from './cache.js';\n// 导出模块\nexport default {\n    mixins: [cache],\n    methods: {\n        // 初始化选中数据\n        mInitCheckedData() {\n            // 设置当前的值\n            this.mSetCurrentValue([]);\n            // 设置当前的值对应的对象\n            this.mSetCheckedData([]);\n            // 清除缓存\n            this.mCheckedCache = new Map();\n        },\n        // 设置当前的值\n        mSetCurrentValue(value) {\n            this.mCurrentValue = value;\n        },\n        // 设置当前的值对应的对象\n        mSetCheckedData(value) {\n            this.mCheckedData = value;\n        },\n        // 重置当前选中数据\n        mResetCheckedData() {\n            // 1.当前选中的数据对象全部置为false\n            this.mCheckedCache.forEach((item) => {\n                // 如果存在该对象\n                if (item) {\n                    // 1.1.设置默认未被激活\n                    item.checked = false;\n                    // 1.2.如果存在重复数据\n                    if (item.repeatCache) {\n                        // 重复数据\n                        const _repeatItem = this.cGetCache(item.repeatCacheId);\n                        if (_repeatItem) {\n                            _repeatItem.checked = false;\n                        }\n                    }\n                    // 1.3.删除选中数据\n                    this.mDeleteCheckedItem(item, false);\n                }\n            });\n            // 2.初始化选中数据\n            this.mInitCheckedData();\n        },\n        //  监听多选的值的处理函数,  forceUpdate = true 代表强制更新\n        mWatchValueHandle(newValue, forceUpdate = false) {\n            // 前置处理函数\n            const _value = this.mBeforeAdjustHandle(newValue);\n            // 值不一致，那么需要清除当前的值\n            if (_value.toString() !== this.mCurrentValue.toString() || forceUpdate) {\n                // 1. 重置当前选中数据\n                this.mResetCheckedData();\n                // 2. 设置当前选中的值\n                this.mSetCurrentValue(_value);\n                // 3. 设置当前选中的数据\n                this.mOperateCheckedData();\n                // 4.触发事件\n                this.mEmitEvent();\n            }\n        },\n        // 前置处理函数\n        mBeforeAdjustHandle(newValue) {\n            // 如果不存在，那么就应该初始化数据\n            if (!this.mCurrentValue) {\n                // 初始化选中数据\n                this.mInitCheckedData();\n            }\n            // 当前的值， 因为有可能value变动了\n            let _value = newValue;\n            // 如果值不是数组\n            if (!Array.isArray(_value)) {\n                _value = typeof _value === 'string' ? [_value] : [];\n            }\n            // 如果存在值，并且值是大于0的数组，并且数组内部的值是对象，那么需要做值的转换\n            if (Array.isArray(_value) && _value.length > 0 && typeof _value[0] === 'object') {\n                _value = _value.map((item) => item[this.dKey]);\n            }\n            return _value;\n        },\n\n        // 处理当前选中的数据\n        mOperateCheckedData() {\n            // const _dataList = [];\n            // 直接这么处理，数据量大的话性能比较差。\n            // this.cGetAllCache()\n            //     .forEach((item) => {\n            //         item.checked = false;\n            //     });\n            // 1.循环值，找出对象添加到选中列表中\n            this.mCurrentValue.forEach((item) => {\n                // 获取数据\n                const _dataItem = this.cGetCache(item);\n                // 如果存在，那么就选中\n                if (_dataItem) {\n                    _dataItem.checked = true;\n                    // 如果存在重复数据\n                    if (item.repeatCache) {\n                        // 重复数据条目\n                        const _repeatItem = this.cGetCache(item.repeatCacheId);\n                        // 如果存在重复条目\n                        if (_repeatItem) {\n                            _repeatItem.checked = true;\n                        }\n                    }\n                    // 添加选中数据\n                    this.mAddCheckedItem(_dataItem, false);\n                }\n            });\n            // 2. 选中列表，判断当前选中条目父元素的选中状态\n            this.mCheckedCache.forEach((item) => {\n                // 如果存在该对象\n                this.operateParentCheckedStatus(item);\n            });\n        },\n\n        // 判断是否存在重复条目\n        mAdjustRepeatItem(item) {\n            // 如果存在重复数据\n            if (item.repeatCache) {\n                // 重复数据\n                const _repeatItem = this.cGetCache(item.repeatCacheId);\n                // 重复数据的父条目\n                const _pRepeatItem = this.cGetCache(_repeatItem[this.dpKey]);\n                // 选中条目\n                this.mClickItem(_repeatItem, _pRepeatItem);\n            }\n        },\n        // 点击数据条目\n        mClickItem(item, pItem, maxcount) {\n            // 选中否者不选中\n            item.checked = !item.checked;\n            // 如果是选中，那么执行添加条目的方法\n            if (item.checked) {\n                // 添加选中条目\n                this.mAddCheckedItem(item, maxcount);\n                // 如果是取消选中\n            } else {\n                // 删除数据\n                this.mDeleteCheckedItem(item);\n            }\n            // 触发数组的更新\n            pItem[this.dChildren].splice(0, 0);\n            // 发送消息到父级\n            this.$emit('clickItem', item);\n        },\n\n        // 处理父级选中状态\n        operateParentCheckedStatus(dataItem) {\n            // 获取父级条目\n            const _pDataItem = this.cGetCache(dataItem[this.dpKey]);\n            // 存在父级，并且父级是复选框\n            if (_pDataItem && _pDataItem.multiple) {\n                // 如果子级是选中, 父级不选中\n                if (dataItem.checked) {\n                    // 设置父集的选中状态\n                    _pDataItem.checked = _pDataItem[this.dChildren].every((item) => item.checked);\n                }\n                // 如果子级是非选中, 父级是选中\n                if (!dataItem.checked && _pDataItem.checked) {\n                    _pDataItem.checked = false;\n                }\n            }\n        },\n        // 清除的操作\n        mClearHandle(emitEvent = true) {\n            // 添加数据\n            this.mCheckedCache.clear();\n            // 如果触发事件\n            if (emitEvent) {\n                // 触发事件\n                this.mEmitEvent();\n            }\n        },\n        // 添加选中条目, 添加成功会返回boolean值\n        mAddCheckedItem(item, maxCount, emitEvent = true, adjustParentCheckedStatus = true) {\n            // 1. 判断选中节点是否存在该对象\n            if (this.mCheckedCache.has(item[this.dKey])) {\n                // 1.1 判断父级状态是否选中\n                if (adjustParentCheckedStatus) {\n                    // 处理父级选中状态\n                    this.operateParentCheckedStatus(item);\n                }\n                // 1.2 无需重新添加， 返回添加成功标识\n                return true;\n            }\n            // 2. 如果超出的话触发提示， 不能进行添加\n            if (maxCount) {\n                this.selectMaxCount = maxCount;\n            }\n            if (maxCount && this.mCheckedCache.size + 1 > this.selectMaxCount) {\n                if (typeof this.tipsHandler === 'function') {\n                    // 执行提示函数\n                    this.tipsHandler(`超出最大数量${this.selectMaxCount}`);\n                }\n                this.$emit('error', `超出最大数量${this.selectMaxCount}`);\n                // 重新设置为非选中\n                item.checked = false;\n                //  返回添加失败标识\n                return false;\n            }\n            // 3. 添加数据\n            if (this.mCheckedCache.size < this.selectMaxCount) {\n                this.mCheckedCache.set(item[this.dKey], item);\n            }\n            // 4.如果触发事件\n            if (emitEvent) {\n                // 触发事件\n                this.mEmitEvent();\n            }\n            //  返回添加成功标识\n            return true;\n        },\n        // 删除选中条目\n        mDeleteCheckedItem(item, emitEvent = true, adjustParentCheckedStatus = true) {\n            // 1. 判断父级状态是否选中\n            if (adjustParentCheckedStatus) {\n                // 处理父级选中状态\n                this.operateParentCheckedStatus(item);\n            }\n            // 2.删除数据\n            this.mCheckedCache.delete(item[this.dKey]);\n            // 3.如果触发事件\n            if (emitEvent) {\n                // 触发事件\n                this.mEmitEvent();\n            }\n        },\n        // 设置当前选中的数据\n        mSetCurrentCheckedData() {\n            // 当前的值\n            const mCurrentValue = [];\n            // 当前的值对应的对象\n            const mCheckedData = [];\n            // 循环当前的Map数据列表\n            this.mCheckedCache.forEach((item, key) => {\n                // 添加到【当前的值】的数组\n                mCurrentValue.push(key);\n                // 添加到【当前的值对应的对象】的数组\n                mCheckedData.push(item);\n            });\n            // 1.当前的值\n            this.mSetCurrentValue(mCurrentValue);\n            // 2.当前的值对应的对象\n            this.mSetCheckedData(mCheckedData);\n        },\n        // 触发事件\n        mEmitEvent() {\n            // 1.设置当前选中的数据\n            this.mSetCurrentCheckedData();\n            // 2.发送消息到父级\n            this.$emit('select', this.mCurrentValue);\n            // 触发change 事件\n            this.$emit('change', this.mCheckedData);\n        }\n    }\n};\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\n *@version 1.0.0\n *@author wanghuifeng\n *@createTime 2020/12/24 - 10:57\n *@updateTime 2020/12/28 - 10:57\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\n @description  查询项主体内容\n */\n\n// 日期组\nimport dateGroup from './date-group/index.vue';\n// 选中值区域\nimport checkedArea from './checked-area/index.vue';\n// 级联组件\nimport cascadeConnection from './cascade-connection/index.vue';\n\n/**\n *      方法集合\n **********************/\n// 请求模块\nimport request from './request/request.js';\n// 右侧内容列表的源数据\nimport contentOriginData from './extend/contentOriginData.js';\n// 内容条目处理函数\nimport contentItemHandler from './extend/contentItemHandler.js';\n// 日期配置\nimport dateConfig from './extend/dateConfig.js';\n// 选择区域配置\nimport checkedAreaConfig from './extend/checkedAreaConfig.js';\n// 级联配置\nimport cascadeConnectionConfig from './extend/cascadeConnectionConfig.js';\n// 全局事件\nimport globalEvent from './extend/globalEvent.js';\n// 导出模块\nexport default {\n    // 组件\n    components: {dateGroup, checkedArea, cascadeConnection},\n    mixins: [globalEvent, request, contentOriginData, contentItemHandler, dateConfig, checkedAreaConfig, cascadeConnectionConfig],\n    props: {\n        // 是否显示查询项\n        showCxx: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            // 是否显示日志\n            showLog: window.fdConfig.showLog,\n            // 当前选中的条目\n            selectedItem: {name: ''},\n            // 是否是空数据\n            emptyContent: true,\n            // 当前选中的列表\n            checkedAreaList: [{\n                name: '工商银行',\n                id: '1'\n            }, {\n                name: '北京银行',\n                id: '2'\n            }],\n            isEmpty: false,\n            typeArr:['01']\n        };\n    },\n    computed: {\n        // 右侧的label变动\n        labelCategory() {\n            return (/^(004002002)$/).test(this.selectedItem.id) ? '城市'\n                : (/^(003001001|003001002)$/.test(this.selectedItem.id) ? '运营商' : '银行');\n        },\n        // 是否有搜素\n        hasSearch() {\n            // 运营商不需要搜索\n            return !(/^(003001001|003001002)$/).test(this.selectedItem.id);\n        },\n        // 是否显示提示\n        showWarningTips() {\n            // 话单信息，需要显示提示\n            return (/^(003001002)$/).test(this.selectedItem.id);\n        }\n    },\n    created() {\n        // 初始化的方法\n        this.init();\n    },\n    mounted() {\n        // 触发ready事件\n        this.$emit('ready', this);\n    },\n    methods: {\n        // 初始化的方法\n        init() {\n            // 1.初始化银行数据\n            // this.operateBankData();\n            // 2.初始化城市数据\n            // this.initCityData();\n            // 3.初始化通信数据\n            // this.initCommunicationData();\n        },\n        isEmptyy(val) {\n            this.isEmpty = val;\n        },\n        // 滚动条\n        readyScrollbar(scrollbar) {\n            // 滚动条\n            this.jsScrollbar = scrollbar;\n        },\n        // 重置内容数据\n        resetContent() {\n            // 重置滚动条位置\n            this.jsScrollbar.update(0, 0, null, false);\n            // this.setSelectedItem({});\n            this.checkedAreaList = [];\n            this.emptyContent = true;\n            // 重置时间组控件\n            this.resetDateGroup();\n        },\n\n        // 设置当前节点的选中列表\n        setCheckedAreaList(dataList, nodeItem = null) {\n            // 设置当前的选中列表，节点数据有id和name即可，无需无用的数据\n            const _checkedAreaList = dataList.map((item) => ({\n                id: item.id,\n                name: item.name\n            }));\n\n            // 当前的节点条目\n            const _currentNodeItem = nodeItem || this.selectedItem;\n            // 有可能出错，所以用try\n            try {\n                // 右侧选中的数据列表\n                _currentNodeItem.otherProperty.sjyList = _checkedAreaList;\n                // 设置节点的选中状态，如果存在开始时间，那么就选中该节点\n                _currentNodeItem.checked = _checkedAreaList.length > 0;\n                // 更新条目数据\n                this.jsTreeObject.mUpdateItemCheckedStatus(_currentNodeItem);\n            } catch (e) {\n                window.console.error('该条数据未增加otherProperty属性，属性添加依赖aside-tree,hasExtendArrowHandler函数');\n            }\n        },\n        // 设置是否是空数据\n        setEmptyContent(flag) {\n            this.emptyContent = flag;\n        },\n        //  触发change 方法\n        setSelectedItem(selectedItem) {\n            // 设置选中条目\n            this.selectedItem = selectedItem;\n            if (this.selectedItem.id === '002002001') {\n                if (this.typeArr.length != 0) {\n                    this.selectedItem.otherProperty.type = this.typeArr.join(',');\n                }\n            }\n        },\n        // 处理空内容\n        operateEmptyContent(selectedItem) {\n            // 4.【证监会】\n            // 证券持有 001003002\n            // 证券持有变动 001003003\n            // 航空信息 002002001\n            // 反洗钱 001002002\n            // 以上节点有箭头，但是无内容,所以需要隐藏\n            const _flag = (/^(001003002|001003003|002002001|001002002)$/).test(selectedItem.id);\n            // 设置是否显示内容， 非（【有箭头】但是不是【证监会】下的【证券持有】和【证券持有变动】）\n            this.setEmptyContent(!(this.selectedItem.hasExtendArrow && !_flag));\n            // 如果是证监会，需要单独处理\n            if (_flag) {\n                switch (selectedItem.id) {\n                    // 4.【证监会】\n                    // 证券持有\n                    case '001003002':\n                        this.zqcyItemHandler(selectedItem);\n                        break;\n                    // 证券持有变动\n                    case '001003003':\n                        this.zqcybdItemHandler(selectedItem);\n                        break;\n                    default:\n                        break;\n                }\n            }\n        },\n        selectType(type) {\n            if (this.typeArr) {\n                if (this.typeArr.indexOf(type) > -1) {\n                    this.typeArr.splice(this.typeArr.indexOf(type), 1);\n                } else {\n                    this.typeArr.push(type);\n                }\n            } else {\n                this.typeArr.push(type);\n            }\n            // 当前的节点条目\n            const _currentNodeItem = this.selectedItem;\n            // 右侧选中的数据列表\n            // _currentNodeItem.ztlb = this.typeArr.join(',');\n            _currentNodeItem.otherProperty.type = this.typeArr.join(',');\n            // 更新条目数据\n            // this.jsTreeObject.mUpdateItemCheckedStatus(_currentNodeItem);\n        }\n    }\n};\n\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=79e82d86&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fd-ac-cascade-connection\"},[(_vm.hasSearch)?_c('div',{staticClass:\"fd-auto-complete-contain\"},[_c('component-auto-complete',{attrs:{\"dName\":_vm.dName,\"localSearch\":false,\"limit\":_vm.limit,\"placeholder\":_vm.placeholderSearch,\"remoteRequestMethod\":_vm.remoteRequestMethod},on:{\"select\":_vm.slSelect},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar item = ref.item;\nreturn [_c('div',{staticClass:\"fd-list-item-text checkbox\",class:{checked:item.item.checked },domProps:{\"innerHTML\":_vm._s(item.label)}})]}}],null,false,1191206402),model:{value:(_vm.searchValue),callback:function ($$v) {_vm.searchValue=$$v},expression:\"searchValue\"}})],1):_vm._e(),_vm._v(\" \"),(_vm.showWarningTips)?_c('div',{staticClass:\"fd-warning-tip\",class:{'has-search':_vm.hasSearch },domProps:{\"textContent\":_vm._s(_vm.warningTips)}}):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"fd-ac-cascade-connection-content\"},_vm._l((_vm.currentDataList),function(item,index){return _c('dl',{key:item[_vm.dKey],staticClass:\"fd-cascade-connection-list\"},[_c('dt',[_c('h3',{staticClass:\"fd-title-name\",class:{\n                        checkbox:item.multiple,\n                        checked:item.checked,\n                    },domProps:{\"textContent\":_vm._s(item.name)},on:{\"click\":function($event){return _vm.clickSelectAll(item,index)}}})]),_vm._v(\" \"),_c('dd',[_c('ul',{staticClass:\"fd-checked-list\"},_vm._l((item[_vm.dChildren]),function(itemC,indexC){return _c('li',{key:itemC[_vm.dKey]+ indexC,staticClass:\"fd-list-item\",class:{\n                          checkbox: itemC.multiple,\n                          checked: itemC.checked,\n                          'not-allowed': itemC.disabled,\n                          active: item.kindActiveItem && item.kindActiveItem[_vm.dKey] === itemC[_vm.dKey]\n                        },attrs:{\"data-ellipsis\":_vm.adjustEllipsis(itemC)},on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.clickNodeItem(itemC, item)}}},[_c('span',{staticClass:\"fd-list-item-text\",domProps:{\"textContent\":_vm._s(itemC[_vm.dName])}})])}),0)]),_vm._v(\" \"),(item.kindActiveItem && item.kindActiveItem[_vm.dChildren] &&  item.kindActiveItem[_vm.dChildren].length)?_c('dd',[_c('ul',{staticClass:\"fd-checked-list\"},_vm._l((item.kindActiveItem[_vm.dChildren]),function(itemCC,indexCC){return _c('li',{key:itemCC[_vm.dKey] + indexCC,staticClass:\"fd-list-item\",class:{\n                           checkbox: itemCC.multiple,\n                           checked: itemCC.checked\n                         },attrs:{\"data-ellipsis\":_vm.adjustEllipsis(itemCC)},on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.clickNodeItem(itemCC, item)}}},[_c('span',{staticClass:\"fd-list-item-text\",domProps:{\"textContent\":_vm._s(itemCC[_vm.dName])}})])}),0)]):_vm._e()])}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020/12/24 - 10:57\r\n *@updateTime 2020/12/28 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description 全局事件模块\r\n */\r\n// 导出模块\r\nexport default {\r\n    created() {\r\n        // 绑定全局事件\r\n        this.bindGlobalEvent();\r\n    },\r\n    beforeDestroy() {\r\n        // 取消全局事件\r\n        this.unbindGlobalEvent();\r\n    },\r\n    methods: {\r\n        // 绑定全局事件\r\n        bindGlobalEvent() {\r\n            // 绑定设置 显示查询项弹出层\r\n            // this.globalBus.$on('global-spb-cxx-show', this.showCxxPopup);\r\n            this.globalBus.$on('global-spb-lefttree-cxx', this.isEmptyy);\r\n        },\r\n        // 取消全局事件\r\n        unbindGlobalEvent() {\r\n            // 取消绑定设置 显示查询项弹出层\r\n            // this.globalBus.$off('global-spb-cxx-show', this.showCxxPopup);\r\n            this.globalBus.$off('global-spb-lefttree-cxx', this.isEmptyy);\r\n        },\r\n        // 触发全局事件\r\n        emitGlobalEvent(callback) {\r\n            if (this.globalBus) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n *@file request\r\n *@version 1.0.1\r\n *@author wanghuifeng\r\n *@createTime 2020/12/28 - 11:03\r\n *@updateTime 2020/12/28 - 11:03\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  阅卷目录request （请求）相关\r\n @namespace  request   请求相关，后面加模块名\r\n 名字解释：\r\n _name ： 用 【模块名】 => 【子模块名】\r\n _method ： 请求的方法\r\n _showLog：  是否显示日志\r\n _url : 请求的url\r\n _data : 请求所需要的数据， 需要的参数名，全部在这里写好， 可以通过传参给对象赋值！\r\n _serverData : 服务器返回的数据\r\n\r\n 请求：\r\n 1. fd工程结构中自带此全局方法\r\n window.fdGlobal.ajax\r\n 2.可以单独使用\r\n axios\r\n\r\n 请求必须输出日志：\r\n 1. 请求日志\r\n window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n 2. 响应日志\r\n window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n\r\n ！important\r\n 请求函数返回一个promise,\r\n 为了性能需要，咱们需要内置性能日志！\r\n 按照以下结构编写即可！\r\n 以下是一个实际案例， 【请求模块】可以通过混入的方式，引入到组件的index.js 中\r\n\r\n request ：为命名空间\r\n TreeData：  为模块名\r\n showLog ： 在组件的 index.js  的data中写好，  如：{showLog: window.fdConfig.url.showLog}, 全局控制日志！\r\n\r\n\r\n */\r\nexport default {\r\n    methods: {\r\n        // 请求【查询项】=> 【右侧内容列表数据】\r\n        requestCxxContentListData(queryData) {\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal.performance.getCurrentTime();\r\n            return new Promise((resolve, reject) => {\r\n                const _showLog = this.showLog;\r\n                const _name = `【查询项】=> 【右侧内容列表数据】${queryData.code}`;\r\n                const _method = window.fdConfig.methodPost;\r\n                let _url = `${window.fdConfig.url.cxx.getContentList}?${new Date().getTime()}`;\r\n                // 如果是调试模式\r\n                if (window.fdConfig.isDebug) {\r\n                    _url = `${window.fdConfig.url.cxx.getContentList + queryData.code}.json`;\r\n                }\r\n                // 传输的数据\r\n                const _data = {\r\n                    // 查询code\r\n                    code: queryData.code,\r\n                    // 查询类型\r\n                    cxlx: queryData.cxlx,\r\n                    // 查询 qyCodeType\r\n                    qyCodeType: queryData.qyCodeType\r\n                };\r\n                // 输出日志\r\n                window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n                //  返回shuju\r\n                window.fdGlobal.ajax({\r\n                    method: _method,\r\n                    url: _url,\r\n                    // URL参数\r\n                    // 必须是一个纯对象或者 URL参数对象\r\n                    data: _data,\r\n                    // 默认值是json\r\n                    responseType: 'json'\r\n                })\r\n                    .then((data) => {\r\n                        const _serverData = data.data;\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        resolve(_serverData);\r\n                    }, (data) => {\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                        const _serverData = data.data;\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        reject(data);\r\n                    });\r\n            });\r\n        }\r\n    }\r\n};\r\n","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020//12/24 - 10:57\r\n *@updateTime 2020/12/31 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  查询项弹 => 内容区域源数据处理\r\n */\r\nexport default {\r\n    methods: {\r\n        // 销毁内容数据\r\n        destroyCacheContentData() {\r\n            // 如果存在这个对象，那么就手动进行销毁\r\n            if (Object.prototype.toString.call(this.contentObject, null) === '[object Object]') {\r\n                this.contentObject = null;\r\n            }\r\n        },\r\n        // 缓存内容需要的数据\r\n        cacheContentData(name, dataList) {\r\n            // 如果不存在这个对象，那么就手动创建这个对象\r\n            if (Object.prototype.toString.call(this.contentObject, null) !== '[object Object]') {\r\n                this.contentObject = {};\r\n            }\r\n            // 将内容需要的数据全部存到该对象\r\n            // 包含，城市， 银行， 和 通信\r\n            this.contentObject[name] = dataList;\r\n        },\r\n\r\n        // 获取右侧运营商内容数据列表\r\n        getContentListDataYys(id) {\r\n            return new Promise((resolve, reject) => {\r\n                // 因为运营商的数据需要联动，且是不同的数据源，\r\n                // 所以需要一次性全部【话单】和【登记】的数据， 并且进行缓存\r\n                // 获取远程数据列表\r\n                Promise.all([\r\n                    // 登记信息\r\n                    this.getRemoteContentListData('003001001'),\r\n                    // 话单信息\r\n                    this.getRemoteContentListData('003001002')\r\n                ]).then((data) => {\r\n                    //   003001001 登记信息 , 003001002 话单信息,\r\n                    resolve(id === '003001001' ? data[0] : data[1]);\r\n                }, (data) => {\r\n                    reject(data);\r\n                });\r\n            });\r\n        },\r\n        // 获取右侧内容数据列表\r\n        getContentListData(id) {\r\n            return new Promise((resolve, reject) => {\r\n                // 如果存在缓存数据，直接返回，否则去后端查询数据\r\n                // if (this.contentObject && Array.isArray(this.contentObject[id])) {\r\n                // resolve(this.contentObject[id]);\r\n                // } else {\r\n                // 获取远程数据列表\r\n                this.getRemoteContentListData(id).then((data) => {\r\n                    resolve(data);\r\n                }, (data) => {\r\n                    reject(data);\r\n                });\r\n                // }\r\n            });\r\n        },\r\n        // 获取远程内容数据列表，说白了就是需要远程请求数据\r\n        getRemoteContentListData(id) {\r\n            return new Promise((resolve, reject) => {\r\n                // 找到左侧树节点\r\n                const _targetItem = this.jsTreeObject.cGetCache(id);\r\n                // 存在左侧树节点，才走下面\r\n                if (_targetItem) {\r\n                    // 树节点的id\r\n                    const _code = _targetItem.id;\r\n                    // 类型，自然人 = 01， 企业/ 02 ， 其他(涵盖【银行账/卡号04】【手机号05】等等)\r\n                    const _cxlx = (/^01|02$/igm).test(this.dCurrentCxxDataItem.category) ? this.dCurrentCxxDataItem.category : this.dCurrentCxxDataItem.childCategory;\r\n                    // 树节点上的 qyCodeType\r\n                    const _qyCodeType = _targetItem.qyCodeType;\r\n                    // 查询数据\r\n                    const queryData = {\r\n                        // 查询code\r\n                        code: _code,\r\n                        // 查询类型\r\n                        cxlx: _cxlx,\r\n                        // 查询 qyCodeType\r\n                        qyCodeType: _qyCodeType\r\n                    };\r\n                    // 请求【查询项】=> 【通信数据】\r\n                    this.requestCxxContentListData(queryData).then((serverData) => {\r\n                        // 缓存数据\r\n                        this.cacheContentData(queryData.code, serverData.data);\r\n                        // 成功\r\n                        resolve(serverData.data);\r\n                    }, (data) => {\r\n                        // 失败\r\n                        reject(data);\r\n                    });\r\n                } else {\r\n                    // 失败\r\n                    reject(new Error(`${id}不正确，左侧树上不存在该节点`));\r\n                }\r\n            });\r\n        },\r\n        // 监听左侧树数据改变\r\n        watchSelectItem(selectItem, asideTree, dCurrentCxxDataItem) {\r\n            // 左侧树对象\r\n            this.jsTreeObject = asideTree;\r\n            // 当前查询条目数据\r\n            this.dCurrentCxxDataItem = dCurrentCxxDataItem;\r\n            // 注意顺序不可换！important\r\n            // 1. 设置当前的选中条目\r\n            this.setSelectedItem(selectItem);\r\n            // 2. 处理时间控件\r\n            this.operateDateGroup(selectItem);\r\n            // 3. 处理空内容\r\n            this.operateEmptyContent(selectItem);\r\n            // 3. 空数据就不需要往下处理\r\n            if (!this.emptyContent) {\r\n                // 3.1. 重置选择区域控件\r\n                this.operateCheckedArea();\r\n                // 3.2. 根据选中条目的id，判断右侧显示什么列表\r\n                switch (selectItem.id) {\r\n                    // 1.【银行金融机构】\r\n                    // 账户信息\r\n                    case '001001001':\r\n                        // [账户信息]处理函数\r\n                        this.zhxxItemHandler(selectItem.id);\r\n                        break;\r\n                    // 交易流水\r\n                    case '001001002':\r\n                        this.yjlsItemHandler(selectItem.id);\r\n                        break;\r\n                    // 金融理财\r\n                    case '001001003':\r\n                        this.jrlcItemHandler(selectItem.id);\r\n                        break;\r\n                    // 2.【工信部】\r\n                    // 登记信息\r\n                    case '003001001':\r\n                        this.djxxItemHandler(selectItem.id);\r\n                        break;\r\n                    // 话单信息\r\n                    case '003001002':\r\n                        this.hdxxItemHandler(selectItem.id);\r\n                        break;\r\n                    // 3.【自然资源部】\r\n                    // 不动产精准查询\r\n                    case '004002002':\r\n                        this.bdcjzcxItemHandler(selectItem.id);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\n *@version 1.0.0\n *@author wanghuifeng\n *@createTime 2020//12/24 - 10:57\n *@updateTime 2020/12/31 - 10:57\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\n @description  查询项弹 => 内容区域=> 内容条目处理\n */\nexport default {\n    data() {\n        return {};\n    },\n    methods: {\n        // 【银行金融机构】处理函数\n        yhjrjgHandler(id) {\n            // 获取右侧数据\n            this.getContentListData(id)\n                .then((dataList) => {\n                    // 更新级联动组件\n                    this.updateCascadeConnection(dataList, (jsCascadeConnection, _checkedDatalist) => {\n                        // 2.1  如果未选中，那么应该默认选中【全国银行】\n                        if (_checkedDatalist.length === 0) {\n                            // 获取全国银行数据条目\n                            // const _targetItem = jsCascadeConnection.cGetCache('1');\n                            // 点击全选\n                            // jsCascadeConnection.clickSelectAll(_targetItem);\n                            // 2.2  设置默认的值\n                        } else {\n                            // 3. 设置当前选中的值\n                            jsCascadeConnection.mWatchValueHandle(_checkedDatalist);\n                        }\n                    });\n                });\n        },\n        // 1.【银行金融机构】\n        // 账户信息\n        zhxxItemHandler(id) {\n            // 1. 设置数据\n            this.yhjrjgHandler(id);\n        },\n        // 交易流水\n        yjlsItemHandler(id) {\n            // 1. 设置数据\n            this.yhjrjgHandler(id);\n        },\n        // 金融理财\n        jrlcItemHandler(id) {\n            this.yhjrjgHandler(id);\n        },\n        // 【运营商】处理函数\n        yysHandler(id) {\n            //  获取运行商的对应的右侧数据列表\n            this.getContentListDataYys(id)\n                .then((dataList) => {\n                    if (id === '003001002') {\n                        dataList.forEach(item => {\n                            item.children = item.children.filter(xcdw => {\n                                return xcdw.name !== '虚拟运营商';\n                            });\n                        });\n                    }\n                    // 话单信息的数据列表禁止单选，只允许全选\n                    const _dataList = id === '003001002' ? this.transformHdxxList(dataList) : this.transformDjxxList(dataList);\n                    // 更新级联动组件\n                    this.updateCascadeConnection(_dataList, (jsCascadeConnection, _checkedDatalist) => {\n                        // 2.1  如果未选中，那么应该默认选中【运营商】\n                        if (_checkedDatalist.length === 0) {\n                            // 获取运营商数据条目\n                            const _targetItem = jsCascadeConnection.cGetCache('1');\n                            // 点击全选\n                            jsCascadeConnection.clickSelectAll(_targetItem);\n                            // 2.2  设置默认的值\n                        } else {\n                            // 3. 设置当前选中的值\n                            jsCascadeConnection.mWatchValueHandle(_checkedDatalist);\n                        }\n                    });\n                });\n        },\n        // 转换【登記信息】的列表\n        // 1. 如果【话单信息】的子数据选中了，那么【登记信息】相应的数据应该增加disabled 属性\n        // 2.  如果没有选择【话单信息】，那么【登记信息】子数据不需要增加disabled 属性\n        //  因为【需求】【话单信息】的子数据不能进行单独删除。\n        transformDjxxList(dataList) {\n            // 1. 获取【话单信息】节点数据\n            const _hdxxNodeItem = this.jsTreeObject.cGetCache('003001002');\n            // 获取【话单信息】当前选中的节点数量\n            const _sjyList = _hdxxNodeItem.otherProperty.sjyList;\n            let _dataList = dataList;\n            // 如果选中列表大于0， 说明话单信息有选中的数据\n            //  查询对象等于【其他】=>【手机号】时, 【登记信息】和【话单信息】不需要联动，其他情况需要联动\n            if (Array.isArray(_sjyList) && _sjyList.length > 0 && this.dCurrentCxxDataItem.childCategory !== '05') {\n                // 获取当选中的keys\n                const _sjyListKeys = _sjyList.map((item) => item.id);\n                // 转义数据\n                _dataList = JSON.parse(JSON.stringify(dataList));\n                if (Array.isArray(_dataList) && _dataList.length) {\n                    _dataList[0].children.forEach((item) => {\n                        if (_sjyListKeys.indexOf(item.id) !== -1) {\n                            // 条目设置禁用\n                            item.disabled = true;\n                        }\n                    });\n                }\n            }\n            return _dataList;\n        },\n        // 转换【话单信息】的列表\n        //  话单信息的子数据禁用选中，所以增加disabled 属性\n        transformHdxxList(dataList) {\n            const _dataList = JSON.parse(JSON.stringify(dataList));\n            if (Array.isArray(_dataList) && _dataList.length) {\n                _dataList[0].children.forEach((item) => {\n                    // 条目设置禁用\n                    item.disabled = true;\n                });\n            }\n            return _dataList;\n        },\n        // 2.【电信运营商】,\n        // 2.1 登记信息\n        djxxItemHandler(id) {\n            // 【运营商】处理函数\n            this.yysHandler(id);\n        },\n        // 2.2 话单信息\n        hdxxItemHandler(id) {\n            // 话单信息没有 【214平台】 4\n            // 【运营商】处理函数\n            this.yysHandler(id);\n        },\n        // 3.【自然资源部】\n        // 不动产精准查询\n        bdcjzcxItemHandler(id) {\n            // 获取右侧数据咧白哦\n            this.getContentListData(id)\n                .then((dataList) => {\n                    // 更新级联动组件\n                    this.updateCascadeConnection(dataList, (jsCascadeConnection, _checkedDatalist) => {\n                        // 判断当前是否有选中的了列表\n                        if (_checkedDatalist.length !== 0) {\n                            // 3. 设置当前选中的值\n                            jsCascadeConnection.mWatchValueHandle(_checkedDatalist);\n                        }\n                    });\n                });\n        },\n        // 4.【证监会】\n        // 【证监会】 => 证券持有\n        zqcyItemHandler(selectedItem) {\n            // 如果未选中的，说明没有值，那么给与【默认值】\n            if (!selectedItem.checked) {\n                // 设置开始时间, 开始时间默认当前日期的时间的前一天\n                this.updateDateGroup(Date.now() - 86400000, ''); // eslint-disable-line\n            }\n        },\n        // 【证监会】 =>  证券持有变动\n        zqcybdItemHandler(selectedItem) {\n            // 如果未选中的，说明没有值，那么给与【默认值】\n            if (!selectedItem.checked) {\n                // 开始时间是近10年（当前时间是2021.1.15，那么开始时间默认应该是2011.1.15）\n                const currentStartDate = new Date().setFullYear(new Date().getFullYear() - 10); // eslint-disable-line\n                // 设置开始时间， 开始时间和结束时间，默认当前日期的时间\n                this.updateDateGroup(currentStartDate, Date.now());\n            }\n        }\n    }\n};\n","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020//12/24 - 10:57\r\n *@updateTime 2020/12/31 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  查询项弹 => 内容区域 => 日期相关的配置\r\n */\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            // 是否显示结束时间\r\n            showEndDate: true,\r\n            // 是否显示时间组组件的标识\r\n            showDateGroup: false,\r\n            // 开始时间\r\n            startDate: Date.now(),\r\n            // 结束时间\r\n            // 86400000 为一天的毫秒数 = 24*60*60*1000\r\n            endDate: Date.now() + 86400000,\r\n            // 开始时间的标签\r\n            startDateLabel: '起止时间',\r\n            // 结束时间的标签\r\n            endDateLabel: '至'\r\n        };\r\n    },\r\n    methods: {\r\n        // 时间组组件 ready\r\n        readyDateGroup(dateGroupObject) {\r\n            this.jsDateGroup = dateGroupObject;\r\n        },\r\n        // 设置是否显示时间组组件的标识\r\n        setShowDateGroupStatus(flag) {\r\n            this.showDateGroup = flag;\r\n        },\r\n        // 更新时间组控件\r\n        updateDateGroup(startDate, endDate) {\r\n            this.jsDateGroup.update(startDate, endDate);\r\n        },\r\n        // 重置时间组控件\r\n        resetDateGroup() {\r\n            this.updateDateGroup('', '');\r\n        },\r\n        // 处理事件控件的值\r\n        operateDateGroup(selectedItem) {\r\n            // 【银行金融机构】=>交易流水 001001002\r\n            // 【证监会】=>证券持有 001003002\r\n            // 【证监会】=>证券持有变动 001003003\r\n            // 【人民银行】=>反洗钱 001002002\r\n            const flag = (/^(001001002|001003002|001003003|001002002)$/igm).test(selectedItem.id);\r\n            // 1. 设置显示状态\r\n            // 显示日期控件\r\n            this.setShowDateGroupStatus(flag);\r\n            // 只有显示日期控件才会走下面的方法\r\n            if (flag) {\r\n                // 2.重置时间组控件\r\n                this.resetDateGroup();\r\n                // 3. 如果存在其他属性\r\n                if (selectedItem.otherProperty) {\r\n                    const startDate = selectedItem.otherProperty.startDate || '';\r\n                    const endDate = selectedItem.otherProperty.endDate || '';\r\n                    // 更新时间控件值\r\n                    this.updateDateGroup(startDate, endDate);\r\n                }\r\n                // 4.设置标签名\r\n                this.setDateLabel(selectedItem.id);\r\n            }\r\n        },\r\n        // 设置是否显示结束时间\r\n        setShowEndDate(flag) {\r\n            this.showEndDate = flag;\r\n        },\r\n        // 设置标签名\r\n        setDateLabel(id) {\r\n            // 全部显示结束时间\r\n            this.setShowEndDate(true);\r\n            // 根据id判断处理其他情况\r\n            switch (id) {\r\n                // 【银行金融机构】=>交易流水 001001002\r\n                case '001001002':\r\n                    // 开始时间的标签\r\n                    this.startDateLabel = '起止时间';\r\n                    // 结束时间的标签\r\n                    this.endDateLabel = '至';\r\n                    break;\r\n                // 【证监会】=>证券持有 001003002\r\n                case '001003002':\r\n                    // 开始时间的标签\r\n                    this.startDateLabel = '<em class = \"required\">*</em>证券持有时间';\r\n                    // 证券持有 不显示结束日期\r\n                    this.setShowEndDate(false);\r\n                    break;\r\n                // 【证监会】=>证券持有变动 001003003\r\n                case '001003003':\r\n                    // 开始时间的标签\r\n                    this.startDateLabel = '<em class = \"required\">*</em>开始时间';\r\n                    // 结束时间的标签\r\n                    this.endDateLabel = '结束时间';\r\n                    break;\r\n                // 【人行反洗钱】=>反洗钱 001002002\r\n                case '001002002':\r\n                    // 开始时间的标签\r\n                    this.startDateLabel = '起止时间';\r\n                    // 结束时间的标签\r\n                    this.endDateLabel = '至';\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        },\r\n        // 改变时间的处理函数\r\n        changeDate(startDate, endDate) {\r\n            // 开始时间\r\n            this.startDate = startDate;\r\n            // 开始时间\r\n            this.selectedItem.otherProperty.startDate = startDate;\r\n            // 结束时间如果是字符串\r\n            if (typeof endDate === 'string') {\r\n                // 结束时间\r\n                this.endDate = endDate;\r\n                // 结束时间\r\n                this.selectedItem.otherProperty.endDate = endDate;\r\n            }\r\n            switch (this.selectedItem.id) {\r\n                // 【商业银行】===》【交易流水】\r\n                case '001001002':\r\n                    // 1. 如果是【交易流水】，时间改变，不需要改变选中标志\r\n                    // 2. 如果是【交易流水】没有选中标志，选择日期了，再切换到【交易流水】，需要清空日期\r\n                    break;\r\n                // 【证监会】===》【证券持有变动】\r\n                case '001003003':\r\n                    // 如果是【证券持有变动】，只删除开始时间，选中标志不清除\r\n                    // 如果是【证券持有变动】, 只删除结束时间，选中标志不清除\r\n                    // 如果是【证券持有变动】，开始时间和结束时间都删除，选中标志需要清除\r\n\r\n                    break;\r\n                // 【人民银行】===》【反洗钱】\r\n                case '001002002':\r\n                    // 1. 如果是【反洗钱】，时间改变，不需要改变选中标志\r\n                    // 2. 如果是【反洗钱】没有选中标志，选择日期了，再切换到【反洗钱】，需要清空日期\r\n                    break;\r\n                default:\r\n                    // 设置节点的选中状态，如果存在开始时间，那么就选中该节点\r\n                    //  this.selectedItem.checked = Boolean(this.startDate);\r\n                    break;\r\n            }\r\n            // 更新条目数据\r\n            // this.jsTreeObject.mUpdateItemCheckedStatus(this.selectedItem);\r\n        },\r\n        tipsHandler(info) {\r\n            this.emitGlobalEvent(() => {\r\n                // 发送全局事件\r\n                this.globalBus.$emit('global-spb-invalid', info, 'warning');\r\n            });\r\n        }\r\n    }\r\n};\r\n","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020//12/24 - 10:57\r\n *@updateTime 2020/12/31 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  查询项弹 => 内容区域 => 选择区域配置\r\n */\r\nexport default {\r\n    methods: {\r\n\r\n        // 选择区域组件 ready\r\n        readyCheckedArea(checkedAreaObject) {\r\n            this.jsCheckedArea = checkedAreaObject;\r\n        },\r\n\r\n        // 更新选择区域当前多选的值\r\n        updateCheckedArea(dataList) {\r\n            // 更新选中区域\r\n            this.jsCheckedArea.update(dataList);\r\n        },\r\n        // 重置选择区域当前多选的值\r\n        resetCheckedArea() {\r\n            // 更新选中区域\r\n            this.jsCheckedArea.update([]);\r\n        },\r\n        // 选择区域的处理函数\r\n        operateCheckedArea() {\r\n            // 1.重置选择区域当前多选的值\r\n            this.resetCheckedArea();\r\n        },\r\n        // 改变当前多选的值\r\n        changeCheckedArea(dataList) {\r\n            // 1.设置当前选中的列表\r\n            this.setCheckedAreaList(dataList);\r\n            // 2. 更新【级联组件】选中状态\r\n            this.updateCascadeConnectionChecked(dataList);\r\n        }\r\n    }\r\n};\r\n","/**\n *@version 1.0.0\n *@author wanghuifeng\n *@createTime 2020//12/24 - 10:57\n *@updateTime 2020/12/31 - 10:57\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\n @description  查询项弹 => 内容区域 => 级联组件配置\n */\n\nexport default {\n\n    methods: {\n        // 级联组件 ready\n        readyCascadeConnection(cascadeConnectionObject) {\n            this.jsCascadeConnection = cascadeConnectionObject;\n        },\n        // 更新级联组件的【列表数据】\n        updateCascadeConnection(dataList, callback) {\n            // 1. 更新【级联组件】的数据列表，此时数据列表为银行\n            this.jsCascadeConnection.update(dataList, () => {\n                if (typeof callback === 'function') {\n                    // 2. 设置默认的选中值\n                    let _checkedDatalist = [];\n                    if (this.selectedItem && this.selectedItem.otherProperty) {\n                        // 2.1  当前选中的值\n                        _checkedDatalist = this.selectedItem.otherProperty.sjyList || [];\n                    }\n                    // 执行回调函数\n                    callback(this.jsCascadeConnection, _checkedDatalist);\n                }\n            });\n        },\n        // 更新级联组件【选中状态】\n        updateCascadeConnectionChecked(checkedDataList) {\n            this.jsCascadeConnection.mWatchValueHandle(checkedDataList);\n        },\n        // 当前选中的数据\n        changeCascadeConnection(dataList) {\n            if (this.selectedItem.id === '003001002') {\n                // eslint-disable-next-line no-param-reassign\n                dataList = dataList.filter(item => {\n                    return item.name !== '虚拟运营商';\n                });\n            }\n            // 1.设置当前选中的列表\n            this.setCheckedAreaList(dataList);\n            // 2.更新【选择区域组件】\n            this.updateCheckedArea(dataList);\n            // 3. 处理关联项的数据\n            this.operateConnectItemData(dataList);\n        },\n        // 处理关联项的的数据\n        operateConnectItemData(dataList) {\n            // 3.2. 根据选中条目的id，判断右侧显示什么列表\n            switch (this.selectedItem.id) {\n                // 1.【工信部】\n                // 登记信息\n                case '003001001':\n                    // 【登记信息】关联处理函数\n                    this.djxxItemConnectHandler(dataList);\n                    break;\n                // 话单信息\n                case '003001002':\n                    // 【话单信息】关联处理函数\n                    this.hdxxItemConnectHandler(dataList);\n                    break;\n                default:\n                    break;\n            }\n        },\n        // 【登记信息】关联处理函数\n        djxxItemConnectHandler(dataList) {\n            // 一、【需求点】\n            // 1. 选中【登记信息】， 无需处理【话单信息】\n            // 2. 取消单个【登记信息】选中， 无需处理【话单信息】\n            // 3. 如果取消了全部选中【登记信息】， 如果【话单信息】有选中的话，那么应该清除【话单信息】的选中\n\n            // 二、【逻辑实现】\n            // 如果【登记信息】当前选中的节点数 === 0, 说明已经没有选中的数据条目了\n            // 查询对象等于【其他】=>【手机号】时, 【登记信息】和【话单信息】不需要联动，其他情况需要联动\n            if (dataList.length === 0 && this.dCurrentCxxDataItem.category !== '05') {\n                // 1. 获取【话单信息】节点数据\n                const _hdxxNodeItem = this.jsTreeObject.cGetCache('003001002');\n                // 获取【话单信息】当前选中的节点数量\n                const _sjyList = _hdxxNodeItem.otherProperty.sjyList;\n                //  如果取消了全部选中【登记信息】，\n                // 如果【话单信息】有选中的话，那么应该清除【话单信息】的选中\n                if (Array.isArray(_sjyList) && _sjyList.length > 0) {\n                    // 清空选中的数据条目\n                    const _dataList = [];\n                    // 设置节点条目上的选中节点列表\n                    this.setCheckedAreaList(_dataList, _hdxxNodeItem);\n                }\n                // 全部清空后，需要把数据的disabled 属性去掉，\n                // 可以直接调用数组更新方法， 也可以直接删除数据的属性\n                // 更新数据更简单, 可以从缓存对象 contentObject 中直接取 003001001的内容列表\n                this.updateCascadeConnection(this.contentObject['003001001']);\n            }\n        },\n        // 【话单信息】关联处理函数\n        hdxxItemConnectHandler(dataList) {\n            // 一、【需求点】\n            // 1. 选中【话单信息】， 如果【登记信息】【没有选中】的话， 【登记信息】应该默认选中【电信，移动，联通】\n            // 2. 选中【话单信息】， 如果【登记信息】【有选中】\n            // 2.1 如果【虚拟运营商】无选中：那么【登记信息】应该默认选中【电信，移动，联通】\n            // 2.2 如果【虚拟运营商】有选中：那么【登记信息】应该默认选中【电信，移动，联通】+ 【虚拟运营商】\n            // 3. 取消选中【话单信息】， 如果【登记信息】有选中的话，那么【登记信息】保持【不变】\n            // 二、【逻辑实现】\n            // 如果【话单信息】当前选中的节点数大于0, 说明有选中的数据条目\n            // 查询对象等于【其他】=>【手机号】时, 【登记信息】和【话单信息】不需要联动，其他情况需要联动\n            if (dataList.length > 0 && this.dCurrentCxxDataItem.childCategory !== '05') {\n                // 1. 获取【登记信息】节点数据\n                const _djxxNodeItem = this.jsTreeObject.cGetCache('003001001');\n                // 2. 获取【登记信息】当前选中的节点数量\n                const _sjyList = _djxxNodeItem.otherProperty.sjyList;\n                // 用于存储获取的选中的数据列表\n                let _dataList = [];\n                // 3. 如果没有选中或者选中的节点数存在并且没有虚拟运营商的数据\n                // 如果不是数组，代表没有默认值，\n                // 是数组的话， 需要判断当前数据的长度是否等于0\n                if (!Array.isArray(_sjyList) || _sjyList && !this.adjustExist(_sjyList, 'TX000004')) {\n                    // 获取缓存的登记信息列表数据，取出旗下的子数据\n                    // const _dataList = this.contentObject['003001001'][0].children;\n                    // 3.1.选中话单信息， 默认需要选中登记信息\n                    _dataList = JSON.parse(JSON.stringify(dataList));\n                } else {\n                    // 【虚拟运营商存在】\n                    // 3.2 获取缓存的登记信息列表数据，取出旗下的子数据\n                    _dataList = JSON.parse(JSON.stringify(this.contentObject['003001001'][0].children));\n                }\n                // 4. 设置节点条目上的选中节点列表\n                this.setCheckedAreaList(_dataList, _djxxNodeItem);\n            }\n        },\n        // 判断数据列表中是否存在某条数据\n        adjustExist(dataList, id) {\n            return dataList.some((item) => item.id === id);\n        }\n    }\n};\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020//12/24 - 10:57\r\n *@updateTime 2020/12/31 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  查询项弹出层入口\r\n */\r\n/**\r\n *      组件集合\r\n **********************/\r\n// 左侧树\r\nimport asideTree from './aside-tree/index.vue';\r\n// 右侧内容\r\nimport cxxContent from './cxx-content/index.vue';\r\n\r\n/**\r\n *      方法集合\r\n **********************/\r\n// 请求模块\r\nimport request from './request/request.js';\r\n// 左侧树配置\r\nimport asideTreeConfig from './extend/asideTreeConfig.js';\r\n// 内容组件\r\nimport contentConfig from './extend/contentConfig.js';\r\n// 数据处理\r\nimport dOperate from './extend/dOperate.js';\r\n// 弹出层配置\r\nimport popupConfig from './extend/popupConfig.js';\r\n// 全局事件\r\nimport globalEvent from './extend/globalEvent.js';\r\n// 导出模块\r\nexport default {\r\n    // 外部组件\r\n    components: {asideTree, cxxContent},\r\n    mixins: [globalEvent, request, asideTreeConfig, contentConfig, dOperate, popupConfig],\r\n    props: {\r\n        // 是否显示查询项\r\n        showCxx: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            // 是否显示日志\r\n            showLog: window.fdConfig.showLog,\r\n            // 是否显示右侧区域\r\n            showMainArea: true,\r\n            // 选中超出数量后的提示\r\n            isShowCheckedTip: false\r\n        };\r\n    },\r\n    created() {\r\n        // 初始化函数\r\n        this.init();\r\n    },\r\n    methods: {\r\n        // 初始化函数\r\n        init() {\r\n            // 1.初始化树数据\r\n            this.initTreeData();\r\n        },\r\n\r\n        // 显示|隐藏， 内容区域\r\n        clickToggleContentArea: function (flag) {\r\n            this.showMainArea = flag;\r\n        }\r\n    }\r\n};\r\n\r\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=9f05f6c2&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fd-cxx-content-box\"},[(!_vm.isEmpty && !_vm.selectedItem.name)?_c('span',{staticClass:\"fd-empty-tips\"},[_vm._v(\"请选择左侧的查询项栏目!\")]):_vm._e(),_vm._v(\" \"),(_vm.isEmpty)?_c('span',{staticClass:\"fd-empty-tips\"},[_vm._v(\"抱歉，您未被授予该查询项权限!\")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"fd-cxx-header\",class:{hide: !_vm.selectedItem.name}},[_c('div',{staticClass:\"fd-cxx-header-title\"},[_c('span',{staticClass:\"fd-name\",domProps:{\"textContent\":_vm._s(_vm.selectedItem.name)}}),_vm._v(\" \"),_c('dateGroup',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showDateGroup),expression:\"showDateGroup\"}],attrs:{\"startLabel\":_vm.startDateLabel,\"endLabel\":_vm.endDateLabel,\"showEndDate\":_vm.showEndDate,\"tipsHandler\":_vm.tipsHandler},on:{\"change\":_vm.changeDate,\"ready\":_vm.readyDateGroup}}),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.selectedItem.id=='002002001'),expression:\"selectedItem.id=='002002001'\"}]},[_c('input',{staticStyle:{\"margin-left\":\"25px\",\"margin-right\":\"2px\"},attrs:{\"type\":\"checkbox\",\"name\":\"gender\",\"checked\":\"\",\"value\":\"01\"},on:{\"click\":function($event){return _vm.selectType('01')}}}),_vm._v(\" \"),_c('label',{staticClass:\"fd-date-label\"},[_vm._v(\"三年内\")]),_vm._v(\" \"),_c('input',{staticStyle:{\"margin-left\":\"100px\",\"margin-right\":\"2px\"},attrs:{\"type\":\"checkbox\",\"name\":\"gender\",\"value\":\"02\"},on:{\"click\":function($event){return _vm.selectType('02')}}}),_vm._v(\" \"),_c('label',{staticClass:\"fd-date-label\"},[_vm._v(\"三年到十年\")]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"red\",\"margin-left\":\"10px\",\"font-size\":\"17px\"}},[_vm._v(\"一般一周内反馈\")])])],1)]),_vm._v(\" \"),_c('div',{staticClass:\"fd-cxx-content\",class:{hide: _vm.emptyContent}},[_c('component-scrollbar',{attrs:{\"show\":false},on:{\"ready\":_vm.readyScrollbar}},[_c('checkedArea',{attrs:{\"labelCategory\":_vm.labelCategory},on:{\"change\":_vm.changeCheckedArea,\"ready\":_vm.readyCheckedArea}}),_vm._v(\" \"),_c('cascadeConnection',{attrs:{\"hasSearch\":_vm.hasSearch,\"showWarningTips\":_vm.showWarningTips},on:{\"ready\":_vm.readyCascadeConnection,\"change\":_vm.changeCascadeConnection}})],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020/12/24 - 10:57\r\n *@updateTime 2020/12/28 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description 全局事件模块\r\n */\r\n// 导出模块\r\nexport default {\r\n    created() {\r\n        // 绑定全局事件\r\n        this.bindGlobalEvent();\r\n    },\r\n    beforeDestroy() {\r\n        // 取消全局事件\r\n        this.unbindGlobalEvent();\r\n    },\r\n    methods: {\r\n        // 绑定全局事件\r\n        bindGlobalEvent() {\r\n            // 绑定设置 显示查询项弹出层\r\n            this.globalBus.$on('global-spb-cxx-show', this.showCxxPopup);\r\n        },\r\n        // 取消全局事件\r\n        unbindGlobalEvent() {\r\n            // 取消绑定设置 显示查询项弹出层\r\n            this.globalBus.$off('global-spb-cxx-show', this.showCxxPopup);\r\n        },\r\n        // 触发全局事件\r\n        emitGlobalEvent(callback) {\r\n            if (this.globalBus) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n *@file request\r\n *@version 1.0.1\r\n *@author wanghuifeng\r\n *@createTime 2020/12/28 - 11:03\r\n *@updateTime 2020/12/28 - 11:03\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  阅卷目录request （请求）相关\r\n @namespace  request   请求相关，后面加模块名\r\n 名字解释：\r\n _name ： 用 【模块名】 => 【子模块名】\r\n _method ： 请求的方法\r\n _showLog：  是否显示日志\r\n _url : 请求的url\r\n _data : 请求所需要的数据， 需要的参数名，全部在这里写好， 可以通过传参给对象赋值！\r\n _serverData : 服务器返回的数据\r\n\r\n 请求：\r\n 1. fd工程结构中自带此全局方法\r\n window.fdGlobal.ajax\r\n 2.可以单独使用\r\n axios\r\n\r\n 请求必须输出日志：\r\n 1. 请求日志\r\n window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n 2. 响应日志\r\n window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n\r\n ！important\r\n 请求函数返回一个promise,\r\n 为了性能需要，咱们需要内置性能日志！\r\n 按照以下结构编写即可！\r\n 以下是一个实际案例， 【请求模块】可以通过混入的方式，引入到组件的index.js 中\r\n\r\n request ：为命名空间\r\n TreeData：  为模块名\r\n showLog ： 在组件的 index.js  的data中写好，  如：{showLog: window.fdConfig.url.showLog}, 全局控制日志！\r\n\r\n\r\n */\r\nexport default {\r\n    methods: {\r\n        // 请求【查询项】=> 【左侧树数据】\r\n        requestCxxAsideTreeData() {\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal.performance.getCurrentTime();\r\n            return new Promise((resolve, reject) => {\r\n                const _showLog = this.showLog;\r\n                const _name = '【查询项】=> 【左侧树数据】';\r\n                const _method = window.fdConfig.methodGet;\r\n                const _url = `${window.fdConfig.url.cxx.getCxxAsideTree}?${new Date().getTime()}`;\r\n                const _data = {};\r\n                // 输出日志\r\n                window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n                //  返回shuju\r\n                window.fdGlobal.ajax({\r\n                    method: _method,\r\n                    url: _url,\r\n                    // URL参数\r\n                    // 必须是一个纯对象或者 URL参数对象\r\n                    params: _data,\r\n                    // 默认值是json\r\n                    responseType: 'json'\r\n                })\r\n                    .then((data) => {\r\n                        const _serverData = data.data;\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        resolve(_serverData);\r\n                    }, (data) => {\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                        const _serverData = data.data;\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        reject(data);\r\n                    });\r\n            });\r\n        }\r\n    }\r\n};\r\n","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020//12/24 - 10:57\r\n *@updateTime 2020/12/29 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  查询项弹出层  => 左侧树\r\n */\r\nexport default {\r\n    methods: {\r\n        // 初始化树数据\r\n        initTreeData() {\r\n            // 请求树数据\r\n            this.requestCxxAsideTreeData()\r\n                .then(serverData => {\r\n                    // 左侧树数据\r\n                    this.jsTreeDataList = serverData.data;\r\n                    // 更新树数据\r\n                    this.jsTreeObject.update(this.jsTreeDataList);\r\n                });\r\n        },\r\n        // 左侧导航树型组件\r\n        readyTree(treeObject) {\r\n            this.jsTreeObject = treeObject;\r\n        },\r\n        // 更新树数据，包含状态\r\n        updateTree(dataItem) {\r\n            // 更新数据\r\n            this.jsTreeObject.update(\r\n                this.jsTreeDataList,\r\n                this.dCurrentCxxDataItem,\r\n                () => {\r\n                    // 初始化默认选中的值\r\n                    this.jsTreeObject.mWatchValueHandle(dataItem.cxxList);\r\n                }\r\n            );\r\n        },\r\n        // 选中的树节点\r\n        selectTree(item) {\r\n            // 1. 设置前一个选中条目\r\n            this.dSetPreSelectedItem(this.dSelectedItem);\r\n            // 2. 设置当前选中条目\r\n            this.dSetSelectedItem(item);\r\n            // 3. 处理关联项的数据\r\n            this.operateConnectItemData(item);\r\n        },\r\n        // 当前选中的值\r\n        changeTree(checkedDataList) {\r\n            // console.log(checkedDataList);\r\n            // 1. 设置当前的数据列表\r\n            this.dSetCxxList(checkedDataList);\r\n        },\r\n        // 处理关联项的的数据\r\n        operateConnectItemData(item) {\r\n            // 3.2. 根据选中条目的id，判断右侧显示什么列表\r\n            switch (item.id) {\r\n                // 1.【国家税务总局】 => 【纳税人登记信息】\r\n                case '004004001':\r\n                    // 1.1 【纳税人登记信息】关联处理函数\r\n                    this.nsrdjxxItemConnectHandler(item);\r\n                    break;\r\n                // 1.2【国家税务总局】 => 【增值税专用发票信息】\r\n                case '004004003':\r\n                    // 1.1 【增值税专用发票信息】关联处理函数\r\n                    this.zzszyfpxxItemConnectHandler();\r\n                    break;\r\n                // 2.【证监会】\r\n                // 2.1【证券持有】\r\n                case '001003002':\r\n                    this.zqcyItemConnectHandler(item);\r\n                    break;\r\n                // 2.2【证券持有变动】\r\n                case '001003003':\r\n                    this.zqcybdItemConnectHandler(item);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        },\r\n        //  【证监会】=> 【证券持有】\r\n        zqcyItemConnectHandler(item) {\r\n            // 1.需求\r\n            // -1.1 当节点是选中的情况\r\n            //  ----1.1.1   如果当前激活的条目【不是】当前数据，那么应该是查看， 不要取消选中， 保持原样\r\n            //  ----1.1.2   如果当前激活的条目【是】当前数据，那么应该取消选中， 暂时不要清空时间，后期按照需求修改！ @wanghuifeng 20210129\r\n            // -1.2 当节点是未选中的情况\r\n            // ----1.2.1 那么应该选中该节点，\r\n            // ----1.2.2 并且时间给予默认值\r\n            if (item.checked) {\r\n                // 1.1.2   如果当前激活的条目【是】当前数据，那么应该取消选中， 暂时不要清空时间，后期按照需求修改！ @wanghuifeng 20210129\r\n                if (item.id === this.dPreSelectedItem.id) {\r\n                    item.checked = false;\r\n                }\r\n                // 不要做处理\r\n            } else {\r\n                // 1.2.1 设置选中\r\n                item.checked = true;\r\n                // 1.2.2 设置时间的默认值\r\n                // 如果otherProperty属性中有startDate字段，说明这个时间是已经改变的，再次点击开，展示的时间是之前选择的时间 否则给予默认时间\r\n                //     更新时间\r\n                this.jsContentObject.updateDateGroup(\r\n                    item.otherProperty.startDate\r\n                        ? item.otherProperty.startDate\r\n                        : Date.now() - 86400000, //eslint-disable-line\r\n                    ''\r\n                );\r\n            }\r\n            // 更新条目数据\r\n            this.jsTreeObject.mUpdateItemCheckedStatus(item);\r\n        },\r\n        //  【证监会】=> 【证券持有变动】\r\n        zqcybdItemConnectHandler(item) {\r\n            // 1. 需求\r\n            // -1.1 当前节点是选中的情况\r\n            //  ----1.1.1   如果当前激活的条目【不是】当前数据，那么应该是查看， 不要取消选中， 保持原样\r\n            //  ----1.1.2   如果当前激活的条目【是】当前数据，那么应该取消选中， 暂时不要清空时间，后期按照需求修改！ @wanghuifeng 20210129\r\n            // -1.2 当节点是未选中的情况\r\n            // ----1.2.1 那么应该选中该节点，\r\n            // ----1.2.2 并且时间给予默认值\r\n            if (item.checked) {\r\n                // 1.1.2   如果当前激活的条目【是】当前数据，那么应该取消选中， 暂时不要清空时间，后期按照需求修改！ @wanghuifeng 20210129\r\n                if (item.id === this.dPreSelectedItem.id) {\r\n                    item.checked = false;\r\n                }\r\n                // 不要做处理\r\n            } else {\r\n                item.checked = true;\r\n                // 1. 如果otherProperty属性已经存在开始时间和结束时间，那么下次再次查看就是之前选择的时间\r\n                if (\r\n                    item.otherProperty.startDate &&\r\n                    item.otherProperty.endDate\r\n                ) {\r\n                    // 设置开始时间， 开始时间和结束时间，默认当前日期的时间\r\n                    this.jsContentObject.updateDateGroup(\r\n                        item.otherProperty.startDate,\r\n                        item.otherProperty.endDate\r\n                    );\r\n                } else {\r\n                    // 开始时间是近10年（当前时间是2021.1.15，那么开始时间默认应该是2011.1.15）\r\n                    const currentStartDate = new Date().setFullYear(\r\n                        new Date().getFullYear() - 10 // eslint-disable-line\r\n                    );\r\n                    // 设置开始时间， 开始时间和结束时间，默认当前日期的时间\r\n                    this.jsContentObject.updateDateGroup(\r\n                        currentStartDate,\r\n                        Date.now()\r\n                    );\r\n                }\r\n            }\r\n            // 更新条目数据\r\n            this.jsTreeObject.mUpdateItemCheckedStatus(item);\r\n        },\r\n        // 【国家税务总局】 => 【纳税人登记信息】关联处理函数\r\n        nsrdjxxItemConnectHandler(dataItem) {\r\n            //  类型是02 =>【企业，机构】\r\n            // 并且证照类型是 【统一社会信用代码证】||【组织机构代码证】\r\n            if (\r\n                this.dCurrentCxxDataItem.category === '02' &&\r\n                (/^(01|02)$/gim).test(this.dCurrentCxxDataItem.childCategory)\r\n            ) {\r\n                // 获取 【增值税专用发票信息】=> 004004003  数据条目\r\n                const _targetItem = this.jsTreeObject.cGetCache('004004003');\r\n                //  如果【增值税专用发票信息】是选中的，那么需要取消选中\r\n                if (dataItem.checked && _targetItem.checked) {\r\n                    _targetItem.checked = false;\r\n                    // 2. 更新条目数据\r\n                    this.jsTreeObject.mUpdateItemCheckedStatus(_targetItem);\r\n                }\r\n            }\r\n        },\r\n        // 【国家税务总局】 => 【增值税专用发票信息】关联处理函数\r\n        zzszyfpxxItemConnectHandler() {\r\n            //  类型是02 =>【企业，机构】\r\n            // 并且证照类型是 【统一社会信用代码证】||【组织机构代码证】\r\n            if (\r\n                this.dCurrentCxxDataItem.category === '02' &&\r\n                (/^(01|02)$/gim).test(this.dCurrentCxxDataItem.childCategory)\r\n            ) {\r\n                // 获取 【纳税人登记信息】=> 004004001  数据条目\r\n                const _targetItem = this.jsTreeObject.cGetCache('004004001');\r\n                // 1.【纳税人登记信息】也需要选中\r\n                _targetItem.checked = true;\r\n                // 2. 更新条目数据\r\n                this.jsTreeObject.mUpdateItemCheckedStatus(_targetItem);\r\n            }\r\n        },\r\n        // 点击前的处理函数\r\n        beforeClickHander(item, asideTree) {\r\n            let _flag = true;\r\n            if (asideTree.activeItem.id) {\r\n                // 通过id 判断\r\n                switch (asideTree.activeItem.id) {\r\n                    // 【商业银行】=> 【交易流水】, 需要判断是否两个时间都填写，或者都未填写\r\n                    case '001001002':\r\n                        // 如果没填写了开始时间 但是填写了结束时间，需要给出提示\r\n                        if (\r\n                            (asideTree.activeItem.otherProperty.startDate &&\r\n                                !asideTree.activeItem.otherProperty.endDate) ||\r\n                            (!asideTree.activeItem.otherProperty.startDate &&\r\n                                asideTree.activeItem.otherProperty.endDate)\r\n                        ) {\r\n                            _flag = false;\r\n                            const _name =\r\n                                asideTree.activeItem.id === '001001002'\r\n                                    ? '交易流水'\r\n                                    : '证券持有变动';\r\n                            const _info = asideTree.activeItem.otherProperty\r\n                                .startDate\r\n                                ? '结束日期'\r\n                                : '开始日期';\r\n                            // 提示\r\n                            this.globalBus.$emit(\r\n                                'global-spb-invalid',\r\n                                `请填写${_name}${_info}`,\r\n                                'warning'\r\n                            );\r\n                        }\r\n                        break;\r\n                    // 【证监会】 => 【证券持有变动】, 需要判断是否两个时间都填写，或者都未填写\r\n                    case '001003003': // eslint-disable-line\r\n                        // 如果旧值和新值一样 并且为选中，即为不选中  直接返回  不校验\r\n                        if (item && item.id === asideTree.activeItem.id && asideTree.activeItem.checked) {\r\n                            break;\r\n                        }\r\n                        // 两个值必填\r\n                        if (asideTree.activeItem.checked && (!asideTree.activeItem.otherProperty.endDate ||\r\n                            !asideTree.activeItem.otherProperty.startDate)) {\r\n                            _flag = false;\r\n                            const _name =\r\n                                asideTree.activeItem.id === '001001002'\r\n                                    ? '交易流水'\r\n                                    : '证券持有变动';\r\n                            const _info = asideTree.activeItem.otherProperty\r\n                                .startDate\r\n                                ? '结束日期'\r\n                                : '开始日期';\r\n                            // 提示\r\n                            this.globalBus.$emit(\r\n                                'global-spb-invalid',\r\n                                `请填写${_name}${_info}`,\r\n                                'warning'\r\n                            );\r\n                            break;\r\n                        }\r\n                        let start = new Date(asideTree.activeItem.otherProperty.startDate);\r\n                        let end = new Date(asideTree.activeItem.otherProperty.endDate);\r\n                        start.setFullYear(start.getFullYear() + 10);\r\n                        if (start < end) {\r\n                            // 开始时间 结束时间 需要在10年之内\r\n                            _flag = false;\r\n                            this.globalBus.$emit(\r\n                                'global-spb-invalid',\r\n                                `开始时间与结束时间的时间范围应该在10年内！`,\r\n                                'warning'\r\n                            );\r\n                        }\r\n                        break;\r\n                    // 【证监会】 => 【证券持有】, 日期是必填项\r\n                    case '001003002':\r\n                        // 开始时间必须有值\r\n                        // 如果有选中态，并且不存在开始时间，并且激活的id和当前的数据条目的id不相等，那么需要提示\r\n                        if (\r\n                            asideTree.activeItem.checked &&\r\n                            !asideTree.activeItem.otherProperty.startDate\r\n                        ) {\r\n                            // 1. 如果这个item存在\r\n                            // 1.1 当前的激活的条目的id不等于当前的条目的id，那么需要给提示\r\n                            // 2. item不存在，需要给提示\r\n                            if (item) {\r\n                                if (asideTree.activeItem.id !== item.id) {\r\n                                    _flag = false;\r\n                                }\r\n                            } else {\r\n                                _flag = false;\r\n                            }\r\n                            // 只有这个标识不存在的时候，才需要给提示\r\n                            if (!_flag) {\r\n                                // 提示\r\n                                this.globalBus.$emit(\r\n                                    'global-spb-invalid',\r\n                                    '请填写证券持有日期',\r\n                                    'warning'\r\n                                );\r\n                            }\r\n                        }\r\n                        break;\r\n                    case '001002002':\r\n                        // 暂无特殊校验，可以为空\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            return _flag;\r\n        }\r\n    }\r\n};\r\n","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020//12/24 - 10:57\r\n *@updateTime 2020/12/29 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  查询项弹出层  => 内容模块\r\n */\r\nexport default {\r\n    methods: {\r\n        readyContent(contentObject) {\r\n            // 内容区域组件\r\n            this.jsContentObject = contentObject;\r\n        },\r\n        // 更新内容区域\r\n        updateContent() {\r\n            if (this.jsContentObject) {\r\n                // 内部监听 selectItem 决定右侧显示什么内容\r\n                this.jsContentObject.watchSelectItem(this.dSelectedItem, this.jsTreeObject, this.dCurrentCxxDataItem);\r\n            }\r\n        },\r\n        // 当选选中的子项\r\n        changCxxContent(checkedDatalist) {\r\n            // 设置当前选中的选中列表\r\n            this.dSelectedItem.checkedDatalist = checkedDatalist;\r\n        }\r\n    }\r\n};\r\n","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020//12/24 - 10:57\r\n *@updateTime 2020/12/29 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  查询项弹出层  => 数据处理模块\r\n @namespace   d  => data\r\n */\r\nexport default {\r\n    data() {\r\n        return {\r\n            // 当前【左侧树】选中的条目\r\n            dSelectedItem: {},\r\n            // 当前选中之前的条目\r\n            dPreSelectedItem: {},\r\n            // 当前的【查询项的数据】 从\r\n            dCurrentCxxDataItem: {\r\n                // 自然人, 企业、机构， 其他\r\n                category: 1,\r\n                // 子类型， 证件类型|证照类型| 查询类型 中选的值\r\n                childCategory: 1,\r\n                // 当前已经选中的列表数据\r\n                /**\r\n                 * {\r\n                 *     id:'', // 树id,\r\n                 *     name:'', // 树节点名称,\r\n                 *     startDate: '', //开始日期，\r\n                 *     endDate:'', //结束日期\r\n                 *     sjyList: [ // 选中的节点数据\r\n                 *         {\r\n                 *             id:'',\r\n                 *             name:'',\r\n                 *         }\r\n                 *     ]\r\n                 * }\r\n                 */\r\n                cxxList: []\r\n            },\r\n            // 最终的数据\r\n            dCxxList: [],\r\n            // 当前显示查询项的【来源地模块】， 为一个事件名\r\n            dShowCxxModelSource: ''\r\n        };\r\n    },\r\n    methods: {\r\n        // 重置查询项数据\r\n        dResetCxxData() {\r\n            // 1.设置当前显示查询项的模块名\r\n            this.dSetShowCxxModelSource('');\r\n            // 2.设置  查询项，当前显示的条目数据\r\n            this.dSetCurrentCxxDataItem(null);\r\n            // 3. 清空当前选中的数据\r\n            this.dSetCxxList([]);\r\n            // 4. 重置内容数据\r\n            this.jsContentObject.resetContent();\r\n            // 5. 重置左侧树数据\r\n            this.jsTreeObject.resetAsideTree();\r\n        },\r\n        // 设置当前显示查询项的模块名\r\n        dSetShowCxxModelSource(moduleName) {\r\n            this.dShowCxxModelSource = moduleName;\r\n        },\r\n        // 设置  【查询项】，当前显示的条目数据\r\n        dSetCurrentCxxDataItem(dataItem) {\r\n            this.dCurrentCxxDataItem = dataItem;\r\n        },\r\n        // 设置选中条目\r\n        dSetSelectedItem(item) {\r\n            // 只有不相等才需要重新设置\r\n            if (item.id !== this.dSelectedItem.id) {\r\n                // 1. 设置当前选中的条目\r\n                this.dSelectedItem = item;\r\n                // 2. 更新右侧区域内容\r\n                this.updateContent();\r\n            }\r\n        },\r\n        // 设置当前选中之前的条目\r\n        dSetPreSelectedItem(item) {\r\n            // 1. 设置当前选中之前的条目\r\n            this.dPreSelectedItem = item;\r\n        },\r\n        // 设置当前的数据列表\r\n        dSetCxxList(dataList) {\r\n            this.dCxxList = dataList;\r\n        },\r\n        // 获取最终的数据列表\r\n        dGetCxxList() {\r\n            const _dataList = [];\r\n            this.dCxxList.forEach((item) => {\r\n                // 目标数据， 下面三个参数必不可少 【！important】\r\n                const _targetItem = {\r\n                    // 树节点id\r\n                    id: item.id,\r\n                    // 树节点名称\r\n                    name: item.name,\r\n                    // 查询项列表\r\n                    sjyList: []\r\n                };\r\n                // 如果有其他属性\r\n                if (item.hasOwnProperty('otherProperty')) {\r\n                    // 存在选中数据条目，那么进行赋值\r\n                    if (item.otherProperty.hasOwnProperty('sjyList')) {\r\n                        _targetItem.sjyList = item.otherProperty.sjyList;\r\n                    }\r\n                    // 存在开始时间，那么进行赋值\r\n                    if (item.otherProperty.hasOwnProperty('startDate')) {\r\n                        _targetItem.startDate = item.otherProperty.startDate;\r\n                    }\r\n                    // 存在结束时间，那么进行赋值\r\n                    if (item.otherProperty.hasOwnProperty('endDate')) {\r\n                        _targetItem.endDate = item.otherProperty.endDate;\r\n                    }\r\n                    if (item.otherProperty.hasOwnProperty('type')) {\r\n                        _targetItem.type = item.otherProperty.type;\r\n                    }\r\n                }\r\n                // 添加到最后的数据列表\r\n                _dataList.push(_targetItem);\r\n            });\r\n            return _dataList;\r\n        }\r\n    }\r\n};\r\n","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020//12/24 - 10:57\r\n *@updateTime 2020/12/29 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  查询项弹出层  => 弹出层配置\r\n */\r\nexport default {\r\n    data() {\r\n        return {\r\n            // 弹出层标题\r\n            popupTitle: '查询项选择',\r\n            // 弹出层显示状态\r\n            popupStatus: this.showCxx,\r\n            // 确定按钮\r\n            popupConfirm:{\r\n                show: true,\r\n                text: '确认',\r\n                callback() {\r\n                    window.console.log('点击了确定');\r\n                    // popup.hidePopup();\r\n                }\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        // 设置弹出层显示状态\r\n        setPopupStatus(flag) {\r\n            this.popupStatus = flag;\r\n        },\r\n        // 显示查询项弹出层\r\n        showCxxPopup(dataItem, showCxxModelSource) {\r\n            // 1.设置当前显示查询项的模块名\r\n            this.dSetShowCxxModelSource(showCxxModelSource);\r\n            // 2.设置  查询项，当前显示的条目数据\r\n            // 担心，点击取消改变源数据，所以这里用 JSON.stringify() 转义\r\n            this.dSetCurrentCxxDataItem(JSON.parse(JSON.stringify(dataItem)));\r\n            // 3. 更新树\r\n            this.updateTree(this.dCurrentCxxDataItem);\r\n            // 3.显示弹出层\r\n            this.setPopupStatus(true);\r\n        },\r\n\r\n        //  取消按钮\r\n        clickCancel() {\r\n            // 1.重置查询项数据\r\n            this.dResetCxxData();\r\n        },\r\n        // 确定按钮\r\n        clickConfirm() {\r\n            // 先判断是否存在必填项未填写\r\n            if (this.beforeClickHander(null, this.jsTreeObject)) {\r\n                // debugger\r\n                const _cxxList = this.dGetCxxList();\r\n                let _flag = false;\r\n                _cxxList.forEach(e => {\r\n                    if (e.id === '002002001' && e.type === '') {\r\n                        window.Artery.message.warning('航班进出港查询项，请选择时间范围');\r\n                        _flag = true;\r\n                    }\r\n                });\r\n                if (_flag) {\r\n                    return;\r\n                }\r\n                // 1.触发全局事件\r\n                this.emitGlobalEvent(() => {\r\n                    // 获取查询项列表\r\n                    const _cxxList = this.dGetCxxList();\r\n                    // 发送全局事件\r\n                    this.globalBus.$emit(this.dShowCxxModelSource, _cxxList);\r\n                });\r\n                // 2.重置查询项数据\r\n                this.dResetCxxData();\r\n                // 3.隐藏弹出层\r\n                this.setPopupStatus(false);\r\n            }\r\n        }\r\n    }\r\n};\r\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=46055628&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('component-popup',{staticClass:\"fd-ac-spb-cxx\",attrs:{\"title\":_vm.popupTitle,\"confirm\":_vm.popupConfirm},on:{\"cancel\":function($event){return _vm.clickCancel($event)},\"confirm\":function($event){return _vm.clickConfirm($event)}},model:{value:(_vm.popupStatus),callback:function ($$v) {_vm.popupStatus=$$v},expression:\"popupStatus\"}},[_c('div',{staticClass:\"fd-ac-spb-cxx-content\",class:{'show-main-area':_vm.showMainArea}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowCheckedTip),expression:\"isShowCheckedTip\"}],staticClass:\"fd-checked-tip\"},[_vm._v(\"最多只能选择20家银行！\")]),_vm._v(\" \"),_c('aside',{staticClass:\"fd-aside-area\"},[_c('asideTree',{attrs:{\"ywActiveItem\":_vm.dCurrentCxxDataItem,\"beforeClickHander\":_vm.beforeClickHander},on:{\"select\":_vm.selectTree,\"change\":_vm.changeTree,\"ready\":_vm.readyTree}})],1),_vm._v(\" \"),_c('main',{staticClass:\"fd-main-area\"},[_c('cxxContent',{on:{\"ready\":_vm.readyContent}})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default {\r\n    // 联系电话校验\r\n    checkLxdh(val) {\r\n        // 验证联系电话【手机号/座机号 或者 号码+‘-’】\r\n        const reg = /^[0-9]+[/-]?[0-9]*$/;\r\n        if (!val || !(reg.test(val))) {\r\n            return {\r\n                message: '请输入正确联系电话',\r\n                validate: false\r\n            };\r\n        }\r\n        return {\r\n            message: '验证通过',\r\n            validate: true\r\n        };\r\n    },\r\n    // 手机号校验\r\n    checkMobilePhone(phone) {\r\n        // 验证手机号【包含数字和“-”，不超过13位】\r\n        const reg = /^([\\d-\\d]{1,13})$/;\r\n        if (!phone || !(reg.test(phone))) {\r\n            return {\r\n                message: '请输入正确手机号',\r\n                validate: false\r\n            };\r\n        }\r\n        return {\r\n            message: '验证通过',\r\n            validate: true\r\n        };\r\n    },\r\n    // 车牌号校验（查询类型为车牌号的暂时不支持）\r\n    checkLicensePlate(code) {\r\n        const reg1 = /^(([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-Z](([0-9]{5}[DF])|([DF]([A-HJ-NP-Z0-9])[0-9]{4})))|([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-Z][A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳使领]))$/;\r\n        if (!code || !(reg1.test(code))) {\r\n            return {\r\n                message: '请输入正确车牌号',\r\n                validate: false\r\n            };\r\n        }\r\n        return {\r\n            message: '验证通过',\r\n            validate: true\r\n        };\r\n    },\r\n    // 签购单校验\r\n    qgdCheck(val) {\r\n        // 银行卡前6位-银行卡后4位-日期（例如20200909）-金额\r\n        // const reg = /^([1-9]{1})(\\d{5})-\\d{4}-[1-9]\\d{3}(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])-\\d+$/;\r\n        // 按照一期校验规则\r\n        const reg = /^[0-9]{6}-[0-9]{4}-[0-9]{8}-[0-9]+(\\.[0-9]{n})?/;\r\n        if (!val || !(reg.test(val))) {\r\n            return {\r\n                message: '请输入正确签购单',\r\n                validate: false\r\n            };\r\n        }\r\n        return {\r\n            message: '验证通过',\r\n            validate: true\r\n        };\r\n    },\r\n    // 快递单号校验\r\n    kddhCheck(val) {\r\n        const reg = /^[A-Za-z0-9]{1,20}$/;\r\n        if (!val || !(reg.test(val))) {\r\n            return {\r\n                message: '请输入正确的快递单号',\r\n                validate: false\r\n            };\r\n        }\r\n        return {\r\n            message: '验证通过',\r\n            validate: true\r\n        };\r\n    },\r\n\r\n    /* eslint-disable */\r\n    /**\r\n     *  校验规则\r\n     *  【居民身份证号校验：位数为15或18位、地区（前两位）符合标准】\r\n     * */\r\n    // 身份证校验(含15位)\r\n    issfz(value) {\r\n        const cardNumber = value.toLowerCase();\r\n        // 判断身份证的长度\r\n        if (cardNumber.length !== 18 && cardNumber.length !== 15) {\r\n            return {\r\n                message: '身份证格式不正确，身份证号码应该为15位或18位！',\r\n                validate: false\r\n            };\r\n        }\r\n        const reg = /(^[a-zA-Z0-9]{15}$)|(^[a-zA-Z0-9]{18}$)/;\r\n        if(!reg.test(cardNumber)){\r\n            return {\r\n                message: '身份证号码必须是15位或18位数字和字母的组合！',\r\n                validate: false\r\n            };\r\n        }\r\n        return {\r\n            message: '验证通过！',\r\n            validate: true\r\n        };\r\n    },\r\n    /* eslint-enable */\r\n    /**\r\n     *  校验规则\r\n     *  【中国公民护照校验：5-17位数字与字母的组合，字母大小写不限】\r\n     * */\r\n    // 中国公民护照校验验证\r\n    isPassport(value) {\r\n        const c = /^[a-zA-Z0-9]{5,17}$/;\r\n        if (value) {\r\n            if (!c.test(value)) {\r\n                return {\r\n                    message: '请输入正确护照编号！',\r\n                    validate: false\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            message: '验证通过！',\r\n            validate: true\r\n        };\r\n    },\r\n    // 汉字校验\r\n    isNotHz(value) {\r\n        const reg = new RegExp('[\\\\u4E00-\\\\u9FFF]+');\r\n        if (reg.test(value)) {\r\n            return {\r\n                message: '不能输入汉字！',\r\n                validate: false\r\n            };\r\n        } else {\r\n            return {\r\n                message: '验证通过！',\r\n                validate: true\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\n\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020/12/28 - 10:57\r\n *@updateTime 2020/12/28 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  审批表=> 基本信息主入口\r\n */\r\n// 全局事件\r\nimport globalEvent from './extend/globalEvent.js';\r\n// 数据配置\r\nimport dataConfig from './extend/dataConfig.js';\r\n// 导出模块\r\nexport default {\r\n    // 混入数据配置\r\n    mixins: [globalEvent, dataConfig],\r\n    data() {\r\n        return {\r\n            //  基本信息\r\n            tJbxx: {\r\n                // 查询号\r\n                cCxh: '',\r\n                // 申请时间\r\n                dSqrq: '',\r\n                // 申请单位\r\n                cSqdwMc: '',\r\n                // 申请部门\r\n                cSqbmMc: '',\r\n                // 承办人\r\n                cCbrMc: '',\r\n                // 查询申请人\r\n                cQqrId: '',\r\n                // 协助查询人\r\n                cXzqqrId: '',\r\n                // 查询人联系电话\r\n                cLxfs: '',\r\n                // 事由\r\n                nCxsy: '',\r\n                // 关联案件（线索）号\r\n                cGlajxsh: '',\r\n                // 监督检查审查<br/>调查对象姓名\r\n                cDcdxxm: '',\r\n                // 监督检查审查<br/>调查对象工作单位\r\n                cGgdw: '',\r\n                // 监督检查审查<br/>调查对象职务\r\n                cZw: '',\r\n                // 监督检查审查<br/>调查对象职级\r\n                nZj: '',\r\n                // 干部管理权限\r\n                cPermission: '',\r\n                //  敏感信息\r\n                nMgxx: '',\r\n                bcsm:'',\r\n                bz:'',\r\n                // @TODO 2020-01-09 必填字段后台需要的字段\r\n                // 承办人id,后台需要的字段（保存的时候用到）\r\n                cCbrId: '',\r\n                // 查询申请人名称（生成审批表用到）\r\n                cQqrMc: '',\r\n                // 协助查询人 （生成审批表用到）\r\n                cXzqqrMc: '',\r\n                // 申请部门   (打印页面二维码生成)\r\n                cSqbmId: '',\r\n                // 申请单位    (打印页面二维码生成)\r\n                cSqdwId: '',\r\n                // 新建为空，编辑的时候，从地址栏取\r\n                cBh: this.globalBus.commonUrlParams.cBh,\r\n                // 状态（生成审批表）数据状态（打印，非打印） 大致19种\r\n                nZt: this.globalBus.commonUrlParams.nZt,\r\n                // 查询标识\r\n                cCxbs: this.globalBus.commonUrlParams.cCxbs\r\n                // 下面的字段好像没用 @todo  需要找开发确认\r\n                // cCxzt: '',\r\n                // cGgdwjzw: '',\r\n                // cQqrMc: '',\r\n                // cXzqqrMc: '',\r\n                // cCxbs: '',\r\n                // //\r\n                // cCbrId: '',\r\n                // cBh: '',\r\n                // cSqbmId: '',\r\n                // cSqdwId: '',\r\n                // cCityText: '',\r\n                // cBankText: '',\r\n                // cTopDept: '',\r\n                // cTopDeptMc: '',\r\n                // // 线上线下（1：线下2：线上，0：所有）\r\n                // cXsxx: 0\r\n            },\r\n\r\n        };\r\n    },\r\n    created() {\r\n        // 初始化方法\r\n        this.init();\r\n    },\r\n    mounted() {\r\n        // 初始化的方法\r\n        this.$emit('ready', this);\r\n    },\r\n    methods: {\r\n        changeBcsm:function (){\r\n            var chk_value =[];\r\n            var arrayCheckBox = document.getElementsByName(\"bcsmcheckbox\");\r\n            for(var i =0;i<arrayCheckBox.length;i++){\r\n                if(arrayCheckBox[i].checked){\r\n                    chk_value.push(arrayCheckBox[i].value);\r\n                }\r\n            }\r\n            this.tJbxx.bcsm=chk_value.join(\",\");\r\n        },\r\n        // 初始化方法\r\n        init() {\r\n            // 初始化方法\r\n            // this.setQueryData();\r\n        },\r\n        // 改变值的处理函数,\r\n        changeHandler(item, value) {\r\n            if (item.label === '协助查询人') {\r\n                this.cQqrId.invalid = true;\r\n                this.cQqrId.validateState = true;\r\n            }\r\n\r\n            // 1.值改变进行，必填项验证\r\n            this.validateRequired(item, value);\r\n            // 2. validator验证\r\n            this.validateValidator(item);\r\n            if (item.label === '查询申请人') {\r\n                this.cQqrMc = value.name;\r\n            }\r\n            if (item.label === '协助查询人') {\r\n                this.cXzqqrMc = value.name;\r\n            }\r\n        },\r\n        // 绑定选中事件\r\n        // 场景 先选中一条数据A（职级选中“一级主任科员”）,然后删除A中部分字段（点选，删除“主任科员”），然后再选中A（回车或者点选“一级主任科员”）,这个时候A不是原本的数据（一级主任科员）的问题\r\n        selectSelected(currentElement) {\r\n            // model变动，需要查询（非多选 && 支持过滤 && 当前的值！=undefined）\r\n            this.$refs[currentElement].modelToQuery();\r\n\r\n            /**\r\n             * [外部触发：data、value、loadCode、selectlabel改变]\r\n             * 【用于处理】：\r\n             * 1. data改变 [ 数据改变后需要刷新label，用户可能修改了label]\r\n             * 2. lazy懒加载(selectLabel必须赋值,否则会显示code,因为它无法翻译)\r\n             *  [ 懒加载时候没有data，赋值了selectLabel，此时如果点击删除某个数据，需要用户自己修改v-model，因为传入的label无法对应数据值 ]\r\n             * 【注意】：\r\n             * 必须要有值-this.model，否则就失去了意义\r\n             */\r\n            this.$refs[currentElement].updateLabel();\r\n        },\r\n        // 必填项的验证\r\n        validateRequired(item) {\r\n            // 是否通过验证\r\n            let _flag = true;\r\n            if (item && item.rules && item.rules.required) {\r\n                _flag = Boolean(item.value);\r\n                item.validateState = _flag ? 'success' : 'error';\r\n            }\r\n            return _flag;\r\n        },\r\n        // validator验证\r\n        validateValidator(item) {\r\n            // 是否通过验证\r\n            let _flag = true;\r\n            if (item && item.rules && typeof item.rules.validator === 'function') {\r\n                // 函数内部设置无效值\r\n                _flag = item.rules.validator(this);\r\n            }\r\n            return _flag;\r\n        },\r\n        // 验证方法\r\n        validate() {\r\n            return new Promise((resolve, reject) => {\r\n                // 是否通过验证\r\n                let _validateFlag = true;\r\n                // 循环基本信息对象\r\n                Object.keys(this.tJbxx)\r\n                    .forEach((key) => {\r\n                        // 目标数据条目\r\n                        const _targetItem = this[key];\r\n                        // 如果存在该数据条目，并且该数据有规则， 那么需要进行验证\r\n                        if (_targetItem) {\r\n                            //  1. 【必填项】验证条目\r\n                            const _flag = this.validateRequired(_targetItem);\r\n                            // 如果未通过验证 ,或者无效值，都无法通过校验\r\n                            if (!_flag || _targetItem.invalid) {\r\n                                _validateFlag = false;\r\n                            }\r\n                            // 如果未通过，或者【【查询申请人】或者【协助查询人】相等】，都无法通过校验\r\n                            if (!_flag || !this.validateValidator(_targetItem)) {\r\n                                _validateFlag = false;\r\n                            }\r\n                            // 取出目标值进行赋值\r\n                            this.tJbxx[key] = _targetItem.value;\r\n                        }\r\n                    });\r\n                // 根据验证的标识，决定调用resolve 还是 reject\r\n                _validateFlag ? resolve(this.getQueryData()) : reject(_validateFlag);\r\n            });\r\n        },\r\n\r\n        // 获取模块内部的数据\r\n        getQueryData() {\r\n            // 最终的数据列表\r\n            // 循环基本信息对象\r\n            Object.keys(this.tJbxx)\r\n                .forEach((key) => {\r\n                    // 目标数据条目\r\n                    const _targetItem = this[key];\r\n                    // 如果存在该数据条目，并且该数据有规则， 那么需要进行验证\r\n                    if (_targetItem) {\r\n                        // 取出目标值进行赋值\r\n                        this.tJbxx[key] = _targetItem.value;\r\n                    }\r\n                });\r\n            // 查询申请人名称（生成审批表用到）\r\n            this.tJbxx.cQqrMc = this.cQqrMc;\r\n            // 协助查询人 （生成审批表用到）\r\n            this.tJbxx.cXzqqrMc = this.cXzqqrMc;\r\n            this.changeBcsm();\r\n            // 返回【基本数据】对象\r\n            return this.tJbxx;\r\n        },\r\n\r\n        // 设置数据\r\n        setQueryData(defaultValue) {\r\n            if (Object.prototype.toString.call(defaultValue) === '[object Object]') {\r\n                // 循环对象\r\n                Object.keys(defaultValue)\r\n                    .forEach((key) => {\r\n                        try {\r\n                            // 判断是否是自己需要的值\r\n                            if (this.tJbxx.hasOwnProperty(key)) {\r\n                                // 1. 后端需要的暂存数据\r\n                                this.tJbxx[key] = defaultValue[key];\r\n                                // 2. 页面数据\r\n                                if (this[key]) {\r\n                                    // 2.1. 找到目标进行赋值\r\n                                    this[key].value = defaultValue[key];\r\n                                    // 2.2. 校验【查询申请人】或者【协助查询人】相等\r\n                                    this.validateValidator(this[key]);\r\n                                }\r\n                            }\r\n                        } catch (e) {\r\n                            // 错误处理\r\n                            // 后端返回的数据超标，后端接口需要调整,暂时捕获错误！ 20210127-wuwg\r\n                        }\r\n                    });\r\n                // 查询申请人名称（生成审批表用到）\r\n                this.cQqrMc = defaultValue.cQqrMc;\r\n                // 协助查询人 （生成审批表用到）\r\n                this.cXzqqrMc = defaultValue.cXzqqrMc;\r\n                if(defaultValue.bcsm!=null && defaultValue.bcsm !=''){\r\n                    var array = defaultValue.bcsm.split(\",\");\r\n                    var arrayCheckBox = document.getElementsByName(\"bcsmcheckbox\");\r\n                    for(var j=0;j<array.length;j++){\r\n                        for(var i =0;i<arrayCheckBox.length;i++){\r\n                            if(arrayCheckBox[i].value==array[j]){\r\n                                arrayCheckBox[i].checked=\"checked\";\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\n","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020/12/28 - 10:57\r\n *@updateTime 2020/12/28 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description 全局事件模块\r\n */\r\nexport default {\r\n    created() {\r\n        // 绑定全局事件\r\n        this.bindGlobalEvent();\r\n    },\r\n    beforeDestroy() {\r\n        // 取消全局事件\r\n        this.unbindGlobalEvent();\r\n    },\r\n    methods: {\r\n        // 绑定全局事件\r\n        bindGlobalEvent() {\r\n            // 绑定设置当前的默认数据\r\n            this.globalBus.$on('global-spb-jbxx-setQueryData', this.setQueryData);\r\n        },\r\n        // 取消全局事件\r\n        unbindGlobalEvent() {\r\n            // 取消绑定设置当前的默认数据\r\n            this.globalBus.$off('global-spb-jbxx-setQueryData', this.setQueryData);\r\n        },\r\n        // 触发全局事件\r\n        emitGlobalEvent(callback) {\r\n            if (this.globalBus) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020/12/24 - 10:57\r\n *@updateTime 2020/12/28 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  审批表=> 基本信息 =>  数据配置模块\r\n */\r\n/**\r\n * 对象中的key对应的含义， 请根据各个数据项自行添加\r\n * label， value\r\n {\r\n    // 标签名\r\n    label: '密级',\r\n    // 最终的值\r\n    value: '',\r\n    // 该数据类型，codeType\r\n    codeType: 45001255,\r\n    //  该类数据的子列表\r\n    dataList: [],\r\n    // 验证规则\r\n    rules: {\r\n        // 必填项\r\n        required: false\r\n    },\r\n    // 自己的className\r\n    className: '',\r\n    // 验证状态 success || error\r\n    validateState: 'success'\r\n}\r\n */\r\n// 验证的方法\r\nimport validateType from '../../common/validateType.js';\r\n// 导出数据配置\r\nexport default {\r\n    data() {\r\n        return {\r\n            //  查询号\r\n            cCxh: {\r\n                // 标签名\r\n                label: '查询号',\r\n                // 最终的值\r\n                value: ''\r\n            },\r\n            //  申请时间\r\n            dSqrq: {\r\n                // 标签名\r\n                label: '申请时间',\r\n                // 最终的值\r\n                value: ''\r\n            },\r\n            //  申请单位\r\n            cSqdwMc: {\r\n                // 标签名\r\n                label: '申请单位',\r\n                // 最终的值\r\n                value: ''\r\n            },\r\n            //  申请部门\r\n            cSqbmMc: {\r\n                // 标签名\r\n                label: '申请部门',\r\n                // 最终的值\r\n                value: ''\r\n            },\r\n            //  承办人\r\n            cCbrMc: {\r\n                // 标签名\r\n                label: '承办人',\r\n                // 最终的值\r\n                value: ''\r\n            },\r\n            //  查询申请人\r\n            cQqrId: {\r\n                // 标签名\r\n                label: '查询申请人',\r\n                // 最终的值\r\n                value: '',\r\n                // 验证规则\r\n                rules: {\r\n                    // 必填项\r\n                    required: true,\r\n                    // 函数验证\r\n                    validator(vm) {\r\n                        // 查询申请人和协助申请人不能相同\r\n                        if (vm.cQqrId.value !== '' && vm.cQqrId.value === vm.cXzqqrId.value) {\r\n                            vm.$emit('invalid', '查询申请人和协助查询人不能相同，请重新填写');\r\n                            // 设置值无效\r\n                            vm.cXzqqrId.invalid = true;\r\n                            vm.cQqrId.invalid = true;\r\n                            return false;\r\n                        }\r\n                        vm.cXzqqrId.invalid = false;\r\n                        vm.cQqrId.invalid = false;\r\n                        return true;\r\n                    }\r\n                },\r\n                // 请求数据的url\r\n                requestDataUrl: window.fdConfig.isDebug ? window.fdConfig.url.spb.getOrganChildren : '',\r\n                // 验证状态  success || error\r\n                validateState: '',\r\n                // 值是否有效\r\n                invalid: false\r\n            },\r\n            //  协助查询人\r\n            cXzqqrId: {\r\n                // 标签名\r\n                label: '协助查询人',\r\n                // 最终的值\r\n                value: '',\r\n                // 验证规则\r\n                rules: {\r\n                    // 必填项\r\n                    required: true,\r\n                    validator(vm) {\r\n                        // 查询申请人和协助申请人不能相同\r\n                        if (vm.cXzqqrId.value !== '' && vm.cXzqqrId.value === vm.cQqrId.value) {\r\n                            vm.$emit('invalid', '协助查询人和查询申请人不能相同，请重新填写');\r\n                            // 清空值\r\n                            // vm.cXzqqrId.value = '';\r\n                            // 是否无有效\r\n                            vm.cXzqqrId.invalid = true;\r\n                            vm.cQqrId.invalid = true;\r\n                            return false;\r\n                        }\r\n                        vm.cXzqqrId.invalid = false;\r\n                        vm.cQqrId.invalid = false;\r\n                        return true;\r\n                    }\r\n                },\r\n                // 请求数据的url\r\n                requestDataUrl: window.fdConfig.isDebug ? window.fdConfig.url.spb.getOrganChildren : '',\r\n                // searchDataUrl: window.fdConfig.url.spb.getOrganChildren,\r\n                // 验证状态  success || error\r\n                validateState: '',\r\n                // 值是否有效\r\n                invalid: false\r\n            },\r\n            //  查询人联系电话\r\n            cLxfs: {\r\n                // 标签名\r\n                label: '查询人联系电话',\r\n                // 最终的值\r\n                value: '',\r\n                // 验证规则\r\n                rules: {\r\n                    // 必填项\r\n                    required: true,\r\n                    // 验证函数\r\n                    validator(vm) {\r\n                        // 进行电话号码验证\r\n                        // 验证对象\r\n                        const _validateObject = validateType.checkLxdh(vm.cLxfs.value);\r\n                        // 设置无效\r\n                        vm.cLxfs.invalid = !_validateObject.validate;\r\n                        // 如果无效\r\n                        if (vm.cLxfs.invalid) {\r\n                            // 触发提示\r\n                            vm.$emit('invalid', _validateObject.message);\r\n                        }\r\n                        return _validateObject.validate;\r\n                    }\r\n                },\r\n                // 验证状态  success || error\r\n                validateState: '',\r\n                // 值是否有效\r\n                invalid: false\r\n            },\r\n            //  事由\r\n            nCxsy: {\r\n                // 标签名\r\n                label: '事由',\r\n                // 最终的值\r\n                value: '',\r\n                //  该类数据的子列表\r\n                dataList: window.fdDataTable.getCodeTypeDataList(window.fdDataTable.syCodeType),\r\n                // 验证规则\r\n                rules: {\r\n                    // 必填项\r\n                    required: true\r\n                },\r\n                // 验证状态  success || error\r\n                validateState: ''\r\n            },\r\n            // 关联案件（线索）号\r\n            cGlajxsh: {\r\n                // 标签名\r\n                label: '案件（线索）号',\r\n                // 最终的值\r\n                value: '',\r\n                // 验证状态  success || error\r\n                validateState: ''\r\n            },\r\n            // 监督检查审查<br/>调查对象姓名\r\n            cDcdxxm: {\r\n                // 标签名\r\n                label: '监督检查审查<br/>调查对象姓名',\r\n                // 最终的值\r\n                value: '',\r\n                // 验证规则\r\n                rules: {\r\n                    // 必填项\r\n                    required: true\r\n                },\r\n                // 验证状态  success || error\r\n                validateState: ''\r\n            },\r\n            // 监督检查审查<br/>调查对象工作单位\r\n            cGgdw: {\r\n                // 标签名\r\n                label: '监督检查审查<br/>调查对象工作单位',\r\n                // 最终的值\r\n                value: '',\r\n                // 验证规则\r\n                rules: {\r\n                    // 必填项\r\n                    required: true\r\n                },\r\n                // 验证状态  success || error\r\n                validateState: ''\r\n            },\r\n            // 监督检查审查<br/>调查对象职务\r\n            cZw: {\r\n                // 标签名\r\n                label: '监督检查审查<br/>调查对象职务',\r\n                // 最终的值\r\n                value: '',\r\n                // 验证规则\r\n                rules: {\r\n                    // 必填项\r\n                    required: true\r\n                },\r\n                // 验证状态  success || error\r\n                validateState: ''\r\n            },\r\n            // 监督检查审查<br/>调查对象职级\r\n            nZj: {\r\n                // 标签名\r\n                label: '监督检查审查<br/>调查对象职级',\r\n                // 最终的值\r\n                value: '',\r\n                //  该类数据的子列表\r\n                dataList: window.fdDataTable.getCodeTypePinyinDataList(window.fdDataTable.zJCodeType),\r\n                // 验证规则\r\n                rules: {\r\n                    // 必填项\r\n                    required: true\r\n                },\r\n                // 验证状态  success || error\r\n                validateState: ''\r\n            },\r\n            // 干部管理权限\r\n            cPermission: {\r\n                // 标签名\r\n                label: '干部管理权限',\r\n                // 最终的值\r\n                value: '',\r\n                //  该类数据的子列表\r\n                dataList: window.fdDataTable.getCodeTypePinyinDataList(window.fdDataTable.gbglqxCodeType),\r\n                // 验证规则\r\n                rules: {\r\n                    // 必填项\r\n                    required: true\r\n                },\r\n                // 验证状态  success || error\r\n                validateState: ''\r\n            },\r\n            //  敏感信息\r\n            nMgxx: {\r\n                // 标签名\r\n                label: '敏感信息',\r\n                // 最终的值\r\n                value: '2',\r\n                //  该类数据的子列表\r\n                dataList: window.fdDataTable.getCodeTypeDataList('1004'),\r\n                // 验证规则\r\n                rules: {\r\n                    // 必填项\r\n                    required: true\r\n                },\r\n                // 验证状态  success || error\r\n                validateState: ''\r\n            },\r\n            //  补充说明\r\n            bcsm: {\r\n                // 标签名\r\n                label: '补充说明',\r\n                // 最终的值\r\n                value: '',\r\n                // 验证规则\r\n                // 验证状态  success || error\r\n                validateState: ''\r\n            },\r\n            //  备注\r\n            bz: {\r\n                // 标签名\r\n                label: '备注',\r\n                // 最终的值\r\n                value: '',\r\n                // 验证状态  success || error\r\n                validateState: ''\r\n            },\r\n        };\r\n    }\r\n};\r\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=6bb649cb&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fd-ac-spb-jbxx\"},[_c('header',{staticClass:\"fd-ac-spb-jbxx-header\"},[_c('span',[_vm._v(_vm._s(_vm.cCxh.label)+\"：\"+_vm._s(_vm.cCxh.value))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.dSqrq.label)+\"：\"+_vm._s(_vm._f(\"dateformate\")(_vm.dSqrq.value,true)))])]),_vm._v(\" \"),_c('div',{staticClass:\"fd-table-wraper\"},[_c('table',{staticClass:\"fd-cc-table-01\"},[_vm._m(0),_vm._v(\" \"),_c('tbody',[_c('tr',[_c('td',{staticClass:\"fd-cell-label\"},[_c('div',{staticClass:\"fd-label-text\",domProps:{\"textContent\":_vm._s(_vm.cSqdwMc.label)}})]),_vm._v(\" \"),_c('td',[_c('div',{staticClass:\"fd-input-text\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cSqdwMc.value),expression:\"cSqdwMc.value\"}],staticClass:\"fd-cc-input-text readonly\",attrs:{\"type\":\"text\",\"readonly\":\"\"},domProps:{\"value\":(_vm.cSqdwMc.value)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.cSqdwMc, \"value\", $event.target.value)}}})])]),_vm._v(\" \"),_c('td',{staticClass:\"fd-cell-label\"},[_c('div',{staticClass:\"fd-label-text\",domProps:{\"textContent\":_vm._s(_vm.cSqbmMc.label)}},[_vm._v(\"申请部门\")])]),_vm._v(\" \"),_c('td',[_c('div',{staticClass:\"fd-input-text\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cSqbmMc.value),expression:\"cSqbmMc.value\"}],staticClass:\"fd-cc-input-text readonly\",attrs:{\"type\":\"text\",\"readonly\":\"\"},domProps:{\"value\":(_vm.cSqbmMc.value)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.cSqbmMc, \"value\", $event.target.value)}}})])]),_vm._v(\" \"),_c('td',{staticClass:\"fd-cell-label\"},[_c('div',{staticClass:\"fd-label-text fd-jddx-div\",domProps:{\"textContent\":_vm._s(_vm.cCbrMc.label)}},[_vm._v(\"承办人\")])]),_vm._v(\" \"),_c('td',[_c('div',{staticClass:\"fd-input-text\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cCbrMc.value),expression:\"cCbrMc.value\"}],staticClass:\"fd-cc-input-text\",attrs:{\"type\":\"text\",\"maxlength\":\"20\",\"readonly\":\"\"},domProps:{\"value\":(_vm.cCbrMc.value)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.cCbrMc, \"value\", $event.target.value)}}})])])]),_vm._v(\" \"),_c('tr',[_c('td',{staticClass:\"fd-cell-label\"},[_c('div',{staticClass:\"fd-label-text  required\",domProps:{\"textContent\":_vm._s(_vm.cQqrId.label)}},[_vm._v(\"查询申请人\")])]),_vm._v(\" \"),_c('td',{class:[_vm.cQqrId.validateState, _vm.cQqrId.invalid ? 'invalid':'']},[_c('div',{staticClass:\"fd-input-text\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cQqrMc),expression:\"cQqrMc\"}],staticClass:\"fd-cc-input-text\",attrs:{\"type\":\"text\",\"maxlength\":\"20\",\"readonly\":\"\"},domProps:{\"value\":(_vm.cQqrMc)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.cQqrMc=$event.target.value}}})])]),_vm._v(\" \"),_c('td',{staticClass:\"fd-cell-label\"},[_c('div',{staticClass:\"fd-label-text required\",domProps:{\"textContent\":_vm._s(_vm.cXzqqrId.label)}},[_vm._v(\"协助查询人\")])]),_vm._v(\" \"),_c('td',{class:[_vm.cXzqqrId.validateState, _vm.cQqrId.invalid ? 'invalid':'']},[_c('aty-organ-tree',{attrs:{\"select-type\":\"user\",\"select-scope\":\"csDept-cxy\",\"transfer\":\"\",\"clearable\":\"\",\"can-search\":false},on:{\"change\":function($event){\nvar i = arguments.length, argsArray = Array(i);\nwhile ( i-- ) argsArray[i] = arguments[i];\nreturn _vm.changeHandler.apply(void 0, [ _vm.cXzqqrId ].concat( argsArray ))}},model:{value:(_vm.cXzqqrId.value),callback:function ($$v) {_vm.$set(_vm.cXzqqrId, \"value\", $$v)},expression:\"cXzqqrId.value\"}})],1),_vm._v(\" \"),_c('td',{staticClass:\"fd-cell-label\"},[_c('div',{staticClass:\"fd-label-text required\",domProps:{\"textContent\":_vm._s(_vm.cLxfs.label)}},[_vm._v(\"查询人联系电话\")])]),_vm._v(\" \"),_c('td',{class:[_vm.cLxfs.validateState, _vm.cLxfs.invalid ? 'invalid':'']},[_c('div',{staticClass:\"fd-input-text\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cLxfs.value),expression:\"cLxfs.value\"}],staticClass:\"fd-cc-input-text\",attrs:{\"type\":\"text\",\"maxlength\":\"20\"},domProps:{\"value\":(_vm.cLxfs.value)},on:{\"change\":function($event){return _vm.changeHandler(_vm.cLxfs)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.cLxfs, \"value\", $event.target.value)}}})])])]),_vm._v(\" \"),_c('tr',[_c('td',{staticClass:\"fd-cell-label\"},[_c('div',{staticClass:\"fd-label-text required\",domProps:{\"textContent\":_vm._s(_vm.nCxsy.label)}},[_vm._v(\"事由\")])]),_vm._v(\" \"),_c('td',{class:[_vm.nCxsy.validateState]},[_c('aty-select',{ref:\"jsAtySelectNCxsy\",attrs:{\"data\":_vm.nCxsy.dataList,\"filterable\":\"\",\"clearable\":\"\"},on:{\"select-selected\":function($event){return _vm.selectSelected('jsAtySelectNCxsy')},\"change\":function($event){\nvar i = arguments.length, argsArray = Array(i);\nwhile ( i-- ) argsArray[i] = arguments[i];\nreturn _vm.changeHandler.apply(void 0, [ _vm.nCxsy ].concat( argsArray ))}},model:{value:(_vm.nCxsy.value),callback:function ($$v) {_vm.$set(_vm.nCxsy, \"value\", $$v)},expression:\"nCxsy.value\"}})],1),_vm._v(\" \"),_c('td',{staticClass:\"fd-cell-label\"},[_c('div',{staticClass:\"fd-label-text\",domProps:{\"textContent\":_vm._s(_vm.cGlajxsh.label)}},[_vm._v(\"关联案件（线索）号\")])]),_vm._v(\" \"),_c('td',[_c('div',{staticClass:\"fd-input-text\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cGlajxsh.value),expression:\"cGlajxsh.value\"}],staticClass:\"fd-cc-input-text\",attrs:{\"type\":\"text\",\"maxlength\":\"20\"},domProps:{\"value\":(_vm.cGlajxsh.value)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.cGlajxsh, \"value\", $event.target.value)}}})])]),_vm._v(\" \"),_c('td',{staticClass:\"fd-cell-label\"},[_c('div',{staticClass:\"fd-label-text required\",domProps:{\"innerHTML\":_vm._s(_vm.cDcdxxm.label)}})]),_vm._v(\" \"),_c('td',{class:[_vm.cDcdxxm.validateState]},[_c('div',{staticClass:\"fd-input-text\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cDcdxxm.value),expression:\"cDcdxxm.value\"}],staticClass:\"fd-cc-input-text\",attrs:{\"type\":\"text\",\"title\":_vm.cDcdxxm.value,\"maxlength\":\"50\"},domProps:{\"value\":(_vm.cDcdxxm.value)},on:{\"change\":function($event){return _vm.changeHandler(_vm.cDcdxxm)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.cDcdxxm, \"value\", $event.target.value)}}})])])]),_vm._v(\" \"),_c('tr',[_c('td',{staticClass:\"fd-cell-label\"},[_c('div',{staticClass:\"fd-label-text required\",domProps:{\"innerHTML\":_vm._s(_vm.cGgdw.label)}})]),_vm._v(\" \"),_c('td',{class:[_vm.cGgdw.validateState]},[_c('div',{staticClass:\"fd-input-text\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cGgdw.value),expression:\"cGgdw.value\"}],staticClass:\"fd-cc-input-text\",attrs:{\"type\":\"text\",\"title\":_vm.cGgdw.value,\"maxlength\":\"50\"},domProps:{\"value\":(_vm.cGgdw.value)},on:{\"change\":function($event){return _vm.changeHandler(_vm.cGgdw)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.cGgdw, \"value\", $event.target.value)}}})])]),_vm._v(\" \"),_c('td',{staticClass:\"fd-cell-label\"},[_c('div',{staticClass:\"fd-label-text required\",domProps:{\"innerHTML\":_vm._s(_vm.cZw.label)}})]),_vm._v(\" \"),_c('td',{class:[_vm.cZw.validateState]},[_c('div',{staticClass:\"fd-input-text\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cZw.value),expression:\"cZw.value\"}],staticClass:\"fd-cc-input-text\",attrs:{\"type\":\"text\",\"title\":_vm.cZw.value,\"maxlength\":\"50\"},domProps:{\"value\":(_vm.cZw.value)},on:{\"change\":function($event){return _vm.changeHandler(_vm.cZw)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.cZw, \"value\", $event.target.value)}}})])]),_vm._v(\" \"),_c('td',{staticClass:\"fd-cell-label\"},[_c('div',{staticClass:\"fd-label-text required\",domProps:{\"innerHTML\":_vm._s(_vm.nZj.label)}})]),_vm._v(\" \"),_c('td',{class:[_vm.nZj.validateState]},[_c('aty-select',{ref:\"jsAtySelectNZj\",attrs:{\"data\":_vm.nZj.dataList,\"filterable\":\"\",\"clearable\":\"\",\"pinyin-search\":\"\"},on:{\"select-selected\":function($event){return _vm.selectSelected('jsAtySelectNZj')},\"change\":function($event){\nvar i = arguments.length, argsArray = Array(i);\nwhile ( i-- ) argsArray[i] = arguments[i];\nreturn _vm.changeHandler.apply(void 0, [ _vm.nZj ].concat( argsArray ))}},model:{value:(_vm.nZj.value),callback:function ($$v) {_vm.$set(_vm.nZj, \"value\", $$v)},expression:\"nZj.value\"}})],1)]),_vm._v(\" \"),_c('tr',[_c('td',{staticClass:\"fd-cell-label\"},[_c('div',{staticClass:\"fd-label-text required\",domProps:{\"textContent\":_vm._s(_vm.cPermission.label)}})]),_vm._v(\" \"),_c('td',{class:[_vm.cPermission.validateState]},[_c('aty-select',{ref:\"jsAtySelectCPermission\",attrs:{\"data\":_vm.cPermission.dataList,\"filterable\":\"\",\"clearable\":\"\",\"pinyin-search\":\"\"},on:{\"select-selected\":function($event){return _vm.selectSelected('jsAtySelectCPermission')},\"change\":function($event){\nvar i = arguments.length, argsArray = Array(i);\nwhile ( i-- ) argsArray[i] = arguments[i];\nreturn _vm.changeHandler.apply(void 0, [ _vm.cPermission ].concat( argsArray ))}},model:{value:(_vm.cPermission.value),callback:function ($$v) {_vm.$set(_vm.cPermission, \"value\", $$v)},expression:\"cPermission.value\"}})],1),_vm._v(\" \"),_c('td',{staticClass:\"fd-cell-label\"},[_c('div',{staticClass:\"fd-label-text required\",domProps:{\"textContent\":_vm._s(_vm.nMgxx.label)}})]),_vm._v(\" \"),_c('td',{staticClass:\"fd-radio-group\",class:[_vm.nMgxx.validateState]},[_c('aty-radio-group',{attrs:{\"dataList\":_vm.nMgxx.dataList},on:{\"change\":function($event){\nvar i = arguments.length, argsArray = Array(i);\nwhile ( i-- ) argsArray[i] = arguments[i];\nreturn _vm.changeHandler.apply(void 0, [ _vm.nMgxx ].concat( argsArray ))}},model:{value:(_vm.nMgxx.value),callback:function ($$v) {_vm.$set(_vm.nMgxx, \"value\", $$v)},expression:\"nMgxx.value\"}})],1),_vm._v(\" \"),_c('td',{staticClass:\"fd-cell-label\"}),_vm._v(\" \"),_c('td')]),_vm._v(\" \"),_c('tr',[_c('td',{staticClass:\"fd-cell-label\"},[_c('div',{staticClass:\"fd-label-text \",domProps:{\"textContent\":_vm._s(_vm.bcsm.label)}})]),_vm._v(\" \"),_c('td',{staticClass:\"fd-checkbox-group\",attrs:{\"colspan\":\"5\"}},[_c('input',{staticClass:\"abc\",attrs:{\"type\":\"checkbox\",\"name\":\"bcsmcheckbox\",\"value\":\"1\"},on:{\"click\":function($event){return _vm.changeBcsm()}}}),_vm._v(\"\\n                    指定管辖\\n                    \"),_c('input',{staticClass:\"abc\",attrs:{\"type\":\"checkbox\",\"name\":\"bcsmcheckbox\",\"value\":\"2\"},on:{\"click\":function($event){return _vm.changeBcsm()}}}),_vm._v(\"\\n                    交办案件\\n                    \"),_c('input',{staticClass:\"abc\",attrs:{\"type\":\"checkbox\",\"name\":\"bcsmcheckbox\",\"value\":\"3\"},on:{\"click\":function($event){return _vm.changeBcsm()}}}),_vm._v(\"\\n                    “双管”公职人员案件\\n                    \"),_c('input',{staticClass:\"abc\",attrs:{\"type\":\"checkbox\",\"name\":\"bcsmcheckbox\",\"value\":\"4\"},on:{\"click\":function($event){return _vm.changeBcsm()}}}),_vm._v(\"\\n                    协助其他纪检监察机关查询\\n                \")])]),_vm._v(\" \"),_c('tr',[_c('td',{staticClass:\"fd-cell-label\"},[_c('div',{staticClass:\"fd-label-text\",domProps:{\"textContent\":_vm._s(_vm.bz.label)}},[_vm._v(\"备注\")])]),_vm._v(\" \"),_c('td',{attrs:{\"colspan\":\"5\"}},[_c('div',{staticClass:\"fd-input-text\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.bz.value),expression:\"bz.value\"}],staticClass:\"fd-cc-input-text\",attrs:{\"type\":\"text\",\"maxlength\":\"50\"},domProps:{\"value\":(_vm.bz.value)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.bz, \"value\", $event.target.value)}}})])])])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('colgroup',[_c('col',{staticClass:\"fd-col-label\"}),_vm._v(\" \"),_c('col'),_vm._v(\" \"),_c('col',{staticClass:\"fd-col-label\"}),_vm._v(\" \"),_c('col'),_vm._v(\" \"),_c('col',{staticClass:\"fd-col-label\"}),_vm._v(\" \"),_c('col')])}]\n\nexport { render, staticRenderFns }","export default (item, category, childCategory) =>\r\n    // item.nZjlx\r\n    // 目标数据\r\n    ({\r\n        // 01自然人, 02企业、机构， 03其他\r\n        category: category,\r\n        // 子类型， 证件类型，证照类型，查询类型\r\n        childCategory: childCategory,\r\n        // 当前已经选中的列表数据\r\n        /**\r\n         * {\r\n         *     id:'', // 树id,\r\n         *     name:'', // 树节点名称,\r\n         *     startDate: '', //开始日期，\r\n         *     endDate:'', //结束日期\r\n         *     sjyList: [ // 选中的节点数据\r\n         *         {\r\n         *             id:'',\r\n         *             name:'',\r\n         *         }\r\n         *     ]\r\n         * }\r\n         */\r\n        cxxList: item.cCxxList\r\n    });\r\n","/**\n *@version 1.0.1\n *@author wanghuifeng\n *@createTime 2020/12/28 - 20:48\n *@updateTime 2020/12/28 - 20:48\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\n @description 审批表=> 公用的业务组件（自然人，企业/机构，其他）\n */\nconst NUM_50 = 50;\nexport default {\n    data() {\n        return {\n            // 数据添加数量\n            dataAddCount: '',\n            // 数据列表， 命名和后端接口字段保持一致\n            dataList: [],\n            // 当前激活的条目\n            activeItem: {}\n        };\n    },\n    methods: {\n        // 清空数据\n        clearDataList() {\n            this.dataList = [];\n        },\n\n        // 添加数据\n        addDataItem(item, flag) {\n            if (flag) {\n                if(item.cCxxList.length==0&& (item.cxlx == ''|| item.nZjlx==null)){\n                    return\n                }\n                let pos = 0;\n                for (var i = this.dataList.length - 1; i >= 0; i--) {\n                    if (this.dataList[i].cCxxList.length != 0) {\n                        pos = i\n                        this.dataList.splice(pos + 1, 0, item);\n                        return\n                    }\n                }\n            } else {\n                this.dataList.push(item);\n            }\n        },\n\n        // 删除数据\n        deleteDataListItem(index, count = 1) {\n            // 索引和数量\n            this.dataList.splice(index, count);\n        },\n\n        // 设置当前激活的条目\n        setActiveItem(dataItem) {\n            this.activeItem = dataItem;\n        },\n\n        // 设置数据添加数\n        setDataAddCount(value) {\n            this.dataAddCount = value;\n        },\n\n        // 重置数据添加数\n        resetDataAddCount() {\n            // 清空值\n            this.setDataAddCount('');\n        },\n\n        // 删除对应种类的某一行\n        clickDeleteItem(index) {\n            // 1. 删除数据条目\n            this.deleteDataListItem(index);\n            // 2. 检查重复值\n            this.checkRepeat();\n        },\n\n        // 添加事件\n        clickAdd() {\n            // 获取当前添加的数量（转换成数字）\n            const _dataAddCount = parseInt(this.dataAddCount, 10);\n            // 获取当前三个对象的总数据条数\n            const _currentTotalCount = this.$parent.dGetSpbDataListSize();\n            // 【自然人】【企业/机构】【其他】这三个模块的数据加起来不能大于50（包含初始化的数据条数）\n            // 获取查询对象添加的输入框里面的值，大于0的时候，并且总数据（【自然人】【企业/机构】【其他】这三个模块的数据加起来）小于50条，添加数据【 批量添加数据】的方法,\n            // 否则走 【单条数据条目】\n            if (_dataAddCount > 0 && _currentTotalCount < NUM_50) {\n                // 批量添加\n                this.batchAddData(_dataAddCount);\n                // 如果 【自然人】【企业/机构】【其他】这三个模块的数据加起来大于50\n                // 添加失败\n            } else if (_currentTotalCount >= NUM_50) {\n                this.$emit('invalid', '添加失败，查询对象（自然人、机构、其他类）最多可查询50条记录');\n            } else {\n                // 单条数据条目添加\n                this.addDataItem(this.createDataItem());\n            }\n        },\n\n        // 批量添加数据的方法\n        batchAddData(len) {\n            // 实际添加的数据的长度\n            for (let i = 0; i < len; i++) {\n                this.addDataItem(this.createDataItem());\n            }\n            // 重置数据添加数\n            this.resetDataAddCount();\n        },\n\n        // 清除查询项\n        clickClearCxx(item, index) { // eslint-disable-line\n            // 清空【查询项数组】\n            // 1. 清空【查询项数组】\n            item.cCxxList = [];\n            // 2. 设置该数据是否存在\n            this.setDataItemExistValue(item);\n            // 3.必填项的验证\n            this.validateRequired(item, 'cCxxList');\n        },\n\n        // 更新查询项数据\n        updateCxxData(cCxxList) {\n            // 1.更新查询项数据\n            this.activeItem.cCxxList = cCxxList;\n            // 2. 设置该数据是否存在\n            this.setDataItemExistValue(this.activeItem);\n            // 3.必填项的验证\n            this.validateRequired(this.activeItem, 'cCxxList');\n        },\n\n        // 添加数量处理函数\n        inputDataAddCountHandler(val) {\n            // 空字符串不做处理\n            if (val === '') {\n                return false;\n            }\n            // 将值转换成数字\n            const _value = parseInt(val, 10);\n            // 如果是NaN 代表输入的不是数字\n            if (Number.isNaN(_value)) {\n                this.$emit('invalid', '必须输入数字');\n                // 设置默认值\n                this.setDataAddCount('');\n                return false;\n            }\n            // 必须val的值存在\n            if (_value < 1) {\n                this.$emit('invalid', '禁止输入小于1的数字');\n                // 设置默认值\n                this.setDataAddCount('');\n                return false;\n            }\n            // 获取当前三个对象的总数据条数\n            const _currentTotalCount = this.$parent.dGetSpbDataListSize();\n            // 剩余能添加的总数据量\n            const _residueTotalCount = NUM_50 - _currentTotalCount;\n            if (_value > _residueTotalCount) {\n                this.$emit('invalid', `查询对象（自然人、机构、其他类）最多可查询50条记录, 当前最多还能输入${_residueTotalCount}条记录`);\n                // 设置值为最大值\n                this.setDataAddCount(_residueTotalCount);\n            }\n        },\n\n        // 设置数据条目是否存在值\n        setDataItemExistValue(item) {\n            // 判断该条数据是否有一个值存在，如果有一个值存在，就需要进行其他项的验证\n            item.existValue = this.isExistValue(item);\n        },\n\n        // 获取提示文本\n        getTipsContent(item) {\n            return item.sjyList.length > 0 ? `<ul class=\"fd-cxx-tips-list\">${item.sjyList.map((itemC) => `<li>${itemC.name}</li>`)\n                .join('')}</ul>` : '';\n        },\n\n        // 必填项验证\n        validateRequired(item, key) {\n            // 如果存在值，那么就需要取消必填提示框样式\n            let _validateFlag = true;\n            // key === 'cCxxList' 时是数组，所以需要用数组的判断方法\n            // 如果该条数据存在值，就需要做校验\n            if (item.existValue) {\n                // 如果值是数组\n                if (Array.isArray(item[key]) && !item[key].length) {\n                    // 设置为必填\n                    item[`mustSet${key}`] = true;\n                    // 未通过验证\n                    _validateFlag = false;\n                    // 如果不存在， 隐藏字段， [cBh] 不要进行判断\n                } else if (!Array.isArray(item[key]) && !item[key] && key !== 'cBh') {\n                    // 设置为必填\n                    item[`mustSet${key}`] = true;\n                    // 未通过验证\n                    _validateFlag = false;\n                } else {\n                    // 设置为必填验证为false\n                    item[`mustSet${key}`] = false;\n                }\n            } else {\n                // 循环每个对象条目，获取对象里面的值，赋值给新目标对象\n                this.dataKeys.forEach((cKey) => {\n                    // 取消必填项的红色框\n                    item[`mustSet${cKey}`] = false;\n                });\n            }\n            return _validateFlag;\n        },\n\n        // 判断是否存在数据（值）\n        adjustExistValue() {\n            // 是否存在数据, 默认不存在\n            let _existValueFlag = false;\n            // 循环自然人列表， 判断列表内部的值是否存在\n            this.dataList.every((item) => {\n                // 判断该条数据是否有一个值存在，只要有一个值存在，那么说明【自然人列表】就存在值\n                const _existValue = this.isExistValue(item);\n                // 如果存在,打断循环\n                if (_existValue) {\n                    // 重新赋值，说明存在值\n                    _existValueFlag = true;\n                    return false;\n                }\n                return true;\n            });\n            return _existValueFlag;\n        },\n\n        // 获取模块内部的数据\n        getQueryData() {\n            // 最终的数据列表\n            const _dataList = [];\n            // 循环自然人列表\n            this.dataList.forEach((item, index) => {\n                // 序号需要传给后台，后台做排序处理\n                item.nXh = index;\n                // 判断该条数据是否有一个值存在，如果有一个值存在，就需要进行其他项的验证\n                // 存在值的数据，才需要存到后端\n                if (this.isExistValue(item)) {\n                    // 创建一个新对象\n                    const _targetItem = {};\n                    // 循环后端需要的keys列表\n                    this.dataKeys.forEach((key) => {\n                        // 将有效的数据值，存到新对象中\n                        _targetItem[key] = item[key];\n                    });\n                    // 将新对象添加到最终的数据列表\n                    _dataList.push(_targetItem);\n                }\n            });\n            // 返回数据列表\n            return _dataList;\n        },\n\n        // 设置数据\n        setQueryData(dataList, clearOriginData) {\n            // 循环数据\n            if (Array.isArray(dataList) && dataList.length > 0) {\n                // 1.如果清空原始数据, 保存数据，会清空原始数据\n                if (clearOriginData) {\n                    // 1.1清空数据， 保存，生成审批表，会清空原始数据，用后端返回的数据重新渲染页面\n                    // 此处存在性能问题，最好的方式应该是只更新 cBh， 但是当用户隔行保存数据时， cBh就不好对应了，所以直接清空，相当于刷新了页面！\n                    // 后期前后端接口修正后，需要修改\n                    this.clearDataList();\n                } else {\n                    // 1.2 处理原始数据，保留有效数据，删除无效数据\n                    this.operateOriginDataList();\n                }\n                // 2. 循环数据，添加新数据\n                dataList.forEach((item) => {\n                    // 判断该条数据是否有一个值存在，如果有一个值存在，就需要进行其他项的验证\n                    item.existValue = this.isExistValue(item);\n                    // 目标数据\n                    const _targetItem = this.createDataItem();\n                    // 循环每个对象条目，获取对象里面的值，赋值给新目标对象\n                    Object.keys(item)\n                        .forEach((key) => {\n                            _targetItem[key] = item[key];\n                        });\n                    // 添加数据\n                    this.addDataItem(_targetItem);\n                });\n                // 3. 检查重复值校验\n                this.checkRepeat();\n            } else {\n                // 如果返回的数组是空数组，那么需要清空初始化的数据\n                // 1. 处理原始数据，保留有效数据，删除无效数据\n                this.operateOriginDataList();\n            }\n        },\n\n        // 获取模块数组的长度\n        getDataListSize() {\n            return this.dataList.length;\n        },\n\n        // 处理原始数据，保留有效数据，删除无效数据\n        operateOriginDataList() {\n            // 1. 最终的数据列表\n            const _dataList = [];\n            // 2. 循环自然人列表\n            this.dataList.forEach((item) => {\n                // 2.1 判断该条数据是否有一个值存在，如果有一个值存在，就需要保留这一行数据\n                if (this.isExistValue(item)) {\n                    _dataList.push(item);\n                }\n            });\n            // 3. 返回最新的数据\n            this.dataList = _dataList;\n            // 4. 返回有效数据的数据列表\n            return _dataList;\n        },\n\n        // 判断该条数据是否有一个值存在，如果有一个值存在，就需要保留这一行数据\n        isExistValue(item) {\n            return this.dataKeys.some((key) => Array.isArray(item[key]) ? item[key].length > 0 : item[key]);\n        },\n        // 绑定选中事件\n        // 场景 先选中一条数据A（职级选中“一级主任科员”）,然后删除A中部分字段（点选，删除“主任科员”），然后再选中A（回车或者点选“一级主任科员”）,这个时候A不是原本的数据（一级主任科员）的问题\n        selectSelected(index, currentElement) {\n            // model变动，需要查询（非多选 && 支持过滤 && 当前的值！=undefined）\n            this.$refs[currentElement][index].modelToQuery();\n\n            /**\n             * [外部触发：data、value、loadCode、selectlabel改变]\n             * 【用于处理】：\n             * 1. data改变 [ 数据改变后需要刷新label，用户可能修改了label]\n             * 2. lazy懒加载(selectLabel必须赋值,否则会显示code,因为它无法翻译)\n             *  [ 懒加载时候没有data，赋值了selectLabel，此时如果点击删除某个数据，需要用户自己修改v-model，因为传入的label无法对应数据值 ]\n             * 【注意】：\n             * 必须要有值-this.model，否则就失去了意义\n             */\n            this.$refs[currentElement][index].updateLabel();\n        }\n    }\n};\n","/**\r\n *@version 1.0.1\r\n *@author wanghuifeng\r\n *@createTime 2020/12/28 - 20:48\r\n *@updateTime 2020/12/28 - 20:48\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description 审批表=> 自然人主入口\r\n */\r\n/**\r\n *      方法集合\r\n **********************/\r\n// 全局事件\r\nimport globalEvent from './extend/globalEvent.js';\r\n// 校验（居民身份证号，中国公民护照校验）\r\nimport validateType from '../common/validateType.js';\r\n// 校验（居民身份证号，中国公民护照校验）\r\n// import idCardNoUtil from '../common/idCardNoUtil.js';\r\n// 查询项需要的数据条目\r\nimport createCxxDataItem from '../common/createCxxDataItem';\r\n// 查询对象通用代码\r\nimport cxdxCommon from '../common/cxdxCommon';\r\n\r\n\r\nconst NUM_10 = 10;\r\n// 导出模块\r\nexport default {\r\n    mixins: [globalEvent, cxdxCommon],\r\n    props: {\r\n        saveFlag: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            // 【证件类型】下拉列表\r\n            zjlxList: window.fdDataTable.getCodeTypeDataList(window.fdDataTable.zjlxCodeType),\r\n            // 【职级】下拉列表\r\n            zjList: window.fdDataTable.getCodeTypePinyinDataList(window.fdDataTable.zJCodeType),\r\n            // 【干部管理权限】下拉列表\r\n            gbglqxList: window.fdDataTable.getCodeTypePinyinDataList(window.fdDataTable.gbglqxCodeType),\r\n            // 数据条目上有用的key\r\n            dataKeys: [\r\n                // 1.  cBH\r\n                'cBh',\r\n                // 2. 姓名\r\n                'cXm',\r\n                // 3.\r\n                'nZjlx',\r\n                // 4. 证件号码\r\n                'cZjhm',\r\n                // 5.  职级\r\n                'nZj',\r\n                // 6.干部管理权限\r\n                'gbglqx',\r\n                // 7.  查询项数组\r\n                'cCxxList'\r\n            ]\r\n        };\r\n    },\r\n    created() {\r\n        // 初始化的方法\r\n        this.init();\r\n    },\r\n    mounted() {\r\n        // 初始化的方法\r\n        this.$emit('ready', this);\r\n    },\r\n    methods: {\r\n        clickCopyItem(item,index) {\r\n            if(this.dataList.length <= (index + 1)){\r\n                return;\r\n            }\r\n            let target = this.dataList[index+1]\r\n            if(target.nZjlx == item.nZjlx && item.cCxxList.length != 0){\r\n                this.dataList[index+1].cCxxList = item.cCxxList;\r\n                this.dataList[index+1].mustSetcCxxList = item.mustSetcCxxList;\r\n            }else{\r\n                this.$emit('invalid', '复制失败，本条查询的证件类型与下一条的证件类型不一致');\r\n            }\r\n            // 获取当前添加的数量（转换成数字）\r\n            // const _dataAddCount = parseInt(this.dataAddCount, 10);\r\n            // // 获取当前三个对象的总数据条数\r\n            // const _currentTotalCount = this.$parent.dGetSpbDataListSize();\r\n            // // 【自然人】【企业/机构】【其他】这三个模块的数据加起来不能大于50（包含初始化的数据条数）\r\n            // // 获取查询对象添加的输入框里面的值，大于0的时候，并且总数据（【自然人】【企业/机构】【其他】这三个模块的数据加起来）小于50条，添加数据【 批量添加数据】的方法,\r\n            // // 否则走 【单条数据条目】\r\n            // if (_dataAddCount > 0 && _currentTotalCount < 50) {\r\n            //     // 批量添加\r\n            //     this.batchAddData(_dataAddCount);\r\n            //     // 如果 【自然人】【企业/机构】【其他】这三个模块的数据加起来大于50\r\n            //     // 添加失败\r\n            // } else if (_currentTotalCount >= 50) {\r\n            //     this.$emit('invalid', '添加失败，查询对象（自然人、机构、其他类）最多可查询50条记录');\r\n            // } else {\r\n            //     // 单条数据条目添加\r\n            //     let dataItem = this.createDataItem();\r\n            //     dataItem.nZjlx = item.nZjlx;\r\n            //     dataItem.nZj = item.nZj;\r\n            //     dataItem.gbglqx = item.gbglqx;\r\n            //     dataItem.cCxxList = item.cCxxList;\r\n            //     this.addDataItem(dataItem,true);\r\n            // }\r\n        },\r\n        // 初始化的方法\r\n        init() {\r\n            // 初始化自然人列表， 默认是5条\r\n            this.initDataList();\r\n        },\r\n\r\n        // 初始化自然人列表， 默认是5条\r\n        initDataList(len = 5) { // eslint-disable-line\r\n            // 批量添加\r\n            this.batchAddData(len);\r\n        },\r\n        // 显示查询项，model\r\n        clickShowModal(item) {\r\n            // 必须先选择证件类型\r\n            if (item.nZjlx) {\r\n                // 1.设置当前的激活条目\r\n                this.setActiveItem(item);\r\n                // 2.触发事件\r\n                this.emitGlobalEvent(() => {\r\n                    // 创建【查询项】 需要的数据条目\r\n                    const _dataItem = createCxxDataItem(item, '01', item.nZjlx);\r\n                    // 发送全局事件\r\n                    this.globalBus.$emit('global-spb-cxx-show', _dataItem, 'global-spb-zrr-updateCxxData');\r\n                });\r\n            } else {\r\n                this.$emit('invalid', '请先选择证件类型');\r\n            }\r\n        },\r\n\r\n        // 创建数据条目\r\n        createDataItem() {\r\n            return {\r\n                // 生成随机id 【数据唯一标识字段】\r\n                randomId: Math.random()\r\n                    .toFixed(NUM_10),\r\n\r\n                // 【页面数据字段】\r\n                // 1. 序号\r\n                nXh: 0,\r\n                // 2. 姓名\r\n                cXm: '',\r\n                // 3. 证件类型\r\n                nZjlx: null,\r\n                // 4. 证件号码\r\n                cZjhm: '',\r\n                // 5.  职级\r\n                nZj: null,\r\n                // 6.干部管理权限\r\n                gbglqx: null,\r\n                // 7.  查询项数组\r\n                cCxxList: [\r\n                    // {\r\n                    //     name: '张三',\r\n                    //     sjyList: [\r\n                    //         {name: '人民'},\r\n                    //         {name: '国家'}\r\n                    //     ]\r\n                    // }, {\r\n                    //     name: '李四',\r\n                    //     sjyList: [\r\n                    //         {name: '中国'},\r\n                    //         {name: '中央'}\r\n                    //     ]\r\n                    // }\r\n                ],\r\n                // 查询项名称 cCxxMc 【无用字段】 需要和后端核对 !important 20210104\r\n                // cCxxMc: '',\r\n                // 【页面状态显示字段】\r\n                // 是否显示输入框后的感叹号，表示该字段和其它行重复， 【页面状态显示字段】\r\n                showGth: false,\r\n                // 表示该字段和其它行重复 【不能重复】\r\n                dataRepeat: false,\r\n                // 2.姓名【必填项】\r\n                mustSetcXm: false,\r\n                // 3.证件类型【必填项】\r\n                mustSetnZjlx: false,\r\n                // 4.证件号码【必填项】\r\n                mustSetcZjhm: false,\r\n                // 5.职级【必填项】\r\n                mustSetnZj: false,\r\n                // 6.干部管理权限【必填项】\r\n                mustSetgbglqx: false,\r\n                // 7. 查询项数组【必填项】\r\n                mustSetcCxxList: false,\r\n                // 数据无效 【数据验证时，是否无效】\r\n                invalid: false,\r\n                // 是否存在值【用于数据是否需要验证】\r\n                existValue: false,\r\n                // 8.  cBH, 默认为空， 后端保存后添加\r\n                cBh: ''\r\n            };\r\n        },\r\n\r\n        getStrLength(str) {\r\n            // \"g\" 表示全局匹配\r\n            return str.replace(/[\\u0391-\\uFFE5]/g, 'aa').length;\r\n        },\r\n\r\n        adjustEllipsis(item) {\r\n            // 获取名称\r\n            const _name = window.fdDataTable.getCodeToName(window.fdDataTable.zJCodeType, item.nZj);\r\n            // eslint-disable-next-line no-magic-numbers\r\n            return this.getStrLength(_name) > 16;\r\n        },\r\n\r\n        // 获取提示名称\r\n        getItemTipsName(event, target) {\r\n            if (target && target.querySelector('.aty-select-input')) {\r\n                return target.querySelector('.aty-select-input').value;\r\n            }\r\n            return '';\r\n        },\r\n\r\n        // 改变下拉框的值，证件类型变动，那么【证件号码】 和 【查询项】应该清空\r\n        changeSelect(item, name) {\r\n            // 1. 设置该数据是否存在\r\n            this.setDataItemExistValue(item);\r\n            // 2.必填项的验证\r\n            this.validateRequired(item, name);\r\n            // 3. 如果是 【证件类型】\r\n            if (name === 'nZjlx') {\r\n                // 清空【证件号码】\r\n                item.cZjhm = '';\r\n                // 清空【查询项】\r\n                item.cCxxList = [];\r\n                // 去掉证件号码红框\r\n                item.invalid = false;\r\n                // 检测其他数据项是否还有重复\r\n                this.checkRepeat();\r\n                // 因为将查询项和证件号码清空了，所以需要重新走一遍数据是否存在和验证的方法\r\n                // 1. 设置该数据是否存在\r\n                this.setDataItemExistValue(item);\r\n                // 2.必填项的验证\r\n                this.validateRequired(item, name);\r\n            }\r\n        },\r\n\r\n        // 值发生变动处理函数\r\n        inputHandler(item, name) {\r\n            // 1.去掉空格\r\n            item[name] = item[name].replace(/\\s+/g, '');\r\n            // 2. 设置该数据是否存在\r\n            this.setDataItemExistValue(item);\r\n            // 3. 必填项校验\r\n            this.validateRequired(item, name);\r\n            // 4.如果是【证件号码】，需要进行以下验证\r\n            if (name === 'cZjhm') {\r\n                // 4.1. 字母转换成大写\r\n                item.cZjhm = item.cZjhm.toUpperCase();\r\n                // 4.2 及时检验重复项\r\n                this.checkRepeat();\r\n            }\r\n        },\r\n\r\n        // 检查重复值\r\n        checkRepeat() {\r\n            // 证件号码对象\r\n            const _cZjhmObject = {};\r\n            // 重复名验证\r\n            this.dataList.forEach((item, index) => {\r\n                // 如果存在证件号码\r\n                if (item.cZjhm) {\r\n                    if (!_cZjhmObject[item.cZjhm]) {\r\n                        _cZjhmObject[item.cZjhm] = [];\r\n                    }\r\n                    // 添加到数组\r\n                    _cZjhmObject[item.cZjhm].push(index);\r\n                } else {\r\n                    // 去掉证件号码因为重复值出现的红框\r\n                    item.dataRepeat = false;\r\n                }\r\n            });\r\n            // 循环证件号码对象的values\r\n            Object.values(_cZjhmObject)\r\n                .forEach((dataIndexList) => {\r\n                    // 如果值的length大于1，说明存在重复数据\r\n                    if (dataIndexList.length > 1) {\r\n                        // 循环重复数据索引值列表\r\n                        dataIndexList.forEach((itemIndex) => {\r\n                            // 表示该字段和其它行重复 , 设置值true【不能重复】\r\n                            this.dataList[itemIndex].dataRepeat = true;\r\n                        });\r\n                    } else {\r\n                        // 表示该字段不重复，恢复默认值 false\r\n                        this.dataList[dataIndexList[0]].dataRepeat = false;\r\n                    }\r\n                });\r\n        },\r\n\r\n        // 校验身份证号 和 校验中国公民护照校验\r\n        checkIdcard(item) {\r\n            // 其他校验=> 无效性验证\r\n            this.validateValidator(item);\r\n        },\r\n\r\n        // 其他校验=> 无效性验证\r\n        validateValidator(item) {\r\n            // 默认有效\r\n            item.invalid = false;\r\n            // 如果【证件号码】存在值\r\n            if (['10', '40', '20', '30'].indexOf(item.nZjlx) !== -1) {\r\n                let _validateObject = {};\r\n                // 居民身份证\r\n                if (item.nZjlx === '10') {\r\n                    // 验证对象\r\n                    _validateObject = validateType.issfz(item.cZjhm);\r\n\r\n                    // _validateObject = idCardNoUtil.checkIdCardNo(item.cZjhm);\r\n                }\r\n                // 中国公民护照 / 往来台湾通行证 / 往来港澳通行证\r\n                if (item.nZjlx === '40' || item.nZjlx === '20' || item.nZjlx === '30') {\r\n                    // 验证对象\r\n                    _validateObject = validateType.isNotHz(item.cZjhm);\r\n                }\r\n                // 设置无效 => 身份证校验\r\n                item.invalid = !_validateObject.validate;\r\n                // 如果无效\r\n                if (item.invalid) {\r\n                    // 触发提示\r\n                    this.$emit('invalid', _validateObject.message);\r\n                }\r\n            }\r\n            // 返回是否有效\r\n            return item.invalid;\r\n        },\r\n\r\n        // 验证方法\r\n        validate() {\r\n            return new Promise((resolve, reject) => {\r\n                // 是否通过验证\r\n                let _validateFlag = true;\r\n                // 1.重复值校验\r\n                this.checkRepeat();\r\n                // 循环自然人列表， 判断里内部的值是否存在\r\n                this.dataList.forEach((item) => {\r\n                    // 判断该条数据是否有一个值存在，如果有一个值存在，就需要进行其他项的验证\r\n                    if (this.isExistValue(item)) {\r\n                        // 循环每个对象条目，获取对象里面的值，赋值给新目标对象\r\n                        this.dataKeys.forEach((key) => {\r\n                            const _flag = this.validateRequired(item, key);\r\n                            // 如果是通过的\r\n                            if (_validateFlag) {\r\n                                _validateFlag = _flag;\r\n                            }\r\n                        });\r\n                        // 其他校验，=> 返回无效性验证， 如果是无效值，那么必定未通过验证\r\n                        if (_validateFlag && this.validateValidator(item)) {\r\n                            // 未通过验证\r\n                            _validateFlag = false;\r\n                        }\r\n                        // 如果存在重复数据，也不允许提交审批 【未通过验证】\r\n                        if (_validateFlag && item.dataRepeat) {\r\n                            // 未通过验证\r\n                            // 最新需求， 重复2可以通过验证 0200126 wanghuifeng\r\n                            // _validateFlag = false;\r\n                            // 有重复值\r\n                            this.$emit('repeat', true);\r\n                        }\r\n                    }\r\n                });\r\n                // 根据验证的标识，决定调用resolve 还是 reject\r\n                _validateFlag ? resolve(this.getQueryData()) : reject(_validateFlag);\r\n            });\r\n        }\r\n    }\r\n};\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020/12/24 - 10:57\r\n *@updateTime 2020/12/28 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description 全局事件模块\r\n */\r\nexport default {\r\n    created() {\r\n        // 绑定全局事件\r\n        this.bindGlobalEvent();\r\n    },\r\n    beforeDestroy() {\r\n        // 取消全局事件\r\n        this.unbindGlobalEvent();\r\n    },\r\n    methods: {\r\n        // 绑定全局事件\r\n        bindGlobalEvent() {\r\n            // 绑定设置 更新查询项数据\r\n            this.globalBus.$on('global-spb-zrr-updateCxxData', this.updateCxxData);\r\n            // 绑定设置当前的默认数据\r\n            this.globalBus.$on('global-spb-zrr-setQueryData', this.setQueryData);\r\n        },\r\n        // 取消全局事件\r\n        unbindGlobalEvent() {\r\n            // 取消绑定设置 更新查询项数据\r\n            this.globalBus.$off('global-spb-zrr-updateCxxData', this.updateCxxData);\r\n            // 取消绑定设置当前的默认数据\r\n            this.globalBus.$off('global-spb-zrr-setQueryData', this.setQueryData);\r\n        },\r\n        // 触发全局事件\r\n        emitGlobalEvent(callback) {\r\n            if (this.globalBus) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n};\r\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=19f521de&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fd-ac-spb-zrr\"},[_c('table',{staticClass:\"fd-cc-table-02\"},[_vm._m(0),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('tbody',_vm._l((_vm.dataList),function(item,index){return _c('tr',{key:item.randomId,staticClass:\"fd-data-row\"},[_c('td',[_c('div',{staticClass:\"fd-xh\"},[_vm._v(_vm._s(index + 1))]),_vm._v(\" \"),_c('i',{staticClass:\"fd-delete-hcdx\",on:{\"click\":function($event){return _vm.clickDeleteItem(index)}}})]),_vm._v(\" \"),_c('td',{staticClass:\"fd-must-set\",class:{required:item.mustSetcXm}},[_c('div',{staticClass:\"fd-input-contain\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(item.cXm),expression:\"item.cXm\"}],staticClass:\"fd-cc-input-text\",attrs:{\"type\":\"text\",\"title\":item.cXm,\"maxlength\":\"50\"},domProps:{\"value\":(item.cXm)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(item, \"cXm\", $event.target.value)},function($event){return _vm.inputHandler(item, 'cXm')}]}})])]),_vm._v(\" \"),_c('td',{staticClass:\"fd-must-set\",class:{required:item.mustSetnZjlx}},[_c('div',{staticClass:\"fd-input-contain\"},[_c('aty-select',{ref:\"jsAtySelectNZjlx\",refInFor:true,attrs:{\"filterable\":\"\",\"data\":_vm.zjlxList,\"clearable\":\"\"},on:{\"select-selected\":function($event){return _vm.selectSelected(index, 'jsAtySelectNZjlx')},\"change\":function($event){return _vm.changeSelect(item, 'nZjlx')}},model:{value:(item.nZjlx),callback:function ($$v) {_vm.$set(item, \"nZjlx\", $$v)},expression:\"item.nZjlx\"}})],1)]),_vm._v(\" \"),_c('td',{staticClass:\"fd-must-set \",class:{\n                required: item.mustSetcZjhm,\n                repeat:item.dataRepeat,\n                invalid:item.invalid,\n                'show-gth':item.showGth}},[_c('div',{staticClass:\"fd-input-contain\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(item.cZjhm),expression:\"item.cZjhm\"}],staticClass:\"fd-cc-input-text\",attrs:{\"type\":\"text\",\"maxlength\":\"30\"},domProps:{\"value\":(item.cZjhm)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(item, \"cZjhm\", $event.target.value)},function($event){return _vm.inputHandler(item, 'cZjhm')}],\"blur\":function($event){$event.preventDefault();return _vm.checkIdcard(item)}}}),_vm._v(\" \"),_c('span',{staticClass:\"fd-icon-exist-gth\"},[_vm._v(\"!\")])]),_vm._v(\" \"),_c('div',{staticClass:\"fd-exist-tips\"},[_vm._v(\"该证件号码重复！\")])]),_vm._v(\" \"),_c('td',{staticClass:\"fd-must-set\",class:{required:item.mustSetnZj}},[_c('div',{directives:[{name:\"tips\",rawName:\"v-tips.ellipsis\",value:(_vm.getItemTipsName),expression:\"getItemTipsName\",modifiers:{\"ellipsis\":true}}],staticClass:\"fd-input-contain\",attrs:{\"data-ellipsis\":_vm.adjustEllipsis(item)}},[_c('aty-select',{ref:\"jsAtySelectNZj\",refInFor:true,attrs:{\"filterable\":\"\",\"data\":_vm.zjList,\"clearable\":\"\",\"transfer\":\"\",\"pinyin-search\":\"\"},on:{\"select-selected\":function($event){return _vm.selectSelected(index, 'jsAtySelectNZj')},\"change\":function($event){return _vm.changeSelect(item, 'nZj')}},model:{value:(item.nZj),callback:function ($$v) {_vm.$set(item, \"nZj\", $$v)},expression:\"item.nZj\"}})],1)]),_vm._v(\" \"),_c('td',{staticClass:\"fd-must-set\",class:{required:item.mustSetgbglqx}},[_c('div',{staticClass:\"fd-input-contain\"},[_c('aty-select',{ref:\"jsAtySelectGbglqx\",refInFor:true,attrs:{\"filterable\":\"\",\"data\":_vm.gbglqxList,\"clearable\":\"\",\"pinyin-search\":\"\"},on:{\"select-selected\":function($event){return _vm.selectSelected(index, 'jsAtySelectGbglqx')},\"change\":function($event){return _vm.changeSelect(item, 'gbglqx')}},model:{value:(item.gbglqx),callback:function ($$v) {_vm.$set(item, \"gbglqx\", $$v)},expression:\"item.gbglqx\"}})],1)]),_vm._v(\" \"),_c('td',{staticClass:\"fd-must-set cxx\",class:{required:item.mustSetcCxxList}},[_c('div',{staticClass:\"fd-input-contain\",on:{\"click\":function($event){$event.stopPropagation();return _vm.clickShowModal(item)}}},[_c('div',{staticClass:\"fd-input-contain-con\"},[_c('ul',{staticClass:\"fd-cxx-tag-list\"},_vm._l((item.cCxxList),function(itemC,indexC){return _c('li',{directives:[{name:\"tips\",rawName:\"v-tips.cxx\",value:(_vm.getTipsContent(itemC)),expression:\"getTipsContent(itemC)\",modifiers:{\"cxx\":true}}],key:itemC.name + indexC + itemC.sjyList.length,staticClass:\"fd-tag-item\"},[_c('span',{domProps:{\"textContent\":_vm._s(itemC.name)}}),_vm._v(\" \"),(itemC.sjyList.length > 0)?_c('span',[_vm._v(\" (\"+_vm._s(itemC.sjyList.length)+\")\")]):_vm._e()])}),0),_vm._v(\" \"),_c('i',{staticClass:\"aty-icon aty-icon-arrow-down-b aty-select-arrow\"})])]),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.cCxxList.length),expression:\"item.cCxxList.length\"}],staticClass:\"fd-clear-icon\",on:{\"click\":function($event){$event.stopPropagation();return _vm.clickClearCxx(item,index)}}})]),_vm._v(\" \"),_c('a',{staticClass:\"copyIcon\",on:{\"click\":function($event){return _vm.clickCopyItem(item,index)}}})])}),0),_vm._v(\" \"),_c('tfoot',[_c('tr',[_c('td',{staticClass:\"fd-footer-cell\",attrs:{\"colspan\":\"7\"}},[_c('div',{staticClass:\"fd-operate-contain\"},[_c('button',{staticClass:\"fd-btn-add\",on:{\"click\":function($event){return _vm.clickAdd()}}},[_vm._v(\"添加\")]),_vm._v(\" \"),_c('div',{staticClass:\"fd-input-add\"},[_c('aty-input',{on:{\"input\":_vm.inputDataAddCountHandler},model:{value:(_vm.dataAddCount),callback:function ($$v) {_vm.dataAddCount=$$v},expression:\"dataAddCount\"}}),_vm._v(\" \"),_c('label',{staticClass:\"fd-label-text\"},[_vm._v(\"个\")])],1),_vm._v(\" \"),_c('span',{staticClass:\"fd-tips\"},[_vm._v(\"填写数字后点击添加按钮，可以添加对应个数的被查询对象\")])])])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('colgroup',[_c('col',{staticClass:\"fd-col1\"}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col2\"}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col3\"}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col4\"}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col5\"}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col6\"}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col7\"}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col-auto\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',{staticClass:\"fd-tr-placeholder\"},[_c('th'),_vm._v(\" \"),_c('th'),_vm._v(\" \"),_c('th'),_vm._v(\" \"),_c('th'),_vm._v(\" \"),_c('th'),_vm._v(\" \"),_c('th'),_vm._v(\" \"),_c('th')]),_vm._v(\" \"),_c('tr',[_c('th',{staticClass:\"fd-table-caption\",attrs:{\"colspan\":\"7\"}},[_vm._v(\"自然人\")])]),_vm._v(\" \"),_c('tr',{staticClass:\"fd-head-tr\"},[_c('th',[_vm._v(\"序号\")]),_vm._v(\" \"),_c('th',[_c('em',{staticClass:\"fd-red\"},[_vm._v(\"*\")]),_vm._v(\"姓名\")]),_vm._v(\" \"),_c('th',{staticClass:\"fd-zjlx-td\"},[_c('em',{staticClass:\"fd-red\"},[_vm._v(\"*\")]),_vm._v(\"证件类型\")]),_vm._v(\" \"),_c('th',{staticClass:\"fd-zjhm-td\"},[_c('em',{staticClass:\"fd-red\"},[_vm._v(\"*\")]),_vm._v(\"证件号码\")]),_vm._v(\" \"),_c('th',[_c('em',{staticClass:\"fd-red\"},[_vm._v(\"*\")]),_vm._v(\"职级\")]),_vm._v(\" \"),_c('th',[_c('em',{staticClass:\"fd-red\"},[_vm._v(\"*\")]),_vm._v(\"干部管理权限\")]),_vm._v(\" \"),_c('th',{staticClass:\"fd-cxx-cell\"},[_c('em',{staticClass:\"fd-red\"},[_vm._v(\"*\")]),_vm._v(\"查询项\"),_c('span',{staticClass:\"fd-tip-img\"}),_vm._v(\" \"),_c('div',{staticClass:\"fd-cxx-tip\"},[_c('span',{staticClass:\"fd-close-tip\"}),_vm._v(\"\\n                    当前查询项选择完成后，会将已选的信息项类型和已经选择的协查单位数量展示出来;\\n                    \"),_c('br'),_vm._v(\"\\n                    示例：账户信息(10)，\\\"账户信息\\\"代表信息项类型，\\\"10\\\"代表已选择银行数量。\\n                \")])])])])}]\n\nexport { render, staticRenderFns }","/**\r\n *      方法集合\r\n **********************/\r\n// 全局事件\r\nimport globalEvent from './extend/globalEvent.js';\r\n// 查询项需要的数据条目\r\nimport createCxxDataItem from '../common/createCxxDataItem.js';\r\n// 查询对象通用代码\r\nimport cxdxCommon from '../common/cxdxCommon';\r\nimport validateType from \"../common/validateType\";\r\n\r\nconst NUM_10 = 10;\r\n// 配置文件\r\nexport default {\r\n    mixins: [globalEvent, cxdxCommon],\r\n    props: {\r\n        saveFlag: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            // 【证照类型】下拉列表\r\n            zjlxList: window.fdDataTable.getCodeTypeDataList(window.fdDataTable.zzlxCodeType),\r\n            // 数据条目上有用的key\r\n            dataKeys: [\r\n                // 1.  cBH\r\n                'cBh',\r\n                // 2. 企业名称\r\n                'cMc',\r\n                // 3. 证照类型\r\n                'nZjlx',\r\n                // 4. 证照代码\r\n                'cTyshxxdm',\r\n                // 5. 查询项数组\r\n                'cCxxList'\r\n            ]\r\n        };\r\n    },\r\n    created() {\r\n        // 初始化的方法\r\n        this.init();\r\n    },\r\n    mounted() {\r\n        // 初始化的方法\r\n        this.$emit('ready', this);\r\n    },\r\n    methods: {\r\n        //复制当前行\r\n        clickCopyItem(item,index) {\r\n            if(this.dataList.length <= (index + 1)){\r\n                return;\r\n            }\r\n            let target = this.dataList[index+1]\r\n            if(target.nZjlx == item.nZjlx && item.cCxxList.length != 0){\r\n                this.dataList[index+1].cCxxList = item.cCxxList;\r\n                this.dataList[index+1].mustSetcCxxList = item.mustSetcCxxList;\r\n            }else{\r\n                this.$emit('invalid', '复制失败，本条查询的证件类型与下一条的证件类型不一致');\r\n            }\r\n            // console.log(this.dataList)\r\n            // // 获取当前添加的数量（转换成数字）\r\n            // const _dataAddCount = parseInt(this.dataAddCount, 10);\r\n            // // 获取当前三个对象的总数据条数\r\n            // const _currentTotalCount = this.$parent.dGetSpbDataListSize();\r\n            // // 【自然人】【企业/机构】【其他】这三个模块的数据加起来不能大于50（包含初始化的数据条数）\r\n            // // 获取查询对象添加的输入框里面的值，大于0的时候，并且总数据（【自然人】【企业/机构】【其他】这三个模块的数据加起来）小于50条，添加数据【 批量添加数据】的方法,\r\n            // // 否则走 【单条数据条目】\r\n            // if (_dataAddCount > 0 && _currentTotalCount < 50) {\r\n            //     // 批量添加\r\n            //     this.batchAddData(_dataAddCount);\r\n            //     // 如果 【自然人】【企业/机构】【其他】这三个模块的数据加起来大于50\r\n            //     // 添加失败\r\n            // } else if (_currentTotalCount >= 50) {\r\n            //     this.$emit('invalid', '添加失败，查询对象（自然人、机构、其他类）最多可查询50条记录');\r\n            // } else {\r\n            //     // 单条数据条目添加\r\n            //     let dataItem = this.createDataItem();\r\n            //     dataItem.cCxxList = item.cCxxList;\r\n            //     dataItem.nZjlx = item.nZjlx;\r\n            //     this.addDataItem(dataItem,true);\r\n            // }\r\n        },\r\n        // 初始化的方法\r\n        init() {\r\n            // 初始化企业/机构列表， 默认是5条\r\n            this.initDataList();\r\n        },\r\n\r\n        // 初始化企业/机构列表， 默认是5条\r\n        initDataList(len = 5) { // eslint-disable-line\r\n            // 批量添加\r\n            this.batchAddData(len);\r\n        },\r\n\r\n        // 显示查询项，model\r\n        clickShowModal(item) {\r\n            // 必须先选择 证照类型\r\n            if (item.nZjlx) {\r\n                // 1.设置当前的激活条目\r\n                this.setActiveItem(item);\r\n                // 2.触发事件\r\n                this.emitGlobalEvent(() => {\r\n                    // 创建【查询项】 需要的数据条目\r\n                    const _dataItem = createCxxDataItem(item, '02', item.nZjlx);\r\n                    // 发送全局事件\r\n                    this.globalBus.$emit('global-spb-cxx-show', _dataItem, 'global-spb-jg-updateCxxData');\r\n                });\r\n            } else {\r\n                this.$emit('invalid', '请先选择证照类型');\r\n            }\r\n        },\r\n\r\n        // 创建数据条目\r\n        createDataItem() {\r\n            return {\r\n                // 生成随机id 【数据唯一标识字段】\r\n                randomId: Math.random()\r\n                    .toFixed(NUM_10),\r\n\r\n                // 【页面数据字段】\r\n                // 1. 序号\r\n                nXh: 0,\r\n                // 2. 企业名称\r\n                cMc: '',\r\n                // 3. 证照类型\r\n                nZjlx: '',\r\n                // 4. 证照代码\r\n                cTyshxxdm: '',\r\n                // 5. 查询项数组\r\n                cCxxList: [\r\n\r\n                    /*      {\r\n                              name: '张三',\r\n                              sjyList: [\r\n                                  {name: '人民'},\r\n                                  {name: '国家'}\r\n                              ]\r\n                          }, {\r\n                              name: '李四',\r\n                              sjyList: [\r\n                                  {name: '中国'},\r\n                                  {name: '中央'}\r\n                              ]\r\n                          }*/\r\n                ],\r\n                // 查询项名称 【无用字段】 需要和后端核对\r\n                cCxxMc: '',\r\n\r\n                // 【页面状态显示字段】\r\n                // 是否显示输入框后的感叹号，表示该字段和其它行重复， 【页面状态显示字段】\r\n                showGth: false,\r\n                // 表示该字段和其它行重复 【不能重复】\r\n                dataRepeat: false,\r\n                // 2. 证照类型【必填项】\r\n                mustSetcMc: false,\r\n                // 3. 证照类型【必填项】\r\n                mustSetnZjlx: false,\r\n                // 4. 证照代码【必填项】\r\n                mustSetcTyshxxdm: false,\r\n                // 5. 查询项数组【必填项】\r\n                mustSetcCxxList: false,\r\n                // 是否显示错误提示信息\r\n                tipsError: false,\r\n                // 是否存在值【用于数据是否需要验证】\r\n                existValue: false,\r\n                // 6.  cBH, 默认为空， 后端保存后添加\r\n                cBh: '',\r\n                // 数据无效\r\n                invalid: false,\r\n            };\r\n        },\r\n\r\n        // 改变下拉框的值，证件类型变动，那么【证照代码】 和 【查询项】应该清空\r\n        changeSelect(item, name) {\r\n            // 清空【证照代码】\r\n            item.cTyshxxdm = '';\r\n            // 清空【查询项】\r\n            item.cCxxList = [];\r\n            // 去掉查询值红框\r\n            item.invalid = false;\r\n            // 检测其他数据项是否还有重复\r\n            this.checkRepeat();\r\n            // 因为将查询项和证照代码清空了，所以需要重新走一遍数据是否存在和验证的方法\r\n            // 1. 设置该数据是否存在\r\n            this.setDataItemExistValue(item);\r\n            // 2.必填项的验证\r\n            this.validateRequired(item, name);\r\n        },\r\n\r\n        // 值发生变动处理函数\r\n        inputHandler(item, name) {\r\n            // 1.去掉空格\r\n            item[name] = item[name].replace(/\\s+/g, '');\r\n            // 2. 设置该数据是否存在\r\n            this.setDataItemExistValue(item);\r\n            // 3. 必填项校验\r\n            this.validateRequired(item, name);\r\n            // 4. 如果是【证照代码】，需要进行以下验证\r\n            if (name === 'cTyshxxdm') {\r\n                // 4.1. 字母转换成大写\r\n                item.cTyshxxdm = item.cTyshxxdm.toUpperCase();\r\n                // 4.2 及时检验重复项\r\n                this.checkRepeat();\r\n            }\r\n        },\r\n        // 校验其他项查询值的正确\r\n        checkbackCardId(item) {\r\n            // 其他校验=> 无效性验证\r\n            this.validateValidator(item);\r\n        },\r\n\r\n        // 其他校验=> 无效性验证\r\n        validateValidator(item) {\r\n            // 默认有效\r\n            item.invalid = false;\r\n            // 如果【证件号码】存在值\r\n            console.log('企业/机构：', item);\r\n            if (['01', '02', '03'].indexOf(item.nZjlx) !== -1) {\r\n                let _validateObject = {};\r\n                // 验证对象\r\n                _validateObject = validateType.isNotHz(item.cTyshxxdm);\r\n                // 设置无效 => 身份证校验\r\n                item.invalid = !_validateObject.validate;\r\n                // 如果无效\r\n                if (item.invalid) {\r\n                    // 触发提示\r\n                    this.$emit('invalid', _validateObject.message);\r\n                }\r\n            }\r\n            // 返回是否有效\r\n            return item.invalid;\r\n        },\r\n        // 检查重复值\r\n        checkRepeat() {\r\n            // 证照代码对象\r\n            const _cTyshxxdmObject = {};\r\n            // 重复名验证\r\n            this.dataList.forEach((item, index) => {\r\n                // 如果存在证照代码\r\n                if (item.cTyshxxdm) {\r\n                    // 如果不存在，就给_cTyshxxdmObject[item.cTyshxxdm]赋值为空数组\r\n                    // 否则就直接push\r\n                    if (!_cTyshxxdmObject[item.cTyshxxdm]) {\r\n                        _cTyshxxdmObject[item.cTyshxxdm] = [];\r\n                    }\r\n                    // 添加到数组\r\n                    _cTyshxxdmObject[item.cTyshxxdm].push(index);\r\n                } else {\r\n                    item.dataRepeat = false;\r\n                }\r\n            });\r\n            // 循环证照代码对象的values\r\n            Object.values(_cTyshxxdmObject)\r\n                .forEach((dataIndexList) => {\r\n                    // 如果值的length大于1，说明存在重复数据\r\n                    if (dataIndexList.length > 1) {\r\n                        // 循环重复数据索引值列表\r\n                        dataIndexList.forEach((itemIndex) => {\r\n                            // 表示该字段和其它行重复 , 设置值true【不能重复】\r\n                            this.dataList[itemIndex].dataRepeat = true;\r\n                        });\r\n                    } else {\r\n                        // 表示该字段不重复，恢复默认值 false\r\n                        this.dataList[dataIndexList[0]].dataRepeat = false;\r\n                    }\r\n                });\r\n        },\r\n\r\n        // 验证方法\r\n        validate() {\r\n            return new Promise((resolve, reject) => {\r\n                // 是否通过验证\r\n                let _validateFlag = true;\r\n                // 1.重复值校验\r\n                this.checkRepeat();\r\n                // 循环企业/机构列表， 判断里内部的值是否存在\r\n                this.dataList.forEach((item) => {\r\n                    // 判断该条数据是否有一个值存在，如果有一个值存在，就需要进行其他项的验证\r\n                    const _existValue = this.dataKeys.some((key) => Array.isArray(item[key]) ? item[key].length > 0 : item[key]);\r\n                    // 如果存在\r\n                    if (_existValue) {\r\n                        // 循环每个对象条目，获取对象里面的值，赋值给新目标对象\r\n                        this.dataKeys.forEach((key) => {\r\n                            const _flag = this.validateRequired(item, key);\r\n                            // 如果是通过的\r\n                            if (_validateFlag) {\r\n                                _validateFlag = _flag;\r\n                            }\r\n                        });\r\n                        // 其他校验，=> 返回无效性验证， 如果是无效值，那么必定未通过验证\r\n                        if (_validateFlag && this.validateValidator(item)) {\r\n                            // 未通过验证\r\n                            _validateFlag = false;\r\n                        }\r\n                        // 如果存在重复数据，也不允许提交审批 【未通过验证】\r\n                        if (_validateFlag && item.dataRepeat) {\r\n                            // 未通过验证\r\n                            // 最新需求， 重复可以通过验证 20200126 wanghuifeng\r\n                            // _validateFlag = false;\r\n                            // 有重复值\r\n                            this.$emit('repeat', true);\r\n                        }\r\n                    }\r\n                });\r\n                // 根据验证的标识，决定调用resolve 还是 reject\r\n                _validateFlag ? resolve(this.getQueryData()) : reject(_validateFlag);\r\n            });\r\n        }\r\n    }\r\n};\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020/12/24 - 10:57\r\n *@updateTime 2020/12/28 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description 全局事件模块\r\n */\r\nexport default {\r\n    created() {\r\n        // 绑定全局事件\r\n        this.bindGlobalEvent();\r\n    },\r\n    beforeDestroy() {\r\n        // 取消全局事件\r\n        this.unbindGlobalEvent();\r\n    },\r\n    methods: {\r\n        // 绑定全局事件\r\n        bindGlobalEvent() {\r\n            // 绑定设置 更新查询项数据\r\n            this.globalBus.$on('global-spb-jg-updateCxxData', this.updateCxxData);\r\n            // 绑定设置当前的默认数据\r\n            this.globalBus.$on('global-spb-jg-setQueryData', this.setQueryData);\r\n        },\r\n        // 取消全局事件\r\n        unbindGlobalEvent() {\r\n            // 取消绑定设置 更新查询项数据\r\n            this.globalBus.$off('global-spb-jg-updateCxxData', this.updateCxxData);\r\n            // 取消绑定设置当前的默认数据\r\n            this.globalBus.$off('global-spb-jg-setQueryData', this.setQueryData);\r\n        },\r\n        // 触发全局事件\r\n        emitGlobalEvent(callback) {\r\n            if (this.globalBus) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n};\r\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=1f4f2467&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fd-ac-spb-jg\"},[_c('table',{staticClass:\"fd-cc-table-02\"},[_vm._m(0),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('tbody',_vm._l((_vm.dataList),function(item,index){return _c('tr',{key:item.randomId,staticClass:\"fd-data-row\"},[_c('td',[_c('div',{staticClass:\"fd-xh\"},[_vm._v(_vm._s(index + 1))]),_vm._v(\" \"),_c('i',{staticClass:\"fd-delete-hcdx\",on:{\"click\":function($event){return _vm.clickDeleteItem(index)}}})]),_vm._v(\" \"),_c('td',{staticClass:\"fd-must-set\",class:{required:item.mustSetcMc}},[_c('div',{staticClass:\"fd-input-contain\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(item.cMc),expression:\"item.cMc\"}],staticClass:\"fd-cc-input-text\",attrs:{\"type\":\"text\",\"title\":item.cMc,\"maxlength\":\"100\"},domProps:{\"value\":(item.cMc)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(item, \"cMc\", $event.target.value)},function($event){return _vm.inputHandler(item, 'cMc')}]}})])]),_vm._v(\" \"),_c('td',{staticClass:\"fd-must-set\",class:{required:item.mustSetnZjlx}},[_c('div',{staticClass:\"fd-input-contain\"},[_c('aty-select',{ref:\"jsAtySelectNZjlx\",refInFor:true,attrs:{\"filterable\":\"\",\"data\":_vm.zjlxList,\"clearable\":\"\"},on:{\"select-selected\":function($event){return _vm.selectSelected(index, 'jsAtySelectNZjlx')},\"change\":function($event){return _vm.changeSelect(item, 'nZjlx')}},model:{value:(item.nZjlx),callback:function ($$v) {_vm.$set(item, \"nZjlx\", $$v)},expression:\"item.nZjlx\"}})],1)]),_vm._v(\" \"),_c('td',{staticClass:\"fd-must-set\",class:{\n                required:item.mustSetcTyshxxdm,\n                repeat:item.dataRepeat,\n                invalid:item.invalid,\n                'show-gth':item.showGth}},[_c('div',{staticClass:\"fd-input-contain\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(item.cTyshxxdm),expression:\"item.cTyshxxdm\"}],staticClass:\"fd-cc-input-text\",attrs:{\"type\":\"text\",\"title\":item.cTyshxxdm,\"maxlength\":\"18\"},domProps:{\"value\":(item.cTyshxxdm)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(item, \"cTyshxxdm\", $event.target.value)},function($event){return _vm.inputHandler(item, 'cTyshxxdm')}],\"blur\":function($event){$event.preventDefault();return _vm.checkbackCardId(item)}}}),_vm._v(\" \"),_c('span',{staticClass:\"fd-icon-exist-gth\"},[_vm._v(\"!\")])]),_vm._v(\" \"),_c('div',{staticClass:\"fd-exist-tips\"},[_vm._v(\"该证照代码重复！\")]),_vm._v(\" \"),(item.tipsError)?_c('div',{staticClass:\"fd-error-tips\",domProps:{\"textContent\":_vm._s(_vm.showErrorText)}},[_vm._v(\"\\n                    请填写正确的组织机构代码\\n                \")]):_vm._e()]),_vm._v(\" \"),_c('td',{staticClass:\"fd-must-set cxx\",class:{required:item.mustSetcCxxList}},[_c('div',{staticClass:\"fd-input-contain\",on:{\"click\":function($event){$event.stopPropagation();return _vm.clickShowModal(item)}}},[_c('div',{staticClass:\"fd-input-contain-con\"},[_c('ul',{staticClass:\"fd-cxx-tag-list\"},_vm._l((item.cCxxList),function(itemC,indexC){return _c('li',{directives:[{name:\"tips\",rawName:\"v-tips.cxx\",value:(_vm.getTipsContent(itemC)),expression:\"getTipsContent(itemC)\",modifiers:{\"cxx\":true}}],key:itemC.name + indexC  + itemC.sjyList.length,staticClass:\"fd-tag-item\"},[_c('span',{domProps:{\"textContent\":_vm._s(itemC.name)}}),_vm._v(\" \"),(itemC.sjyList.length > 0)?_c('span',[_vm._v(\" (\"+_vm._s(itemC.sjyList.length)+\")\")]):_vm._e()])}),0),_vm._v(\" \"),_c('i',{staticClass:\"aty-icon aty-icon-arrow-down-b aty-select-arrow\"})])]),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.cCxxList.length),expression:\"item.cCxxList.length\"}],staticClass:\"fd-clear-icon\",on:{\"click\":function($event){$event.stopPropagation();return _vm.clickClearCxx(item,index)}}})]),_vm._v(\" \"),_c('a',{staticClass:\"copyIcon\",on:{\"click\":function($event){return _vm.clickCopyItem(item,index)}}})])}),0),_vm._v(\" \"),_c('tfoot',[_c('tr',[_c('td',{staticClass:\"fd-footer-cell\",attrs:{\"colspan\":\"5\"}},[_c('div',{staticClass:\"fd-operate-contain\"},[_c('button',{staticClass:\"fd-btn-add\",on:{\"click\":function($event){return _vm.clickAdd()}}},[_vm._v(\"添加\")]),_vm._v(\" \"),_c('div',{staticClass:\"fd-input-add\"},[_c('aty-input',{on:{\"input\":_vm.inputDataAddCountHandler},model:{value:(_vm.dataAddCount),callback:function ($$v) {_vm.dataAddCount=$$v},expression:\"dataAddCount\"}}),_vm._v(\" \"),_c('label',{staticClass:\"fd-label-text\"},[_vm._v(\"个\")])],1),_vm._v(\" \"),_c('span',{staticClass:\"fd-tips\"},[_vm._v(\"填写数字后点击添加按钮，可以添加对应个数的被查询对象\")])])])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('colgroup',[_c('col',{staticClass:\"fd-col1\"}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col7\"}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col3\"}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col7\"}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col10\"}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col-auto\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',{staticClass:\"fd-tr-placeholder\"},[_c('th'),_vm._v(\" \"),_c('th'),_vm._v(\" \"),_c('th'),_vm._v(\" \"),_c('th'),_vm._v(\" \"),_c('th')]),_vm._v(\" \"),_c('tr',[_c('th',{staticClass:\"fd-table-caption\",attrs:{\"colspan\":\"5\"}},[_vm._v(\"企业/机构\")])]),_vm._v(\" \"),_c('tr',{staticClass:\"fd-head-tr\"},[_c('th',[_vm._v(\"序号\")]),_vm._v(\" \"),_c('th',[_c('em',{staticClass:\"fd-red\"},[_vm._v(\"*\")]),_vm._v(\"企业名称\")]),_vm._v(\" \"),_c('th',{staticClass:\"fd-zzlx-td\"},[_c('em',{staticClass:\"fd-red\"},[_vm._v(\"*\")]),_vm._v(\"证照类型\")]),_vm._v(\" \"),_c('th',{staticClass:\"fd-zzdm-td\"},[_c('em',{staticClass:\"fd-red\"},[_vm._v(\"*\")]),_vm._v(\"证照代码\")]),_vm._v(\" \"),_c('th',{staticClass:\"fd-cxx-cell\"},[_c('em',{staticClass:\"fd-red\"},[_vm._v(\"*\")]),_vm._v(\"查询项\"),_c('span',{staticClass:\"fd-tip-img\"}),_vm._v(\" \"),_c('div',{staticClass:\"fd-cxx-tip\"},[_c('span',{staticClass:\"fd-close-tip\"}),_vm._v(\"\\n                    当前查询项选择完成后，会将已选的信息项类型和已经选择的协查单位数量展示出来;\\n                    \"),_c('br'),_vm._v(\"\\n                    示例：账户信息(10)，\\\"账户信息\\\"代表信息项类型，\\\"10\\\"代表已选择银行数量。\\n                \")])])])])}]\n\nexport { render, staticRenderFns }","/**\r\n *@version 1.0.1\r\n *@author wanghuifeng\r\n *@createTime 2020/12/28 - 20:48\r\n *@updateTime 2020/12/28 - 20:48\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description 审批表=> 自然人主入口\r\n */\r\n/**\r\n *      方法集合\r\n **********************/\r\n// 全局事件\r\nimport globalEvent from './extend/globalEvent.js';\r\n// 手机号、车牌号、签购单校验\r\nimport validateType from '../common/validateType.js';\r\n// 查询项需要的数据条目\r\nimport createCxxDataItem from '../common/createCxxDataItem';\r\n// 查询对象通用代码\r\nimport cxdxCommon from '../common/cxdxCommon';\r\n\r\nconst NUM_10 = 10;\r\n// 导出模块\r\nexport default {\r\n    mixins: [globalEvent, cxdxCommon],\r\n    props: {\r\n        user: {\r\n            type: String,\r\n            default: '张三'\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            // 查询类型下拉列表\r\n            cxlxList: window.fdDataTable.getCodeTypeDataList(window.fdDataTable.cxlxCodeType),\r\n             // 【职级】下拉列表\r\n             zjList: window.fdDataTable.getCodeTypePinyinDataList(window.fdDataTable.zJCodeType),\r\n             // 【干部管理权限】下拉列表\r\n             gbglqxList: window.fdDataTable.getCodeTypePinyinDataList(window.fdDataTable.gbglqxCodeType),\r\n            // 数据条目上有用的key\r\n            dataKeys: [\r\n                // 1.  cBH\r\n                'cBh',\r\n                // 2. 查询类型\r\n                'cxlx',\r\n                // 3. 查询值\r\n                'cValue',\r\n                // 4.  查询项数组\r\n                'cCxxList',\r\n                //5.查询对象所属类别\r\n                'hmsslb',\r\n                //6.查询对象名称\r\n                'cName',\r\n                //7.职级\r\n                'nZj',\r\n                //8.干部管理权限\r\n                'cGbglqx'\r\n            ],\r\n            // 【查询类型】不同展示的【查询项】不同\r\n            categoryCxlx: '',\r\n            bankcardList: [],\r\n            bankCodes: [],\r\n            dxssLx:[{'code':1,\r\n                      'name': '自然人'\r\n                    },{'code':2,\r\n                    'name': '机构'\r\n                    },{'code':999,\r\n                    'name': '不掌握'\r\n                    }\r\n                ],\r\n\r\n\r\n        };\r\n    },\r\n    created() {\r\n        // 初始化的方法\r\n        this.init();\r\n        this.requestBankCodes();\r\n    },\r\n    mounted() {\r\n        // 初始化的方法\r\n        this.$emit('ready', this);\r\n    },\r\n    methods: {\r\n        //复制当前行\r\n        clickCopyItem(item,index) {\r\n            if(this.dataList.length <= (index + 1)){\r\n                return;\r\n            }\r\n            let target = this.dataList[index+1]\r\n            if(target.cxlx == item.cxlx && item.cCxxList.length != 0){\r\n                this.dataList[index+1].cCxxList = item.cCxxList;\r\n                this.dataList[index+1].mustSetcCxxList = item.mustSetcCxxList;\r\n            }else{\r\n                this.$emit('invalid', '复制失败，本条查询类型与下一条的查询类型不一致');\r\n            }\r\n            // // 获取当前添加的数量（转换成数字）\r\n            // const _dataAddCount = parseInt(this.dataAddCount, 10);\r\n            // // 获取当前三个对象的总数据条数\r\n            // const _currentTotalCount = this.$parent.dGetSpbDataListSize();\r\n            // // 【自然人】【企业/机构】【其他】这三个模块的数据加起来不能大于50（包含初始化的数据条数）\r\n            // // 获取查询对象添加的输入框里面的值，大于0的时候，并且总数据（【自然人】【企业/机构】【其他】这三个模块的数据加起来）小于50条，添加数据【 批量添加数据】的方法,\r\n            // // 否则走 【单条数据条目】\r\n            // if (_dataAddCount > 0 && _currentTotalCount < 50) {\r\n            //     // 批量添加\r\n            //     this.batchAddData(_dataAddCount);\r\n            //     // 如果 【自然人】【企业/机构】【其他】这三个模块的数据加起来大于50\r\n            //     // 添加失败\r\n            // } else if (_currentTotalCount >= 50) {\r\n            //     this.$emit('invalid', '添加失败，查询对象（自然人、机构、其他类）最多可查询50条记录');\r\n            // } else {\r\n            //     // 单条数据条目添加\r\n            //     let dataItem = this.createDataItem();\r\n            //     dataItem.cCxxList = item.cCxxList;\r\n            //     dataItem.cxlx = item.cxlx;\r\n            //     dataItem.cGbglqx = item.cGbglqx;\r\n            //     dataItem.nZj = item.nZj;\r\n            //     dataItem.hmsslb = item.hmsslb;\r\n            //     this.addDataItem(dataItem, true);\r\n            // }\r\n        },\r\n\r\n        // 初始化的方法\r\n        init() {\r\n            // 初始化【其他】列表， 默认是5条\r\n            this.initDataList();\r\n        },\r\n\r\n        // 初始化【其他】列表， 默认是5条\r\n        initDataList(len = 2) { // eslint-disable-line\r\n            // 批量添加\r\n            this.batchAddData(len);\r\n        },\r\n\r\n        // 处理 placeholder\r\n        setCurrentPlaceholder(item) {\r\n            let placeholder = '';\r\n            // 根据查询类型变化而变化\r\n            switch (item.cxlx) {\r\n                case '03':\r\n                    placeholder = '请输入车牌号（查询类型为车牌号的暂时不支持）';\r\n                    break;\r\n                case '04':\r\n                    placeholder = '请输入银行账/卡号';\r\n                    break;\r\n                case '05':\r\n                    placeholder = '请输入手机号';\r\n                    break;\r\n                case '06':\r\n                    placeholder = '请输入信托产品编码';\r\n                    break;\r\n                case '07':\r\n                    placeholder = '请输入理财产品编码';\r\n                    break;\r\n                case '08':\r\n                    placeholder = '请输入保险保单号';\r\n                    break;\r\n                case '09':\r\n                    placeholder = '请输入商户代码';\r\n                    break;\r\n                case '10':\r\n                    placeholder = '请输入商户订单号';\r\n                    break;\r\n                case '11':\r\n                    placeholder = '银行卡前6位-银行卡后4位-日期（例如 20200909）- 金额';\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            item.placeholder = placeholder;\r\n            if(item.cxlx == '07' || item.cxlx == '09'){\r\n                item.isDisabled = true;\r\n                item.mustSetcName = false\r\n                item.mustSetnZj = false\r\n                item.mustSetcGbglqx = false\r\n                item.isNotHmsslb = true\r\n                item.isNotZrr = true\r\n                item.mustSethmsslb = false\r\n                item.hmsslb = ''\r\n            }else{\r\n                item.isDisabled = false;\r\n                item.isNotHmsslb = false\r\n            }\r\n        },\r\n\r\n        // 显示查询项，model\r\n        clickShowModal(item) {\r\n            // 必须先选择 查询类型\r\n            if (item.cxlx) {\r\n                // 1.设置当前的激活条目\r\n                this.setActiveItem(item);\r\n                // 2.触发事件\r\n                this.emitGlobalEvent(() => {\r\n                    // 创建【查询项】 需要的数据条目\r\n                    const _dataItem = createCxxDataItem(item, this.categoryCxlx, item.cxlx);\r\n                    // 发送全局事件\r\n                    this.globalBus.$emit('global-spb-cxx-show', _dataItem, 'global-spb-qt-updateCxxData');\r\n                });\r\n            } else {\r\n                this.$emit('invalid', '请先选择查询类型!');\r\n            }\r\n        },\r\n\r\n        // 创建数据条目\r\n        createDataItem() {\r\n            return {\r\n                // 生成随机id 【数据唯一标识字段】\r\n                randomId: Math.random()\r\n                    .toFixed(NUM_10),\r\n                // 【页面数据字段】\r\n                // 1. 序号\r\n                nXh: 0,\r\n                // 2. 查询类型\r\n                cxlx: '',\r\n                // 3. 查询值\r\n                cValue: '',\r\n                // 4. 查询项数组\r\n                cCxxList: [],\r\n\r\n                hmsslb: '',\r\n\r\n                cName:'',\r\n\r\n                nZj: '',\r\n\r\n                cGbglqx: '',\r\n                // 输入框的提示值\r\n                placeholder: '',\r\n                // 【页面状态显示字段】\r\n                // 2. 查询类型 【必填项】\r\n                mustSetnCxlx: false,\r\n                mustSetcxlx: false,\r\n                mustSethmsslb: false,\r\n                // 3. 查询值 【必填项】\r\n                mustSetcValue: false,\r\n                // 4. 查询项数组【必填项】\r\n                mustSetcCxxList: false,\r\n                // 表示该字段和其它行重复 【不能重复】\r\n                dataRepeat: false,\r\n                // 是否显示输入框后的感叹号，表示该字段和其它行重复， 【页面状态显示字段】\r\n                showGth: false,\r\n                // 数据无效\r\n                invalid: false,\r\n                // 是否存在值【用于数据是否需要验证】\r\n                existValue: false,\r\n                // 5.  cBH, 默认为空， 后端保存后添加\r\n                cBh: '',\r\n                bankcardshow: '',\r\n                mustSetcName: false,\r\n                mustSetnZj: false,\r\n                mustSetcGbglqx: false,\r\n                isDisabled: false,\r\n                isNotZrr: false,\r\n                isNotHmsslb: false\r\n            };\r\n        },\r\n\r\n        //  改变下拉框的值，查询类型变动，那么【查询值】 和 【查询项】应该清空\r\n        changeSelect(item, name) {\r\n            // 【查询类型】不同展示的【查询项】不同\r\n            this.categoryCxlx = item.cxlx;\r\n            // 1. 如果是 【查询类型】，清空【查询值】和 清空【查询项】\r\n            item.cValue = '';\r\n            item.cCxxList = [];\r\n            // 去掉查询值红框\r\n            item.invalid = false;\r\n            // if(!item.hmsslb){\r\n            //     item.mustSethmsslb = true;\r\n            // }\r\n            // 检测其他数据项是否还有重复\r\n            this.checkRepeat();\r\n            // 2. 处理 placeholder\r\n            this.setCurrentPlaceholder(item);\r\n            // 3. 设置该数据是否存在\r\n            this.setDataItemExistValue(item);\r\n            // 4.必填项的验证\r\n            this.validateRequired(item, name);\r\n        },\r\n\r\n         //  改变下拉框的值，查询类型变动，那么【查询值】 和 【查询项】应该清空\r\n         changeSelect1(item, name) {\r\n            // 去掉查询值红框\r\n            item.invalid = false;\r\n            // 3. 设置该数据是否存在\r\n            this.setDataItemExistValue(item);\r\n            // 4.必填项的验证\r\n            this.validateRequired(item, name);\r\n        },\r\n\r\n         //  改变下拉框的值，查询类型变动，那么【查询值】 和 【查询项】应该清空\r\n         changeSelect2(item, name) {\r\n             if(item.hmsslb){\r\n                item.mustSethmsslb = false;\r\n             }\r\n             if(item.hmsslb==999){\r\n                 item.isDisabled = true\r\n                 item.cName = ''\r\n                 item.nZj = ''\r\n                 item.cGbglqx = ''\r\n                 item.isNotZrr = true\r\n                 item.mustSetcName = false\r\n                 item.mustSetnZj = false\r\n                 item.mustSetcGbglqx = false\r\n             }else if(item.hmsslb==1){\r\n                item.isDisabled = false\r\n                item.isNotZrr = false\r\n                // if(!item.cName){\r\n                //     item.mustSetcName = true\r\n                // }\r\n                // item.mustSetnZj = true\r\n                // item.mustSetcGbglqx = true\r\n             }else if(item.hmsslb==2){\r\n                item.isDisabled = false\r\n                item.nZj = ''\r\n                item.cGbglqx = ''\r\n                item.isNotZrr = true\r\n                // if(!item.cName){\r\n                //     item.mustSetcName = true\r\n                // }\r\n                item.mustSetnZj = false\r\n                item.mustSetcGbglqx = false\r\n             }\r\n            // 去掉查询值红框\r\n            item.invalid = false;\r\n            // 3. 设置该数据是否存在\r\n            this.setDataItemExistValue(item);\r\n            // 4.必填项的验证\r\n            this.validateRequired(item, name);\r\n        },\r\n\r\n        // 获取提示名称\r\n        getItemTipsName(event, target) {\r\n            if (target && target.querySelector('.aty-select-input')) {\r\n                return target.querySelector('.aty-select-input').value;\r\n            }\r\n            return '';\r\n        },\r\n\r\n        // 值发生变动处理函数\r\n        inputHandler(item, name) {\r\n            // 1.去掉空格\r\n            item[name] = item[name].replace(/\\s+/g, '');\r\n            // 2. 设置该数据是否存在\r\n            this.setDataItemExistValue(item);\r\n            // 3. 必填项校验\r\n            this.validateRequired(item, name);\r\n            // 4. 及时检验重复项\r\n            this.checkRepeat();\r\n            if (item.cxlx == '04') {\r\n                this.bankCardTips(item);\r\n            }\r\n        },\r\n        // 提示银行卡号归属\r\n        bankCardTips(item) {\r\n            if (item.cValue.split(\"\").length >= 3) {\r\n                this.bankcardList = this.bankCodes.filter(codeItem =>{\r\n                    if(item.cValue.split(\"\").length <= 6){\r\n                        return codeItem.tCode.startsWith(item.cValue) && item.cValue.length < 20;\r\n                    }else{\r\n                        return item.cValue.startsWith(codeItem.tCode)  && item.cValue.length < 20;\r\n                    }\r\n                }).map(mapItem =>{\r\n                    return mapItem.tName;\r\n                });\r\n                if(this.bankcardList.length > 0){\r\n                    this.bankcardList = this.bankcardList.filter((i,n)=>this.bankcardList.indexOf(i)==n);\r\n                    item.bankcardshow = true\r\n                }else{\r\n                    item.bankcardshow = false\r\n                }\r\n\r\n            } else {\r\n                item.bankcardshow = false\r\n                return\r\n            }\r\n        },\r\n        // 检查重复值\r\n        checkRepeat() {\r\n            // 查询值对象\r\n            const _cValueObject = {};\r\n            // 重复名验证\r\n            this.dataList.forEach((item, index) => {\r\n                // 如果存在查询值\r\n                if (item.cValue) {\r\n                    if (!_cValueObject[item.cValue]) {\r\n                        _cValueObject[item.cValue] = [];\r\n                    }\r\n                    // 添加到数组\r\n                    _cValueObject[item.cValue].push(index);\r\n                } else {\r\n                    item.dataRepeat = false;\r\n                }\r\n            });\r\n            // 循环证件号码对象的values\r\n            Object.values(_cValueObject)\r\n                .forEach((dataIndexList) => {\r\n                    // 如果值的length大于1，说明存在重复数据\r\n                    if (dataIndexList.length > 1) {\r\n                        // 循环重复数据索引值列表\r\n                        dataIndexList.forEach((itemIndex) => {\r\n                            // 表示该字段和其它行重复 , 设置值true【不能重复】\r\n                            this.dataList[itemIndex].dataRepeat = true;\r\n                        });\r\n                    } else {\r\n                        // 表示该字段不重复，恢复默认值 false\r\n                        this.dataList[dataIndexList[0]].dataRepeat = false;\r\n                    }\r\n                });\r\n        },\r\n        // 校验其他项查询值的正确\r\n        checkbackCardId(item) {\r\n            item.bankcardshow = false\r\n            // 其他校验=> 无效性验证\r\n            this.validateValidator(item);\r\n        },\r\n        // 其他校验=> 无效性验证\r\n        validateValidator(item) {\r\n            // 默认有效\r\n            item.invalid = false;\r\n            // 如果【查询类型】存在值\r\n            if (['12', '11', '05', '06', '07', '08', '09', '10', '04'].indexOf(item.cxlx) !== -1) {\r\n                let _validateObject = {};\r\n                // 快递单号\r\n                if (item.cxlx === '12') {\r\n                    // 验证对象\r\n                    _validateObject = validateType.kddhCheck(item.cValue);\r\n                }\r\n                // 签购单\r\n                if (item.cxlx === '11') {\r\n                    // 验证对象\r\n                    _validateObject = validateType.qgdCheck(item.cValue);\r\n                }\r\n                // 手机号\r\n                if (item.cxlx === '05') {\r\n                    // 验证对象\r\n                    _validateObject = validateType.checkMobilePhone(item.cValue);\r\n                }\r\n                // 【信托产品编码】、【理财产品编码】【保险保单号】【商户代码】】【商户订单号】【银行卡号】不能输入汉字\r\n                if (item.cxlx === '06' || item.cxlx === '07' || item.cxlx === '08' ||\r\n                    item.cxlx === '09' || item.cxlx === '10' || item.cxlx === '04') {\r\n                    // 验证对象\r\n                    _validateObject = validateType.isNotHz(item.cValue);\r\n                }\r\n                // 设置无效 => 身份证校验\r\n                item.invalid = !_validateObject.validate;\r\n                // 如果无效\r\n                if (item.invalid) {\r\n                    // 触发提示\r\n                    this.$emit('invalid', _validateObject.message);\r\n                }\r\n            }\r\n            // 返回是否有效\r\n            return item.invalid;\r\n        },\r\n\r\n        // 验证方法\r\n        validate() {\r\n            return new Promise((resolve, reject) => {\r\n                // 是否通过验证\r\n                let _validateFlag = true;\r\n                // 1.重复值校验\r\n                this.checkRepeat();\r\n                // 循环【其他】列表， 判断里内部的值是否存在\r\n                this.dataList.forEach((item) => {\r\n                    // 判断该条数据是否有一个值存在，如果有一个值存在，就需要进行其他项的验证\r\n                    // 如果存在\r\n                    if (this.isExistValue(item)) {\r\n                        // 循环每个对象条目，获取对象里面的值，赋值给新目标对象\r\n                        this.dataKeys.forEach((key) => {\r\n                            if(key == 'nZj' || key =='cGbglqx'){\r\n                                if(!item.isNotHmsslb && item.hmsslb == 1){\r\n                                    const _flag = this.validateRequired(item, key);\r\n                                    // 如果是通过的\r\n                                    if (_validateFlag) {\r\n                                        _validateFlag = _flag;\r\n                                    }\r\n                                }\r\n                            }else if(key == 'cName'){\r\n                                if(!item.isNotHmsslb && item.hmsslb != 999 && item.hmsslb != ''){\r\n                                    const _flag = this.validateRequired(item, key);\r\n                                    // 如果是通过的\r\n                                    if (_validateFlag) {\r\n                                        _validateFlag = _flag;\r\n                                    }\r\n                                }\r\n                            }else if(key == 'hmsslb'){\r\n                                if(!item.isNotHmsslb){\r\n                                    const _flag = this.validateRequired(item, key);\r\n                                    // 如果是通过的\r\n                                    if (_validateFlag) {\r\n                                        _validateFlag = _flag;\r\n                                    }\r\n                                }\r\n                            }else{\r\n                                const _flag = this.validateRequired(item, key);\r\n                                // 如果是通过的\r\n                                if (_validateFlag) {\r\n                                    _validateFlag = _flag;\r\n                                }\r\n                            }\r\n                        });\r\n                        // 其他校验，=> 返回无效性验证， 如果是无效值，那么必定未通过验证\r\n                        if (_validateFlag && this.validateValidator(item)) {\r\n                            // 未通过验证\r\n                            _validateFlag = false;\r\n                        }\r\n                        // 如果存在重复数据，也不允许提交审批 【未通过验证】\r\n                        if (_validateFlag && item.dataRepeat) {\r\n                            // 未通过验证\r\n                            // 最新需求， 重复可以通过验证 20200126 wanghuifeng\r\n                            // _validateFlag = false;\r\n                            // 有重复值\r\n                            this.$emit('repeat', true);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // 根据验证的标识，决定调用resolve 还是 reject\r\n                _validateFlag ? resolve(this.getQueryData()) : reject(_validateFlag);\r\n            });\r\n        },\r\n        requestBankCodes() {\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal.performance.getCurrentTime();\r\n            return new Promise((resolve, reject) => {\r\n                const _showLog = this.showLog;\r\n                const _name = '【审批表】=>【银行发卡行信息】';\r\n                const _method = window.fdConfig.methodGet;\r\n                const _url = `${window.fdConfig.url.bankCode.getBankCode}`;\r\n                const _data = {};\r\n                // 输出日志\r\n                window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n                //  返回shuju\r\n                window.fdGlobal.ajax({\r\n                    method: _method,\r\n                    url: _url,\r\n                    // URL参数\r\n                    // 必须是一个纯对象或者 URL参数对象\r\n                    params: _data,\r\n                    // 默认值是json\r\n                    responseType: 'json'\r\n                })\r\n                    .then((data) => {\r\n                        this.bankCodes = data.data.data;\r\n                        const _serverData = data.data;\r\n                        // const _serverData = data.data;\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        resolve(_serverData);\r\n                    }, (data) => {\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                        const _serverData = data.data;\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        reject(data);\r\n                    });\r\n            });\r\n        },\r\n        adjustEllipsis(item) {\r\n            // 获取名称\r\n            const _name = window.fdDataTable.getCodeToName(window.fdDataTable.zJCodeType, item.nZj);\r\n            // eslint-disable-next-line no-magic-numbers\r\n            return this.getStrLength(_name) > 16;\r\n        },\r\n        getStrLength(str) {\r\n            // \"g\" 表示全局匹配\r\n            return str.replace(/[\\u0391-\\uFFE5]/g, 'aa').length;\r\n        },\r\n    }\r\n};\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020/12/24 - 10:57\r\n *@updateTime 2020/12/28 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description 全局事件模块\r\n */\r\nexport default {\r\n    created() {\r\n        // 绑定全局事件\r\n        this.bindGlobalEvent();\r\n    },\r\n    beforeDestroy() {\r\n        // 取消全局事件\r\n        this.unbindGlobalEvent();\r\n    },\r\n    methods: {\r\n        // 绑定全局事件\r\n        bindGlobalEvent() {\r\n            // 绑定设置 更新查询项数据\r\n            this.globalBus.$on('global-spb-qt-updateCxxData', this.updateCxxData);\r\n            // 绑定设置当前的默认数据\r\n            this.globalBus.$on('global-spb-qt-setQueryData', this.setQueryData);\r\n        },\r\n        // 取消全局事件\r\n        unbindGlobalEvent() {\r\n            // 取消绑定设置 更新查询项数据\r\n            this.globalBus.$off('global-spb-qt-updateCxxData', this.updateCxxData);\r\n            // 取消绑定设置当前的默认数据\r\n            this.globalBus.$off('global-spb-qt-setQueryData', this.setQueryData);\r\n        },\r\n        // 触发全局事件\r\n        emitGlobalEvent(callback) {\r\n            if (this.globalBus) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n};\r\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=af08f5b6&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fd-ac-spb-other\"},[_c('table',{staticClass:\"fd-cc-table-02\"},[_vm._m(0),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('tbody',_vm._l((_vm.dataList),function(item,index){return _c('tr',{key:item.randomId,staticClass:\"fd-data-row\"},[_c('td',[_c('div',{staticClass:\"fd-xh\"},[_vm._v(_vm._s(index + 1))]),_vm._v(\" \"),_c('i',{staticClass:\"fd-delete-hcdx\",on:{\"click\":function($event){return _vm.clickDeleteItem(index)}}})]),_vm._v(\" \"),_c('td',{staticClass:\"fd-must-set\",class:{\n                    required:item.mustSetcxlx,\n                }},[_c('div',{staticClass:\"fd-input-contain\"},[_c('aty-select',{ref:\"jsAtySelectCxlx\",refInFor:true,attrs:{\"filterable\":\"\",\"data\":_vm.cxlxList,\"clearable\":\"\"},on:{\"select-selected\":function($event){return _vm.selectSelected(index, 'jsAtySelectCxlx')},\"change\":function($event){return _vm.changeSelect(item, 'cxlx')}},model:{value:(item.cxlx),callback:function ($$v) {_vm.$set(item, \"cxlx\", $$v)},expression:\"item.cxlx\"}})],1)]),_vm._v(\" \"),_c('td',{staticClass:\"fd-must-set\",class:{\n                    required:item.mustSetcValue,\n                    repeat:item.dataRepeat,\n                    invalid:item.invalid,\n                    'show-gth':item.showGth,\n                    tips:item.bankcardshow }},[_c('div',{staticClass:\"fd-input-contain\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(item.cValue),expression:\"item.cValue\"}],staticClass:\"fd-cc-input-text\",attrs:{\"type\":\"text\",\"placeholder\":item.placeholder,\"maxlength\":\"40\"},domProps:{\"value\":(item.cValue)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(item, \"cValue\", $event.target.value)},function($event){return _vm.inputHandler(item,'cValue')}],\"blur\":function($event){$event.preventDefault();return _vm.checkbackCardId(item)}}}),_vm._v(\" \"),_c('span',{staticClass:\"fd-icon-exist-gth\"},[_vm._v(\"!\")])]),_vm._v(\" \"),_c('div',{staticClass:\"fd-exist-tips\"},[_vm._v(\"该查询值重复！\")]),_vm._v(\" \"),_c('div',{staticClass:\"backcardtips\"},[_vm._l((_vm.bankcardList),function(itemBank,indexBank){return _c('p',[_vm._v(_vm._s(itemBank))])}),_vm._v(\" \"),_c('p',{staticStyle:{\"text-align\":\"center\",\"color\":\"red\"}},[_vm._v(\"(仅供研判参考)\")])],2)]),_vm._v(\" \"),_c('td',{class:{'fd-must-set':item.mustSethmsslb,\n                    required:item.mustSethmsslb,\n                    'noneCursor':item.isNotHmsslb\n                }},[_c('div',{staticClass:\"fd-input-contain\",class:{'nonePointer':item.isNotHmsslb}},[_c('aty-select',{ref:\"jsAtySelectCxlx\",refInFor:true,attrs:{\"filterable\":\"\",\"data\":_vm.dxssLx,\"clearable\":\"\"},on:{\"select-selected\":function($event){return _vm.selectSelected(index, 'jsAtySelectCxlb')},\"change\":function($event){return _vm.changeSelect2(item, 'hmsslb')}},model:{value:(item.hmsslb),callback:function ($$v) {_vm.$set(item, \"hmsslb\", $$v)},expression:\"item.hmsslb\"}})],1)]),_vm._v(\" \"),_c('td',{class:{'fd-must-set':item.mustSetcName\n                    ,required:item.mustSetcName}},[_c('div',{staticClass:\"fd-input-contain\"},[(item.isDisabled)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(item.cName),expression:\"item.cName\"}],staticClass:\"fd-cc-input-text\",class:{'noneCursor':item.isNotZrr},attrs:{\"type\":\"text\",\"disabled\":\"disabled\",\"maxlength\":\"40\"},domProps:{\"value\":(item.cName)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(item, \"cName\", $event.target.value)},function($event){return _vm.inputHandler(item,'cName')}]}}):_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(item.cName),expression:\"item.cName\"}],staticClass:\"fd-cc-input-text\",attrs:{\"type\":\"text\",\"maxlength\":\"40\"},domProps:{\"value\":(item.cName)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(item, \"cName\", $event.target.value)},function($event){return _vm.inputHandler(item,'cName')}]}})])]),_vm._v(\" \"),_c('td',{class:{'fd-must-set':item.mustSetnZj,required:item.mustSetnZj,'noneCursor':item.isNotZrr}},[_c('div',{directives:[{name:\"tips\",rawName:\"v-tips.ellipsis\",value:(_vm.getItemTipsName),expression:\"getItemTipsName\",modifiers:{\"ellipsis\":true}}],staticClass:\"fd-input-contain\",class:{'nonePointer':item.isNotZrr},attrs:{\"data-ellipsis\":_vm.adjustEllipsis(item)}},[_c('aty-select',{ref:\"jsAtySelectNZj\",refInFor:true,attrs:{\"filterable\":\"\",\"data\":_vm.zjList,\"clearable\":\"\",\"transfer\":\"\",\"pinyin-search\":\"\"},on:{\"select-selected\":function($event){return _vm.selectSelected(index, 'jsAtySelectNZj')},\"change\":function($event){return _vm.changeSelect1(item, 'nZj')}},model:{value:(item.nZj),callback:function ($$v) {_vm.$set(item, \"nZj\", $$v)},expression:\"item.nZj\"}})],1)]),_vm._v(\" \"),_c('td',{class:{'fd-must-set':item.mustSetcGbglqx\n                    ,required:item.mustSetcGbglqx,'noneCursor':item.isNotZrr}},[_c('div',{staticClass:\"fd-input-contain\",class:{'nonePointer':item.isNotZrr,}},[_c('aty-select',{ref:\"jsAtySelectGbglqx\",refInFor:true,attrs:{\"filterable\":\"\",\"data\":_vm.gbglqxList,\"clearable\":\"\",\"pinyin-search\":\"\"},on:{\"select-selected\":function($event){return _vm.selectSelected(index, 'jsAtySelectGbglqx')},\"change\":function($event){return _vm.changeSelect1(item, 'cGbglqx')}},model:{value:(item.cGbglqx),callback:function ($$v) {_vm.$set(item, \"cGbglqx\", $$v)},expression:\"item.cGbglqx\"}})],1)]),_vm._v(\" \"),_c('td',{staticClass:\"fd-must-set cxx\",class:{required:item.mustSetcCxxList}},[_c('div',{staticClass:\"fd-input-contain\",on:{\"click\":function($event){$event.stopPropagation();return _vm.clickShowModal(item)}}},[_c('div',{staticClass:\"fd-input-contain-con\"},[_c('ul',{staticClass:\"fd-cxx-tag-list\"},_vm._l((item.cCxxList),function(itemC,indexC){return _c('li',{directives:[{name:\"tips\",rawName:\"v-tips.cxx\",value:(_vm.getTipsContent(itemC)),expression:\"getTipsContent(itemC)\",modifiers:{\"cxx\":true}}],key:itemC.name + indexC  + itemC.sjyList.length,staticClass:\"fd-tag-item\"},[_c('span',{domProps:{\"textContent\":_vm._s(itemC.name)}}),_vm._v(\" \"),(itemC.sjyList.length > 0)?_c('span',[_vm._v(\" (\"+_vm._s(itemC.sjyList.length)+\")\")]):_vm._e()])}),0),_vm._v(\" \"),_c('i',{staticClass:\"aty-icon aty-icon-arrow-down-b aty-select-arrow\"})])]),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.cCxxList.length),expression:\"item.cCxxList.length\"}],staticClass:\"fd-clear-icon\",on:{\"click\":function($event){$event.stopPropagation();return _vm.clickClearCxx(item,index)}}})]),_vm._v(\" \"),_c('a',{staticClass:\"copyIcon\",on:{\"click\":function($event){return _vm.clickCopyItem(item,index)}}})])}),0),_vm._v(\" \"),_c('tfoot',[_c('tr',[_c('td',{staticClass:\"fd-footer-cell\",attrs:{\"colspan\":\"8\"}},[_c('div',{staticClass:\"fd-operate-contain\"},[_c('div',{staticClass:\"fd-btn-add\",on:{\"click\":function($event){return _vm.clickAdd()}}},[_vm._v(\"添加\")]),_vm._v(\" \"),_c('div',{staticClass:\"fd-input-add\"},[_c('aty-input',{on:{\"input\":_vm.inputDataAddCountHandler},model:{value:(_vm.dataAddCount),callback:function ($$v) {_vm.dataAddCount=$$v},expression:\"dataAddCount\"}}),_vm._v(\" \"),_c('label',{staticClass:\"fd-label-text\"},[_vm._v(\"个\")])],1),_vm._v(\" \"),_c('span',{staticClass:\"fd-tips\"},[_vm._v(\"填写数字后点击添加按钮，可以添加对应个数的被查询对象\")])])])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('colgroup',[_c('col',{staticClass:\"fd-col1\"}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col7\",staticStyle:{\"width\":\"150px\"}}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col8\",staticStyle:{\"width\":\"250px\"}}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col9\",staticStyle:{\"width\":\"100px\"}}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col7\",staticStyle:{\"width\":\"130px\"}}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col8\",staticStyle:{\"width\":\"180px\"}}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col9\",staticStyle:{\"width\":\"140px\"}}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col9\",staticStyle:{\"width\":\"290px\"}}),_vm._v(\" \"),_c('col',{staticClass:\"fd-col-auto\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',{staticClass:\"fd-tr-placeholder\"},[_c('th'),_vm._v(\" \"),_c('th'),_vm._v(\" \"),_c('th'),_vm._v(\" \"),_c('th')]),_vm._v(\" \"),_c('tr',[_c('th',{staticClass:\"fd-table-caption\",attrs:{\"colspan\":\"8\"}},[_vm._v(\"其他\")])]),_vm._v(\" \"),_c('tr',{staticClass:\"fd-head-tr\"},[_c('th',[_vm._v(\"序号\")]),_vm._v(\" \"),_c('th',[_c('em',{staticClass:\"fd-red\"},[_vm._v(\"*\")]),_vm._v(\"查询类型\")]),_vm._v(\" \"),_c('th',[_c('em',{staticClass:\"fd-red\"},[_vm._v(\"*\")]),_vm._v(\"查询值\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"line-height\":\"30px\"}},[_c('em',{staticClass:\"fd-red\"},[_vm._v(\"*\")]),_vm._v(\"号码所属对象类别\")]),_vm._v(\" \"),_c('th',{staticStyle:{\"line-height\":\"30px\"}},[_vm._v(\"号码所属对象姓名/名称\")]),_vm._v(\" \"),_c('th',[_vm._v(\"职级\")]),_vm._v(\" \"),_c('th',[_vm._v(\"干部管理权限\")]),_vm._v(\" \"),_c('th',{staticClass:\"fd-cxx-cell\"},[_c('em',{staticClass:\"fd-red\"},[_vm._v(\"*\")]),_vm._v(\"查询项\"),_c('span',{staticClass:\"fd-tip-img\"}),_vm._v(\" \"),_c('div',{staticClass:\"fd-cxx-tip\"},[_c('span',{staticClass:\"fd-close-tip\"}),_vm._v(\"\\n                    当前查询项选择完成后，会将已选的信息项类型和已经选择的协查单位数量展示出来;\\n                    \"),_c('br'),_vm._v(\"\\n                    示例：账户信息(10)，\\\"账户信息\\\"代表信息项类型，\\\"10\\\"代表已选择银行数量。\\n                \")])])])])}]\n\nexport { render, staticRenderFns }","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020//12/24 - 10:57\r\n *@updateTime 2020/12/31 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  导入查询对象弹出层入口\r\n */\r\n/**\r\n *      方法集合\r\n **********************/\r\n// 全局事件\r\nimport globalEvent from './extend/globalEvent.js';\r\n// 获取基本信息的默认的数据\r\nimport request from './request/request.js';\r\nimport popupConfig from './extend/popupConfig.js';\r\n// 导出模块\r\nexport default {\r\n    mixins: [globalEvent, request, popupConfig],\r\n    props: {\r\n        // 是否显示导入查询对象弹出层\r\n        showDrcxdx: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            // 上传被调查对象\r\n            uploadBdcdxUrl: window.fdConfig.url.spb.uploadBdcdx,\r\n            // 判断确定按钮的显示文本\r\n            importConfirmButtonLoading: false,\r\n            // 上传成功的文件数组\r\n            files: []\r\n        };\r\n    },\r\n    computed: {\r\n        // 动态变换的文本\r\n        importConfirmButtonLoadingText() {\r\n            return this.importConfirmButtonLoading ? '正在上传...' : '确认';\r\n        },\r\n        // 确定按钮\r\n        confirm() {\r\n            return {\r\n                show: true,\r\n                // 动态变换的文本\r\n                text: this.importConfirmButtonLoadingText,\r\n                callback(popup) {// eslint-disable-line\r\n                    window.console.log('点击了确定');\r\n                    // 点击确认后隐藏弹出层,\r\n                    // popup.hidePopup();\r\n                }\r\n            };\r\n        }\r\n    },\r\n    methods: {\r\n        handleBeforeUpload(file) {\r\n            this.file = {name: ''};\r\n            this.file.name = file.name;\r\n            // 上传前，清空上传文件\r\n            this.clearUploadFiles();\r\n            // 正在上传\r\n            this.importConfirmButtonLoading = true;\r\n            // window.console.log(`before upload: ${this.importConfirmButtonLoading}`);\r\n        },\r\n        // 上传成功之后的回调函数\r\n        handleSuccess(response) {\r\n            const _this = this;\r\n            _this.importConfirmButtonLoading = false;\r\n            // 成功的处理\r\n            if (response.success) {\r\n                _this.uploadBdcdxKey = response.data;\r\n                // 调用滚动条刷新方法；\r\n                _this.$refs.scroll02.update(0, 0);\r\n                _this.files.push(_this.file);\r\n                _this.$refs.uploadBdcdxEle.clearFiles();\r\n            } else {\r\n                // 清空上传文件\r\n                this.clearUploadFiles();\r\n                // 提示\r\n                this.globalBus.$emit('global-spb-invalid', response.message, 'error');\r\n            }\r\n        },\r\n        // 上传失败，files 当前选中要上传的文件，fileList 已上传的文件列表\r\n        handleError(error, files, fileList) { // eslint-disable-line\r\n            this.importConfirmButtonLoading = false;\r\n            // window.console.log(`success: ${this.importConfirmButtonLoading}`);\r\n            // 清空上传文件\r\n            this.clearUploadFiles();\r\n            // 提示\r\n            this.globalBus.$emit('global-spb-invalid', '模板错误', 'error');\r\n        },\r\n        // 清空上传文件\r\n        clearUploadFiles() {\r\n            this.$refs.uploadBdcdxEle.clearFiles();\r\n            this.files = [];\r\n        }\r\n    }\r\n};\r\n\r\n","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020/12/24 - 10:57\r\n *@updateTime 2020/12/31 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description 全局事件模块\r\n */\r\n// 导出模块\r\nexport default {\r\n    created() {\r\n        // 绑定全局事件\r\n        this.bindGlobalEvent();\r\n    },\r\n    beforeDestroy() {\r\n        // 取消全局事件\r\n        this.unbindGlobalEvent();\r\n    },\r\n    methods: {\r\n        // 绑定全局事件\r\n        bindGlobalEvent() {\r\n            // 绑定设置 显示导入查询对象弹出层\r\n            this.globalBus.$on('global-spb-drcxdx-show', this.showDrcxdxPopup);\r\n        },\r\n        // 取消全局事件\r\n        unbindGlobalEvent() {\r\n            // 取消绑定设置 显示导入查询对象弹出层\r\n            this.globalBus.$off('global-spb-drcxdx-show', this.showDrcxdxPopup);\r\n        },\r\n        // 触发全局事件\r\n        emitGlobalEvent(callback) {\r\n            if (this.globalBus) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n *@file request\r\n *@version 1.0.1\r\n *@author wanghuifeng\r\n *@createTime 2020/12/28 - 11:03\r\n *@updateTime 2020/12/28 - 11:03\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  阅卷目录request （请求）相关\r\n @namespace  request   请求相关，后面加模块名\r\n 名字解释：\r\n _name ： 用 【模块名】 => 【子模块名】\r\n _method ： 请求的方法\r\n _showLog：  是否显示日志\r\n _url : 请求的url\r\n _data : 请求所需要的数据， 需要的参数名，全部在这里写好， 可以通过传参给对象赋值！\r\n _serverData : 服务器返回的数据\r\n\r\n 请求：\r\n 1. fd工程结构中自带此全局方法\r\n window.fdGlobal.ajax\r\n 2.可以单独使用\r\n axios\r\n\r\n 请求必须输出日志：\r\n 1. 请求日志\r\n window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n 2. 响应日志\r\n window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n\r\n ！important\r\n 请求函数返回一个promise,\r\n 为了性能需要，咱们需要内置性能日志！\r\n 按照以下结构编写即可！\r\n 以下是一个实际案例， 【请求模块】可以通过混入的方式，引入到组件的index.js 中\r\n\r\n request ：为命名空间\r\n TreeData：  为模块名\r\n showLog ： 在组件的 index.js  的data中写好，  如：{showLog: window.fdConfig.url.showLog}, 全局控制日志！\r\n\r\n\r\n */\r\nexport default {\r\n    methods: {\r\n        // 请求【审批表】=> 【确定导入查询对象】\r\n        requestConfirmDrcxdx(dataParams) {\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal.performance.getCurrentTime();\r\n            return new Promise((resolve, reject) => {\r\n                const _showLog = this.showLog;\r\n                const _name = '【审批表】=> 【确定导入查询对象】';\r\n                const _method = window.fdConfig.methodPost;\r\n                const _url = `${window.fdConfig.url.spb.confirmDrcxdx}`;\r\n                const _data = {\r\n                    jbxxBh: dataParams.jbxxBh,\r\n                    // /bdcdx/excel接口返回值\r\n                    key: dataParams.key\r\n                };\r\n                // 输出日志\r\n                window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n                //  返回shuju\r\n                window.fdGlobal.ajax({\r\n                    method: _method,\r\n                    url: _url,\r\n                    // URL参数\r\n                    // 必须是一个纯对象或者 URL参数对象\r\n                    data: _data,\r\n                    // 默认值是json\r\n                    responseType: 'json'\r\n                })\r\n                    .then((data) => {\r\n                        const _serverData = data.data;\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        resolve(_serverData);\r\n                    }, (data) => {\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                        const _serverData = data.data;\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        reject(data);\r\n                    });\r\n            });\r\n        }\r\n    }\r\n};\r\n","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020//12/24 - 10:57\r\n *@updateTime 2020/12/29 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  查询项弹出层  => 弹出层配置\r\n */\r\nexport default {\r\n    data() {\r\n        return {\r\n            // 弹出层标题\r\n            popupTitle: '导入查询对象',\r\n            // 弹出层显示状态\r\n            popupStatus: this.showDrcxdx,\r\n            // 获取保存之后基本信息编号\r\n            elementParamsCbh: '',\r\n            // 获取【自然人数据列表长度】 + 【企业机构数据列表】 + 【其他数据列表】的总和\r\n            addCountTotal: 0\r\n        };\r\n    },\r\n    methods: {\r\n        // 设置弹出层显示状态\r\n        setPopupStatus(flag) {\r\n            this.popupStatus = flag;\r\n        },\r\n\r\n        // 显示导入查询对象弹出层\r\n        showDrcxdxPopup(cBh) {\r\n            // 1. 获取保存之后基本信息编号\r\n            this.elementParamsCbh = cBh;\r\n            // 2. 获取【自然人数据列表长度】 + 【企业机构数据列表】 + 【其他数据列表】的总和\r\n            this.addCountTotal = this.$parent.jsZrr.operateOriginDataList().length + this.$parent.jsJg.operateOriginDataList().length + this.$parent.jsQt.operateOriginDataList().length;\r\n            // 3. 显示弹出层\r\n            this.setPopupStatus(true);\r\n        },\r\n\r\n        //  取消按钮\r\n        clickCancel() {\r\n            // 清空上传文件\r\n            this.clearUploadFiles();\r\n            // 2.显示弹出层\r\n            this.setPopupStatus(false);\r\n        },\r\n        // 确定按钮\r\n        clickConfirm() {\r\n            // if (this.$refs.uploadBdcdxEle.fileList === null || this.$refs.uploadBdcdxEle.fileList.length === 0) {\r\n            if (this.files.length === 0) {\r\n                // window.Artery.notice.info({title: '请先上传一个文件！'});\r\n                // 提示\r\n                this.globalBus.$emit('global-spb-invalid', '请先上传一个文件！', 'error');\r\n                return false;\r\n            }\r\n            const _params = {\r\n                // 基本信息编号\r\n                jbxxBh: this.elementParamsCbh,\r\n                key: this.uploadBdcdxKey\r\n            };\r\n            // 发送请求\r\n            this.requestConfirmDrcxdx(_params)\r\n                .then((data) => {\r\n                    this.operateConfirmData(data);\r\n                }, (data) => {\r\n                    window.console.error(data);\r\n                });\r\n        },\r\n        // 点击确定按钮之后，处理处理\r\n        operateConfirmData(data) {\r\n            if (data.success) {\r\n                // 自然人列表\r\n                const cxZrrList = data.data.cxZrrList;\r\n                // 企业/机构\r\n                const cxDwList = data.data.cxDwList;\r\n                // 其他\r\n                const cxOtherList = data.data.cxOtherList;\r\n                // 基本信息\r\n                const jbxx = data.data.jbxx;\r\n                this.emitGlobalEvent(() => {\r\n                    // 对应掉各个模块的赋值方法\r\n                    this.globalBus.$emit('global-spb-zrr-setQueryData', cxZrrList);\r\n                    this.globalBus.$emit('global-spb-jg-setQueryData', cxDwList);\r\n                    this.globalBus.$emit('global-spb-qt-setQueryData', cxOtherList);\r\n                    // 如果存在基本信息\r\n                    if (jbxx) {\r\n                        this.globalBus.$emit('global-spb-jbxx-setQueryData', jbxx);\r\n                    }\r\n                });\r\n                // 点击取消， 隐藏弹出层\r\n                this.clickCancel();\r\n            } else {\r\n                // 提示\r\n                this.globalBus.$emit('global-spb-invalid', data.message, 'error');\r\n            }\r\n        }\r\n    }\r\n};\r\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=0d235c68&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('component-popup',{staticClass:\"fd-ac-spb-drcxdx\",attrs:{\"title\":_vm.popupTitle,\"confirm\":_vm.confirm},on:{\"close\":function($event){return _vm.clickCancel($event)},\"cancel\":function($event){return _vm.clickCancel($event)},\"confirm\":function($event){return _vm.clickConfirm($event)}},model:{value:(_vm.popupStatus),callback:function ($$v) {_vm.popupStatus=$$v},expression:\"popupStatus\"}},[_c('div',{staticClass:\"fd-ac-spb-drcxdx-contain\"},[_c('div',{staticClass:\"fd-modal-content\"},[_c('aty-text',{staticClass:\"fd-xjspd-label\"},[_vm._v(\"上传文件：\")]),_vm._v(\" \"),_c('aty-upload',{ref:\"uploadBdcdxEle\",staticClass:\"fd-update-btn\",attrs:{\"action\":_vm.uploadBdcdxUrl,\"accept\":\".xls,.xlsx\",\"data\":{jbxxBh: _vm.elementParamsCbh,count:_vm.addCountTotal},\"before-upload\":_vm.handleBeforeUpload,\"on-success\":_vm.handleSuccess,\"on-error\":_vm.handleError,\"show-upload-list\":false,\"multiple\":false}},[_c('aty-button',{attrs:{\"type\":\"ghost\",\"icon\":\"ios-cloud-upload-outline\",\"text\":\"上传\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"fd-update-tip\"},[_vm._v(\"请先下载查询对象导入模板并填写内容，再导入，只能上传Excel文件\")]),_vm._v(\" \"),_c('component-scrollbar',{ref:\"scroll02\",staticClass:\"fd-scroll-02\",attrs:{\"speed\":53}},_vm._l((_vm.files),function(item,index){return _c('div',{key:item.name + index,staticClass:\"fd-uploadFile-list fd-clear\"},[_c('p',{domProps:{\"textContent\":_vm._s(item.name)}})])}),0)],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020//12/24 - 10:57\r\n *@updateTime 2020/12/29 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  查询项弹出层  => 弹出层配置\r\n */\r\nconst NUM_3 = 3;\r\nexport default {\r\n    data() {\r\n        return {\r\n            // 弹出层标题\r\n            popupTitle: '审批流转',\r\n            // 弹出层显示状态\r\n            popupStatus: this.showSplz,\r\n            // 获取自然人，机构，其他模块\r\n            paramsElement: null,\r\n            // 确定按钮\r\n            popupConfirm:{\r\n                show: true,\r\n                text: '确认',\r\n                callback() {\r\n                    window.console.log('点击了确定');\r\n                    // popup.hidePopup();\r\n                }\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        // 设置弹出层显示状态\r\n        setPopupStatus(flag) {\r\n            this.popupStatus = flag;\r\n        },\r\n\r\n        // 显示审批流转弹出层\r\n        showSplzPopup(paramElement) {\r\n            // 1. 加载常用审批人\r\n            this.dOperateInitCysprData();\r\n            // 2. 审批记录数据\r\n            this.dOperateInitSpjlData(paramElement.jbxx);\r\n            // 3. 获取线上审批流程类型\r\n            this.dOperateInitMultipleFlag();\r\n            // 4. 显示弹出层\r\n            this.setPopupStatus(true);\r\n            // 5. 传递自然人，机构，其他模块，用于审批流转弹层点击确定按钮的操作数据\r\n            this.paramsElement = paramElement;\r\n        },\r\n\r\n        //  取消按钮\r\n        clickCancel() {\r\n            // 1. 清空审批人的id以及name值\r\n            this.clearSprIdOrName();\r\n            // 2. 清空所有的审批人\r\n            this.deleteAllSpr();\r\n            // 3.隐藏弹出层\r\n            this.setPopupStatus(false);\r\n        },\r\n        // 确定按钮 点击审批流转弹窗的确认\r\n        clickConfirm() {\r\n            // 组装选择的审批人的id\r\n            let sprIds = '';\r\n            this.selectSprList.forEach(function (item, index) { // eslint-disable-line\r\n                sprIds += `${item.code},`;\r\n            });\r\n            if (this.xyhj === 'undefined' || this.xyhj === '') {\r\n                window.Artery.notice.warning({title: '请选择流转程序'});\r\n                return;\r\n            } else if (this.xyhj === '1' && (sprIds === 'undefined' || sprIds === '')) {\r\n                window.Artery.notice.warning({title: '请选择下一环节审批人'});\r\n                return;\r\n            }\r\n\r\n            if (sprIds !== 'undefined' && sprIds.length !== 'undefined' && sprIds !== '') {\r\n                sprIds = sprIds.substring(0, sprIds.length - 1);\r\n            }\r\n            // 线上审批模态框确定按钮事件(保存类型，1：暂存；2：生成审批表,3:发起审批)\r\n            this.dOperateSaveTypeDefaultData(this.queryData(sprIds), NUM_3);\r\n            // 隐藏弹出层\r\n            this.setPopupStatus(false);\r\n        },\r\n        // 点击审批流转弹窗的确认 请求参数处理\r\n        queryData(sprIds) {\r\n            this.serverData.sprIds = sprIds;\r\n            // 将指定的下级审批人ID数组转为字符串连接\r\n            this.serverData.cxZrrList = this.paramsElement.cxZrrList;\r\n            this.serverData.cxDwList = this.paramsElement.cxDwList;\r\n            this.serverData.cxOtherList = this.paramsElement.cxOtherList;\r\n            this.serverData.jbxx = this.paramsElement.jbxx;\r\n            return JSON.parse(JSON.stringify(this.serverData));\r\n        },\r\n        // 清空审批人的id以及name值\r\n        clearSprIdOrName() {\r\n            this.spr.ids = '';\r\n            this.spr.name = '';\r\n        },\r\n        // 清空所有的审批人\r\n        deleteAllSpr() {\r\n            // 清空选中的审批人数组\r\n            this.selectSprList = [];\r\n            // 循环数据，处理取消选中\r\n            this.cysprList.forEach((value) => {\r\n                value.selected = false;\r\n            });\r\n            // 清除已选的个数\r\n            this.selectedNum = 0;\r\n            // 清空组织机构树上的选中\r\n            this.splzOrganTree = [];\r\n            this.checkedIdsArr = [];\r\n            this.$refs.jsSplzTree.checkedIds = this.checkedIdsArr;\r\n        }\r\n    }\r\n};\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020//12/24 - 10:57\r\n *@updateTime 2020/12/31 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  导入查询对象弹出层入口\r\n */\r\n/**\r\n *      方法集合\r\n **********************/\r\n// 全局事件\r\nimport globalEvent from './extend/globalEvent.js';\r\n// 获取基本信息的默认的数据\r\nimport request from './request/request.js';\r\n// 弹出层配置\r\nimport popupConfig from './extend/popupConfig.js';\r\n// 数据处理\r\nimport dOperate from './extend/dOperate.js';\r\n// 导出模块\r\nexport default {\r\n    mixins: [globalEvent, request, popupConfig, dOperate],\r\n    props: {\r\n        // 是否显示审批流转弹出层\r\n        showSplz: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            // 下一环节审批人\r\n            nextSpr: '',\r\n            // 审批记录列表的数据\r\n            spjlData: [],\r\n            // 当前审批人\r\n            currentSpr: '1',\r\n            // 选中的审批人的数组\r\n            selectSprList: [],\r\n            // 判断常用审批人和组织机构的是复选框还是单选框\r\n            isMultiple: true,\r\n            // 已选的【常用审批人或组织机构】个数\r\n            selectedNum: 0,\r\n            // 是否显示审批人菜单\r\n            isShowSprMenu: false,\r\n            // 选中组织人员还是常用审批人\r\n            isShowZzry: true,\r\n            // 树是复选框的时候v-model绑定的值，点击组织机构树的时候push进来的id集合（不带user_）\r\n            splzOrganTree: [],\r\n            // 常用审批人的list\r\n            cysprList: [],\r\n            // 下一环节，1:继续审批，2：结束审批\r\n            xyhj: '1',\r\n            // 点击常用审批人的时候push进来的id集合（为了匹配组织机构树的数据手动拼接了user_）\r\n            checkedIdsArr: [],\r\n            // 组织人员请求数据的url\r\n            requestDataSplzZzryUrl: window.fdConfig.url.spb.getOrganChildrenSplz,\r\n            // 审批人\r\n            spr: {\r\n                ids: '',\r\n                names: ''\r\n            },\r\n            // 参数\r\n            serverData: {\r\n                sprIds: [],\r\n                jbxx: {},\r\n                cxZrrList: [],\r\n                cxDwList: [],\r\n                cxOtherList: []\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        closeSprMenu() {\r\n            this.isShowSprMenu = !this.isShowSprMenu;\r\n        },\r\n        // 点击选中title（复选框）\r\n        clickTitle(param) {\r\n            const _this = this;\r\n            param.selected = !param.selected;\r\n            if (param.selected) {\r\n                if (!_this.isMultiple) {\r\n                    _this.deleteAllSpr();\r\n                    param.selected = !param.selected;\r\n                }\r\n\r\n                const sprDetail = {\r\n                    name: param.name,\r\n                    code: param.code,\r\n                    selected: true\r\n                };\r\n                _this.selectSprList.push(sprDetail);\r\n                // 选中常用审批人则对应的组织人员里面的数据也要选中(为了和树中的id匹配进行user_的拼接)\r\n                _this.checkedIdsArr.push(`user_${param.code}`);\r\n                _this.$refs.jsSplzTree.checkedIds = _this.checkedIdsArr;\r\n                _this.splzOrganTree.push(param.code);\r\n            } else {\r\n                // 点击常用审批人取消\r\n                _this.selectSprList.forEach(function (item, index) {\r\n                    if (item.code === param.code) {\r\n                        _this.selectSprList.splice(index, 1);\r\n                    }\r\n                });\r\n                _this.checkedIdsArr.forEach(function (item, index) {\r\n                    if (item === (`user_${param.code}`)) {\r\n                        _this.checkedIdsArr.splice(index, 1);\r\n                    }\r\n                });\r\n                _this.splzOrganTree.forEach(function (item, index) {\r\n                    if (item === (param.code)) {\r\n                        _this.splzOrganTree.splice(index, 1);\r\n                    }\r\n                });\r\n                _this.$refs.jsSplzTree.checkedIds = _this.checkedIdsArr;\r\n            }\r\n            // 赋值审批人的选中\r\n            this.selectedNum = this.selectSprList.length;\r\n        },\r\n        // 选择组织人员树\r\n        change(newValue, oldValue) {//eslint-disable-line\r\n            const _this = this;\r\n            _this.spr.names = '';\r\n            _this.spr.ids = '';\r\n            if (_this.isMultiple) {\r\n                // 判断当前点击的是人还是其他组织机构\r\n                if (newValue.constructor === Array) {\r\n                    // 把新值加入到选中审批人的数组中\r\n                    // 先定义一个没去过重的数组\r\n                    const moreValue = [];\r\n                    for (let i = 0; i < newValue.length; i++) {\r\n                        const sprDetail = {\r\n                            name: newValue[i].name,\r\n                            code: newValue[i].id,\r\n                            selected: true\r\n                        };\r\n                        moreValue.push(sprDetail);\r\n                    }\r\n                    // 数组去重\r\n                    _this.selectSprList = [];\r\n                    const obj = {};\r\n                    for (let i = 0; i < moreValue.length; i++) {\r\n                        if (!obj[moreValue[i].code]) {\r\n                            _this.selectSprList.push(moreValue[i]);\r\n                        }\r\n                    }\r\n\r\n                    // 组织人员勾选了则对应的常用审批人也要勾选\r\n                    _this.cysprList.forEach(function (item, index) { // eslint-disable-line\r\n                        _this.selectSprList.forEach(function (itemC, indexC) { // eslint-disable-line\r\n                            if (item.code === itemC.code) {\r\n                                item.selected = itemC.selected;\r\n                            }\r\n                        });\r\n                    });\r\n                    // 组织人员取消了则对应的常用审批人也要取消\r\n                    _this.cysprList.forEach(function (item, index) { // eslint-disable-line\r\n                        if (_this.splzOrganTree.indexOf(item.code) === -1) {\r\n                            item.selected = false;\r\n                        }\r\n                    });\r\n                    // 赋值长度\r\n                    _this.selectedNum = _this.selectSprList.length;\r\n                }\r\n            } else if (newValue.type === 'user') {\r\n                // 清空所有的审批人\r\n                _this.deleteAllSpr();\r\n                const sprDetail = {\r\n                    name: newValue.name,\r\n                    code: newValue.id,\r\n                    selected: true\r\n                };\r\n                _this.selectSprList.push(sprDetail);\r\n                // 单选的时候需要手动添加选中的id，v-model绑定的值不是数组是字符串\r\n                _this.splzOrganTree.push(newValue.id);\r\n                // 组织人员勾选了则对应的常用审批人也要勾选\r\n                _this.cysprList.forEach(function (item, index) { // eslint-disable-line\r\n                    _this.selectSprList.forEach(function (itemC, indexC) { // eslint-disable-line\r\n                        if (item.code === itemC.code) {\r\n                            item.selected = itemC.selected;\r\n                        }\r\n                    });\r\n                });\r\n                // 已选中审批人的个数\r\n                _this.selectedNum = _this.selectSprList.length;\r\n            }\r\n        },\r\n        // 切换组织人员以及常用审批人\r\n        clickZzryOrCyspr(param) {\r\n            this.isShowZzry = param === '1';\r\n        },\r\n        // 点击切换下一环节审批人或者结束审批\r\n        clickSpr(param) {\r\n            this.currentSpr = param;\r\n            this.xyhj = param;\r\n        },\r\n        // 点击出现选择审批人的下拉框\r\n        xzsprInputFocus() {\r\n            this.isShowSprMenu = !this.isShowSprMenu;\r\n            this.isShowZzry = true;\r\n        },\r\n        // 点击删除审批人\r\n        clickDelOnlySpr(param) {\r\n            // 1. 点击删除选中的常用审批人\r\n            // 1.1 取消对应常用审批人里面的数据\r\n            this.cancelCysprData(param);\r\n            // 1.2. 删除选中的审批人数组里面对应的数据\r\n            this.cancelSprSelectData(param);\r\n            // 2. 取消对应组织人员里面的数据\r\n            this.cancelZzjgryData(param);\r\n            // 3. 赋值选中的审批人的数量\r\n            this.selectedNum = this.selectSprList.length;\r\n        },\r\n        // 取消对应常用审批人里面的数据\r\n        cancelCysprData(param) {\r\n            // 取消对应常用审批人里面的数据\r\n            this.cysprList.forEach(function (item, index) { // eslint-disable-line\r\n                if (item.code === param.code) {\r\n                    item.selected = false;\r\n                }\r\n            });\r\n        },\r\n        // 删除选中的审批人数组里面对应的数据\r\n        cancelSprSelectData(param) {\r\n            // 删除选中的审批人数组里面对应的数据\r\n            this.selectSprList.forEach(function (item, index) {\r\n                if (item.code === param.code) {\r\n                    this.selectSprList.splice(index, 1);\r\n                }\r\n            });\r\n        },\r\n        // 取消对应组织人员里面的数据\r\n        cancelZzjgryData(param) {\r\n            if (this.selectSprList.length > -1) {\r\n                // 删除的已选中审批人在组织机构树中的下标\r\n                const closeCheckedIndex = this.splzOrganTree.indexOf(param.code);\r\n                if (closeCheckedIndex > -1) {\r\n                    // 取消组织人员对应的选中\r\n                    if (this.isMultiple) {\r\n                        this.splzOrganTree.splice(closeCheckedIndex, 1);\r\n                    } else if (!this.isMultiple) {\r\n                        this.splzOrganTree = '';\r\n                    }\r\n                    this.checkedIdsArr.splice(closeCheckedIndex, 1);\r\n                    this.$refs.jsSplzTree.checkedIds = this.checkedIdsArr;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020/12/24 - 10:57\r\n *@updateTime 2020/12/31 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description 全局事件模块\r\n */\r\n// 导出模块\r\nexport default {\r\n    created() {\r\n        // 绑定全局事件\r\n        this.bindGlobalEvent();\r\n    },\r\n    beforeDestroy() {\r\n        // 取消全局事件\r\n        this.unbindGlobalEvent();\r\n    },\r\n    methods: {\r\n        // 绑定全局事件\r\n        bindGlobalEvent() {\r\n            // 绑定设置 显示查询项弹出层\r\n            this.globalBus.$on('global-spb-splz-show', this.showSplzPopup);\r\n        },\r\n        // 取消全局事件\r\n        unbindGlobalEvent() {\r\n            // 取消绑定设置 显示查询项弹出层\r\n            this.globalBus.$off('global-spb-splz-show', this.showSplzPopup);\r\n        },\r\n        // 触发全局事件\r\n        emitGlobalEvent(callback) {\r\n            if (this.globalBus) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n *@file request\r\n *@version 1.0.1\r\n *@author wanghuifeng\r\n *@createTime 2020/12/28 - 11:03\r\n *@updateTime 2020/12/28 - 11:03\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  阅卷目录request （请求）相关\r\n @namespace  request   请求相关，后面加模块名\r\n 名字解释：\r\n _name ： 用 【模块名】 => 【子模块名】\r\n _method ： 请求的方法\r\n _showLog：  是否显示日志\r\n _url : 请求的url\r\n _data : 请求所需要的数据， 需要的参数名，全部在这里写好， 可以通过传参给对象赋值！\r\n _serverData : 服务器返回的数据\r\n\r\n 请求：\r\n 1. fd工程结构中自带此全局方法\r\n window.fdGlobal.ajax\r\n 2.可以单独使用\r\n axios\r\n\r\n 请求必须输出日志：\r\n 1. 请求日志\r\n window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n 2. 响应日志\r\n window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n\r\n ！important\r\n 请求函数返回一个promise,\r\n 为了性能需要，咱们需要内置性能日志！\r\n 按照以下结构编写即可！\r\n 以下是一个实际案例， 【请求模块】可以通过混入的方式，引入到组件的index.js 中\r\n\r\n request ：为命名空间\r\n TreeData：  为模块名\r\n showLog ： 在组件的 index.js  的data中写好，  如：{showLog: window.fdConfig.url.showLog}, 全局控制日志！\r\n\r\n\r\n */\r\nexport default {\r\n    methods: {\r\n        // 请求【审批表】=>【审批流转弹层】=> 【常用审批人】\r\n        requestCysprData() {\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal.performance.getCurrentTime();\r\n            return new Promise((resolve, reject) => {\r\n                const _showLog = this.showLog;\r\n                const _name = '【审批表】=>【审批流转弹层】=> 【常用审批人】';\r\n                const _method = window.fdConfig.methodGet;\r\n                const _url = `${window.fdConfig.url.spb.cyspr}`;\r\n                const _data = {};\r\n                // 输出日志\r\n                window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n                //  返回shuju\r\n                window.fdGlobal.ajax({\r\n                    method: _method,\r\n                    url: _url,\r\n                    // URL参数\r\n                    // 必须是一个纯对象或者 URL参数对象\r\n                    params: _data,\r\n                    // 默认值是json\r\n                    responseType: 'json'\r\n                })\r\n                    .then((data) => {\r\n                        const _serverData = data.data;\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        resolve(_serverData);\r\n                    }, (data) => {\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                        const _serverData = data.data;\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        reject(data);\r\n                    });\r\n            });\r\n        },\r\n        // 【审批表】=>【审批流转弹层】=> 【审批记录】\r\n        requestSpjlData(params) {\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal.performance.getCurrentTime();\r\n            return new Promise((resolve, reject) => {\r\n                const _showLog = this.showLog;\r\n                const _name = '【审批表】=>【审批流转弹层】=> 【审批记录】';\r\n                const _method = window.fdConfig.methodPost;\r\n                const _url = `${window.fdConfig.url.spb.spjl}`;\r\n                const _data = {\r\n                    // 查询号，可为空  mock: 京监查【2020】第012864号\r\n                    cCxh: params.cCxh\r\n                };\r\n                // 输出日志\r\n                window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n                //  返回shuju\r\n                window.fdGlobal.ajax({\r\n                    method: _method,\r\n                    url: _url,\r\n                    // URL参数\r\n                    // 必须是一个纯对象或者 URL参数对象\r\n                    data: _data,\r\n                    // 默认值是json\r\n                    responseType: 'json'\r\n                })\r\n                    .then((data) => {\r\n                        const _serverData = data.data;\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        resolve(_serverData);\r\n                    }, (data) => {\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                        const _serverData = data.data;\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        reject(data);\r\n                    });\r\n            });\r\n        },\r\n        // 【审批表】=>【获取线上审批流程类型】\r\n        requestMultipleSplz() {\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal.performance.getCurrentTime();\r\n            return new Promise((resolve, reject) => {\r\n                const _showLog = this.showLog;\r\n                const _name = '【审批表】=>【获取线上审批流程类型】';\r\n                const _method = window.fdConfig.methodGet;\r\n                const _url = `${window.fdConfig.url.spb.multipleSplz}`;\r\n                const _data = {};\r\n                // 输出日志\r\n                window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n                //  返回shuju\r\n                window.fdGlobal.ajax({\r\n                    method: _method,\r\n                    url: _url,\r\n                    // URL参数\r\n                    // 必须是一个纯对象或者 URL参数对象\r\n                    params: _data,\r\n                    // 默认值是json\r\n                    responseType: 'json'\r\n                })\r\n                    .then((data) => {\r\n                        const _serverData = data.data;\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        resolve(_serverData);\r\n                    }, (data) => {\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                        const _serverData = data.data;\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        reject(data);\r\n                    });\r\n            });\r\n        },\r\n        // 请求【审批表】=> 【保存(新建和更新)审批表数据】\r\n        requestSaveTypeDefaultData(params, status) { // eslint-disable-line\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal.performance.getCurrentTime();\r\n            return new Promise((resolve, reject) => {\r\n                const _showLog = this.showLog;\r\n                // 线上审批模态框确定按钮事件(保存类型，1：暂存；2：生成审批表,3:发起审批) status\r\n                const _name = '请求【审批表】=> 【保存(新建和更新)审批表数据】';\r\n                const _method = window.fdConfig.methodPost;\r\n                // const _url = `${window.fdConfig.url.spb.saveType}/${status}`;\r\n                const _url = window.fdConfig.isDebug ? window.fdConfig.url.spb.saveType : `${window.fdConfig.url.spb.saveType}${status}`;\r\n                const _data = {\r\n                    sprIds: params.sprIds,\r\n                    tjbxx: params.jbxx,\r\n                    cxZrrList: params.cxZrrList,\r\n                    cxDwList: params.cxDwList,\r\n                    cxOtherList: params.cxOtherList\r\n                };\r\n                // 输出日志\r\n                window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n                //  返回shuju\r\n                window.fdGlobal.ajax({\r\n                    method: _method,\r\n                    url: _url,\r\n                    // URL参数\r\n                    // 必须是一个纯对象或者 URL参数对象\r\n                    data: _data,\r\n                    // 默认值是json\r\n                    responseType: 'json'\r\n                })\r\n                    .then((data) => {\r\n                        const _serverData = data.data;\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        resolve(_serverData);\r\n                    }, (data) => {\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                        const _serverData = data.data;\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        reject(data);\r\n                    });\r\n            });\r\n        }\r\n    }\r\n};\r\n","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020//12/24 - 10:57\r\n *@updateTime 2020/12/29 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  审批流转弹出层  => 数据处理模块\r\n @namespace   d  => data\r\n */\r\nexport default {\r\n    data() {\r\n        return {};\r\n    },\r\n    methods: {\r\n        // 初始化常用审批人\r\n        dOperateInitCysprData() {\r\n            return new Promise((resolve, reject) => {\r\n                this.requestCysprData().then((data) => {\r\n                    for (let i = 0; i < data.data.length; i++) {\r\n                        const spr = {\r\n                            code: data.data[i].code,\r\n                            name: data.data[i].name,\r\n                            selected: false\r\n                        };\r\n                        this.cysprList.push(spr);\r\n                    }\r\n                }, (data) => {\r\n                    reject(data);\r\n                });\r\n            });\r\n        },\r\n        // 初始审批记录\r\n        dOperateInitSpjlData(params) {\r\n            return new Promise((resolve, reject) => {\r\n                this.requestSpjlData(params).then((data) => {\r\n                    if (data.code === '200' && data.data !== 'undefined') {\r\n                        this.spjlData = data.data;\r\n                        for (let i = 0; i < this.spjlData.length; i++) {\r\n                            this.spjlData[i].xh = i + 1;\r\n                        }\r\n                    }\r\n                }, (data) => {\r\n                    reject(data);\r\n                });\r\n            });\r\n        },\r\n        // 获取线上审批流程类型\r\n        dOperateInitMultipleFlag() {\r\n            this.requestMultipleSplz().then((data) => {\r\n                if (data.code === '200') {\r\n                    this.isMultiple = data.data;\r\n                }\r\n            }, (data) => {\r\n                window.console.error(data);\r\n            });\r\n        },\r\n        // 保存(新建和更新)审批表数据 // 线上审批模态框确定按钮事件(保存类型，1：暂存；2：生成审批表,3:发起审批)\r\n        dOperateSaveTypeDefaultData(obj, type) {\r\n            return new Promise((resolve, reject) => {\r\n                this.requestSaveTypeDefaultData(obj, type).then((data) => {\r\n                    this.serverData.jbxx.cXsxx = 2;\r\n                    if (data.code === '200') {\r\n                        const _dataFlag = {flag: 'Xstjsp', message: 'shy-thsq'};\r\n                        const _data = JSON.stringify(_dataFlag);\r\n                        if (window.opener) {\r\n                            window.opener.parent.postMessage(_data, '*');\r\n                            window.parent.close();\r\n                        }\r\n                    } else if (data.code === '500') {\r\n                        window.Artery.message.error(data.message);\r\n                    }\r\n                }, (data) => {\r\n                    reject(data);\r\n                });\r\n            });\r\n        }\r\n    }\r\n};\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\n *@version 1.0.0\n *@author wanghuifeng\n *@createTime 2020/12/24- 10:57\n *@updateTime 2020/12/28 - 10:57\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\n @description  审批表主入口\n */\n// 其他\nimport popupCxx from '../cxx/index.vue';\n// 基本信息\nimport jbxx from './jbxx/index.vue';\n// 自然人\nimport zrr from './zrr/index.vue';\n// 机构\nimport jg from './jg/index.vue';\n// 其他\nimport other from './other/index.vue';\n// 导入查询对象\nimport importQueryObject from '../importQueryObject/index.vue';\n// 审批流转\nimport splz from '../splz/index.vue';\n\n/**\n *      方法集合\n **********************/\n// 数据\n// import treeList from './mock/treeList.js';\n// 全局事件\nimport globalEvent from './extend/globalEvent.js';\n// 处理数据模块\nimport dOperateData from './extend/dOperateData.js';\n// 全局方法模块\nimport globalMethods from './extend/globalMethods.js';\n// 绑定事件\nimport bindEvent from './extend/bindEvent.js';\n// 获取基本信息的默认的数据\nimport request from './request/request.js';\n\n// 导出模块\nexport default {\n    // 组件\n    components: {\n        // 查询项\n        popupCxx,\n        // 基本信息\n        jbxx,\n        // 自然人\n        zrr,\n        // 机构\n        jg,\n        // 其他\n        other,\n        // 导入查询对象\n        importQueryObject,\n        // 审批流转\n        splz\n    },\n    mixins: [globalEvent, dOperateData, globalMethods, bindEvent, request],\n    data() {\n        return {\n            // 是否显示日志\n            showLog: window.fdConfig.showLog,\n            // 判断是否显示【提交线上审批表【online】】或者【生成线下审批表【offline】\n            approvalMethodType: 'online'\n        };\n    },\n    computed: {\n        // 线上线下（1：线下 2：线上，0：所有）\n        // 点击审批流转弹窗的确认，点击生成线下审批表事件\n        cXsxx() {\n            return 0;\n        },\n        // 显示 【提交线上审批表】\n        showXsspb() {\n            return this.approvalMethodType === 'online' && this.cXsxx !== 1;\n        },\n        // 显示 【生成线下审批表】\n        showXxspb() {\n            return this.approvalMethodType === 'offline' && this.cXsxx !== 2;\n        }\n    },\n    created() {\n        // 初始化方法\n        this.init();\n    },\n    methods: {\n        // 初始化方法\n        init() {\n            // 处理初始化数据\n            // 如果存在编号\n            if (this.globalBus.commonUrlParams.cBh) {\n                // 1. 编辑页面时获取数据\n                this.dOperateInitEditData();\n            } else {\n                // 1. 处理初始化数据 【获取基本信息默认数据】\n                this.dOperateInitData();\n            }\n            // 2. 处理初始化数据 【获取审批流程类型】\n            this.dOperateInitApprovalMethodType();\n            // 3.绑定全局事件\n            this.bindEvent();\n        },\n\n        // 基本信息模块\n        readyJbxx(jbxxObject) {\n            this.jsJbxx = jbxxObject;\n        },\n\n        // 自然人模块\n        readyZrr(zrrObject) {\n            this.jsZrr = zrrObject;\n        },\n\n        // 企业/机构模块\n        readyJg(jgObject) {\n            this.jsJg = jgObject;\n        },\n\n        // 其他模块\n        readyQt(qtObject) {\n            this.jsQt = qtObject;\n        }\n    }\n};\n\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=601e318a&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('component-popup',{staticClass:\"fd-ac-spb-splz\",attrs:{\"title\":_vm.popupTitle,\"confirm\":_vm.popupConfirm},on:{\"cancel\":function($event){return _vm.clickCancel($event)},\"confirm\":function($event){return _vm.clickConfirm($event)}},model:{value:(_vm.popupStatus),callback:function ($$v) {_vm.popupStatus=$$v},expression:\"popupStatus\"}},[_c('div',{staticClass:\"fd-ac-spb-splz-content\"},[_c('div',{staticClass:\"fd-splz-div\"},[_c('div',{staticClass:\"fd-label\"},[_c('em',[_vm._v(\"*\")]),_vm._v(\"流转程序\")]),_vm._v(\" \"),_c('div',{staticClass:\"fd-xyhjspr-radio\",class:{active: _vm.currentSpr === '1'},on:{\"click\":function($event){return _vm.clickSpr('1')}}},[_vm._v(\"下一环节审批人\")]),_vm._v(\" \"),_c('div',{staticClass:\"fd-choise-spr fd-cxsqr-tree\"},[_c('div',{staticClass:\"fd-add-spr-div\",on:{\"click\":function($event){$event.stopPropagation();return _vm.xzsprInputFocus($event)}}},[_c('div',{staticClass:\"fd-add-spr-con\"},[_c('ul',{staticClass:\"fd-add-spr-width\",attrs:{\"id\":\"sprUl\"}},_vm._l((_vm.selectSprList),function(item,index){return _c('li',{key:index,staticClass:\"fd-add-spr-item\",class:{active: _vm.isMultiple}},[_c('span',[_vm._v(_vm._s(item.name))]),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isMultiple),expression:\"isMultiple\"}],staticClass:\"fd-add-spr-del\",on:{\"click\":function($event){$event.stopPropagation();return _vm.clickDelOnlySpr(item)}}})])}),0)]),_vm._v(\" \"),(_vm.selectedNum !== 0)?_c('span',{staticClass:\"fd-del-all-spr\",on:{\"click\":function($event){$event.stopPropagation();return _vm.deleteAllSpr($event)}}},[_vm._v(\"全部清除\")]):_vm._e(),_vm._v(\" \"),_c('span',{staticClass:\"fd-add-spr-btn\"},[_c('span',[_vm._v(\"+\")]),_vm._v(\"添加审批人\")])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowSprMenu),expression:\"isShowSprMenu\"}],staticClass:\"fd-spr-menu\"},[_c('div',{staticClass:\"fd-spr-menu-top\"},[_c('div',{staticClass:\"fd-spr-tab\"},[_c('span',{class:{active: _vm.isShowZzry},on:{\"click\":function($event){$event.stopPropagation();return _vm.clickZzryOrCyspr('1')}}},[_vm._v(\"组织人员\")]),_vm._v(\" \"),_c('span',{class:{active: !_vm.isShowZzry},on:{\"click\":function($event){$event.stopPropagation();return _vm.clickZzryOrCyspr('2')}}},[_vm._v(\"常用审批人\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"fd-choise-content\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isMultiple),expression:\"isMultiple\"}],staticClass:\"fd-user-tree\",class:{'fd-no-show-zzry': !_vm.isShowZzry}},[_c('aty-organ-tree',{ref:\"jsSplzTree\",attrs:{\"select-type\":\"user\",\"select-scope\":\"user-scope\",\"transfer\":\"\",\"show-icon\":\"\",\"navigation\":true,\"multiple\":\"\"},on:{\"change\":_vm.change},model:{value:(_vm.splzOrganTree),callback:function ($$v) {_vm.splzOrganTree=$$v},expression:\"splzOrganTree\"}})],1),_vm._v(\" \"),(!_vm.isMultiple)?_c('div',{staticClass:\"fd-user-tree\",class:{'fd-no-show-zzry': !_vm.isShowZzry}},[_c('aty-organ-tree',{ref:\"jsSplzTree\",attrs:{\"select-type\":\"user\",\"select-scope\":\"user-scope\",\"transfer\":\"\",\"show-icon\":\"\",\"navigation\":true},on:{\"select\":_vm.change},model:{value:(_vm.splzOrganTree),callback:function ($$v) {_vm.splzOrganTree=$$v},expression:\"splzOrganTree\"}})],1):_vm._e(),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isShowZzry),expression:\"!isShowZzry\"}],staticClass:\"fd-cyspr-ul-con\"},[_c('ul',{staticClass:\"fd-cyspr-ul\"},_vm._l((_vm.cysprList),function(item,index){return _c('li',{key:item.name + index,staticClass:\"fd-cyspr-li\",class:{single: !_vm.isMultiple}},[_c('span',{staticClass:\"fd-cyspr-span\",class:{active: item.selected},domProps:{\"textContent\":_vm._s(item.name)},on:{\"click\":function($event){$event.stopPropagation();return _vm.clickTitle(item)}}})])}),0)])]),_vm._v(\" \"),_c('div',{staticClass:\"fd-spr-menu-btn-div\",on:{\"click\":function($event){$event.stopPropagation();}}},[_c('p',[_vm._v(\"\\n                            已选\"),_c('span',[_vm._v(_vm._s(_vm.selectedNum))]),_vm._v(\"个\\n                        \")]),_vm._v(\" \"),_c('aty-button',{staticClass:\"fd-sure-btn\",attrs:{\"type\":\"primary\",\"text\":\"确定\"},on:{\"click\":_vm.closeSprMenu}})],1)])]),_vm._v(\" \"),_c('div',{staticClass:\"fd-endSp-radio fd-disabled-radio\"},[_vm._v(\"结束审批\")])]),_vm._v(\" \"),_c('div',{staticClass:\"fd-spjl-table\"},[_c('div',{staticClass:\"fd-label\"},[_vm._v(\"审批记录\")]),_vm._v(\" \"),_c('div',{staticClass:\"fd-table-scroll\"},[_c('aty-table',{staticClass:\"fd-basic-table\",attrs:{\"border\":\"\",\"pageable-data\":_vm.spjlData}},[_c('aty-table-column',{attrs:{\"prop\":\"xh\",\"label\":\"序号\",\"width\":\"100\"}}),_vm._v(\" \"),_c('aty-table-column',{attrs:{\"prop\":\"spzt\",\"label\":\"状态\"}}),_vm._v(\" \"),_c('aty-table-column',{attrs:{\"prop\":\"cshrxm\",\"label\":\"审批人\",\"width\":\"90\"}}),_vm._v(\" \"),_c('aty-table-column',{attrs:{\"prop\":\"nztname\",\"label\":\"审批结论\",\"width\":\"100\"}}),_vm._v(\" \"),_c('aty-table-column',{attrs:{\"prop\":\"cbtgyy\",\"label\":\"审批意见\"}}),_vm._v(\" \"),_c('aty-table-column',{attrs:{\"prop\":\"dtshsj\",\"label\":\"审批时间\"}})],1)],1)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020/12/24 - 10:57\r\n *@updateTime 2020/12/28 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description 全局事件模块\r\n */\r\nexport default {\r\n    created() {\r\n        // 绑定全局事件\r\n        this.bindGlobalEvent();\r\n    },\r\n    beforeDestroy() {\r\n        // 取消全局事件\r\n        this.unbindGlobalEvent();\r\n    },\r\n    methods: {\r\n        // 绑定全局事件\r\n        bindGlobalEvent() {\r\n            // 绑定设置当前选中节点信息\r\n            this.globalBus.$on('global-spb-invalid', this.gInvalidHandler);\r\n        },\r\n        // 取消全局事件\r\n        unbindGlobalEvent() {\r\n            // 取消绑定设置当前选中节点信息\r\n            this.globalBus.$off('global-spb-invalid', this.gInvalidHandler);\r\n        },\r\n        // 触发全局事件\r\n        emitGlobalEvent(callback) {\r\n            if (this.globalBus) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\n * @version 20201226\n * @author wanghuifeng\n * @createTime  20201226\n * @updateTime  20201226\n *@namespace  dm   d:data   数据处理\n */\nexport default {\n    data() {\n        return {};\n    },\n    computed: {\n        // 是否是编辑\n        isEdit() {\n            return Boolean(this.globalBus.commonUrlParams.cBh);\n        },\n        // 当前的编号\n        cBh() {\n            return this.globalBus.commonUrlParams.cBh;\n        }\n    },\n    methods: {\n        // 拼接【查询人联系电话】cMobilePhone + cTelephone\n        operateCxrlxdh(data) {\n            if (data.cTelephone && data.cMobilePhone) {\n                data.cLxfs = `${data.cMobilePhone}/${data.cTelephone}`;\n            } else {\n                data.cLxfs = (data.cMobilePhone === null ? '' : data.cMobilePhone) + (data.cTelephone === null ? '' : data.cTelephone);\n            }\n            return data;\n        },\n        // 触发模块数据的更新\n        dEmitUpdateModuleData(data, clearOriginData = true) {\n            // 1. 触发事件\n            this.emitGlobalEvent(() => {\n                // 1.触发【基本信息】值的更新\n                this.globalBus.$emit('global-spb-jbxx-setQueryData', data.jbxx, clearOriginData);\n                // 2.触发【自然人】值的更新\n                this.globalBus.$emit('global-spb-zrr-setQueryData', data.cxZrrList, clearOriginData);\n                // 3.触发【企业/机构】值的更新\n                this.globalBus.$emit('global-spb-jg-setQueryData', data.cxDwList, clearOriginData);\n                // 4.触发【其他】值的更新\n                this.globalBus.$emit('global-spb-qt-setQueryData', data.cxOtherList, clearOriginData);\n            });\n        },\n\n        // 编辑页面时获取数据\n        dOperateInitEditData() {\n            const paramsCbh = {cBh: this.cBh};\n            //  请求默认数据\n            this.requestEditDefaultData(paramsCbh)\n                .then((serverData) => {\n                    this.reFreshOtherList(serverData.data.cxOtherList);\n                    // 触发模块数据的更新\n                    this.dEmitUpdateModuleData(serverData.data);\n                }, function (data) {\n                    // 请求数据报错\n                    window.console.error(data);\n                });\n        },\n\n        // 新建页面处理初始化数据\n        dOperateInitData() {\n            //  请求默认数据\n            this.requestDefaultData()\n                .then((serverData) => {\n                    // 1. 拼接【查询人联系电话】cMobilePhone + cTelephone\n                    this.operateCxrlxdh(serverData.data);\n                    // 2. 触发事件\n                    this.emitGlobalEvent(() => {\n                        // 1.触发基本信息值的更新\n                        this.globalBus.$emit('global-spb-jbxx-setQueryData', serverData.data);\n                    });\n                }, function (data) {\n                    // 请求数据报错\n                    window.console.error(data);\n                });\n        },\n\n        // 处理初始化数据【获取审批流程类型】\n        dOperateInitApprovalMethodType() {\n            //  请求默认数据\n            this.requestApprovalMethodType()\n                .then((serverData) => {\n                    this.approvalMethodType = serverData.data;\n                    // 如果是在线的话，需要处理【审批记录信息】\n                    if (serverData.data === 'online') {\n                        // 处理【审批记录信息】\n                        this.dOperateSpjlByCbh();\n                    }\n                }, function (data) {\n                    // 请求数据报错\n                    window.console.error(data);\n                });\n        },\n\n        // 处理【审批记录信息】，\n        // 在编辑情况下，根据jbxx的主键获取 c_cxh，再根据 c_cxh 来获取【审批记录信息】\n        dOperateSpjlByCbh() {\n            if (this.isEdit) {\n                const params = {\n                    // 浏览器地址栏的cBh,截取浏览器的参数\n                    cId: this.cBh\n                };\n                // 请求【审批记录信息】，\n                this.requestGetShjlByJbxxCid(params)\n                    .then((serverData) => {\n                        // 审批流转的数据\n                        this.spjlData = serverData;\n                    }, function (data) {\n                        // 请求数据报错\n                        window.console.error(data);\n                    });\n            }\n        },\n\n        //  获取数据\n        dGetSpbData() {\n            // 各个模块的数据\n            return {\n                cBh: this.globalBus.commonUrlParams.cBh,\n                // 基本信息\n                jbxx: this.jsJbxx.getQueryData(),\n                // 自然人数据列表\n                cxZrrList: this.jsZrr.getQueryData(),\n                // 企业机构数据列表\n                cxDwList: this.jsJg.getQueryData(),\n                // 其他数据列表\n                cxOtherList: this.jsQt.getQueryData()\n            };\n        },\n\n        // 获取所有查询对象的数据长度\n        dGetSpbDataListSize() {\n            // 获取【自然人数据列表长度】 + 【企业机构数据列表】 + 【其他数据列表】的总和\n            return this.jsZrr.getDataListSize() + this.jsJg.getDataListSize() + this.jsQt.getDataListSize();\n        },\n\n        // 保存的操作\n        dOperateSave() {\n            // 获取数据\n            const _data = this.dGetSpbData();\n            // 请求保存接口，进行保存\n            this.requestSave(_data, 'save')\n                .then((data) => {\n                    if (data.code === '200') {\n                        // 刷新左侧退回生数字\n                        let pMessage = {message: 'shy-thsq'};\n                        window.opener.parent.postMessage(pMessage, '*');\n                        //  1.更新页面数据\n                        this.dUpdatePageData(data.data, _data);\n                        //  2.保存成功后的处理函数 ， 好像没啥用！ 干什么的？？ 20210127-wuwg\n                        this.dSaveOperateHandler(_data);\n                        // 3.提示\n                        this.gShowMessage('保存成功!', 'success');\n                    } else if (data.code === '500') {\n                        // 提示错误\n                        this.gShowMessage(data.message);\n                    }\n                }, () => {\n                    // 提示\n                    this.gShowMessage('保存失败，请重新保存!');\n                });\n        },\n        // 更新页面数据\n        dUpdatePageData(_serverData, _data) {\n            // 编号更新（目前没有用，cBh开发都是从jbxx中去获取处理的）@todo 20210129 wanghuifeng\n            _data.cBh = _serverData.cBh;\n            // 四个模块数据更新\n            // 基本信息\n            // 编号更新(用于处理多次点击生成审批表，将生成多个查询号、多个审批表)\n            _data.jbxx.cBh = _serverData.cBh;\n            // 查询标识\n            _data.jbxx.cCxbs = _serverData.cCxbs;\n            // 查询号\n            _data.jbxx.cCxh = _serverData.cCxh;\n            // 状态（生成审批表）数据状态（打印，非打印） 大致19种\n            _data.jbxx.nZt = _serverData.zt;\n            // 三大对象列表\n            _data.cxDwList = _serverData.data.cxDwList;\n            _data.cxOtherList = _serverData.data.cxOtherList;\n            _data.cxZrrList = _serverData.data.cxZrrList;\n            this.reFreshOtherList(_data.cxOtherList);\n            // 触发模块数据的更新\n            this.dEmitUpdateModuleData(_data);\n        },\n\n        // 刷新查询申请列表数据\n        dSaveOperateHandler(data) { // eslint-disable-line\n            try {\n                // 点击生成审批表\n                // 定义需要传递过去的数据\n                const dataBj = {\n                    flag: 'scspb',\n                    message: 'shy-thsq',\n                    _data: {}\n                };\n                const _dataParams = JSON.stringify(dataBj);\n                window.opener.parent.postMessage(_dataParams, '*');\n            } catch (e) {\n                // e\n            }\n        },\n\n        // 【自然人】|【机构】|【其他】三个模块中必须有一个模块填写了数据，才能进行线上审批\n        dOperateAdjustExistValueTjxsspb() {\n            // 【自然人】|【机构】|【其他】三个模块中必须有一个模块填写了数据，才能进行线上审批\n            if (\n                // 判断自然人模块【是否存在数据】\n                this.jsZrr.adjustExistValue() ||\n                // 判断企业/机构模块【是否存在数据】\n                this.jsJg.adjustExistValue() ||\n                // 判断其他模块【是否存在数据】\n                this.jsQt.adjustExistValue()\n            ) {\n                // 传递自然人，机构，其他模块，用于审批流转弹层点击确定按钮的操作数据\n                const _data = this.dGetSpbData();\n                // 1.触发事件\n                this.emitGlobalEvent(() => {\n                    // 发送全局事件\n                    this.globalBus.$emit('global-spb-splz-show', _data);\n                });\n            } else {\n                // 定位到第一个查询对象元素\n                this.gGoToFirstCxdxElement();\n                // 提示\n                this.gShowMessage('提交审批表失败，请填写至少一条调查对象数据');\n            }\n        },\n\n        // 处理【提交线上审批表】\n        dOperateTjxsspb() {\n            // 1. 先验证必填项\n            Promise.all([\n                // 1.基本信息模块验证\n                this.jsJbxx.validate(),\n                // 2.自然人模块验证\n                this.jsZrr.validate(),\n                // 3.企业/机构模块验证\n                this.jsJg.validate(),\n                // 4.其他模块验证\n                this.jsQt.validate()\n            ])\n                .then(() => {\n                    // 【自然人】|【机构】|【其他】三个模块中必须有一个模块填写了数据，才能进行线上审批\n                    this.dOperateAdjustExistValueTjxsspb();\n                }, () => {\n                    // 定位到第一个报错元素\n                    this.gGoToFirstErrorElement();\n                    // 提示\n                    this.gShowMessage('提交审批表失败!');\n                });\n        },\n\n        // 【自然人】|【机构】|【其他】三个模块中必须有一个模块填写了数据，才能进行线上审批\n        dOperateAdjustExistValueScxxspb() {\n            // 【自然人】|【机构】|【其他】三个模块中必须有一个模块填写了数据，才能进行线上审批\n            if (\n                // 判断自然人模块【是否存在数据】\n                this.jsZrr.adjustExistValue() ||\n                // 判断企业/机构模块【是否存在数据】\n                this.jsJg.adjustExistValue() ||\n                // 判断其他模块【是否存在数据】\n                this.jsQt.adjustExistValue()\n            ) {\n                // 请求保存接口\n                this.dOperateSaveAjax();\n            } else {\n                // 定位到第一个查询对象元素\n                this.gGoToFirstCxdxElement();\n                // 提示\n                this.gShowMessage('生成审批表失败，请填写至少一条调查对象数据!');\n            }\n        },\n\n        // 请求保存接口\n        dOperateSaveAjax() {\n            // 获取数据\n            const _data = this.dGetSpbData();\n            return new Promise((resolve, reject) => {\n                // 请求保存接口，进行保存\n                this.requestSave(_data, 'create')\n                    .then((data) => {\n                        if (data.code === '200') {\n                            // 1.更新页面数据\n                            this.dUpdatePageData(data.data, _data);\n                            // 2. 打开审批表\n                            this.openSpb(_data);\n                        } else if (data.code === '500') {\n                            // 提示错误\n                            this.gShowMessage(data.message);\n                        }\n                    }, (data) => {\n                        reject(data);\n                    });\n            });\n        },\n\n        // 打开审批表\n        openSpb(data) {\n            // const newWin = window.open('about:blank');\n            try {\n                // 点击生成审批表\n                // 定义需要传递过去的数据\n                const dataBj = {\n                    flag: 'scspb',\n                    message: 'shy-thsq',\n                    _data: {}\n                };\n                const _dataParams = JSON.stringify(dataBj);\n                window.opener.parent.postMessage(_dataParams, '*');\n            } catch (e) {\n                // e\n            }\n            // 用artery.open浏览器会拦截\n            // 查看审批表\n            // http://localhost:8081/ydxc_xcyw_spglxt/pages/dfxc/approval/cgdyyl/index.html?cBh=ce1a74b2ca364846b11e174aef3fd77e#\n            window.location.href = `${window.serverConfig.ckSpbUrl}?cBh=${data.cBh}`;\n        },\n        // 设置重复标识\n        dSetRepeatFlag(flag) {\n            this.dRepeatFlag = flag;\n        },\n        // 处理【生成线下审批表】\n        dOperateScxxspb() {\n            const _this = this;\n            // 设置重复标识为false\n            this.dSetRepeatFlag(false);\n            // 1. 先验证必填项\n            Promise.all([\n                // 1.基本信息模块验证\n                this.jsJbxx.validate(),\n                // 2.自然人模块验证\n                this.jsZrr.validate(),\n                // 3.企业/机构模块验证\n                this.jsJg.validate(),\n                // 4.其他模块验证\n                this.jsQt.validate()\n            ])\n                .then(() => {\n                    // 如果重复\n                    if (this.dRepeatFlag) {\n                        this.$Alert.confirm({\n                            className: 'fd-alert-confirm-xx-ts',\n                            // 弹出层标题\n                            title: '消息提示',\n                            // 弹出层标题\n                            content: '含有重复录入的证件号码或查询值，是否继续生成审批表？',\n                            confirm: {\n                                show: true,\n                                text: '继续',\n                                callback() {\n                                    window.console.log('点击了确定');\n                                    // 【自然人】|【机构】|【其他】三个模块中必须有一个模块填写了数据，才能进行线上审批\n                                    _this.dOperateAdjustExistValueScxxspb();\n                                }\n                            },\n                            // 显示取消\n                            cancel: {\n                                show: true,\n                                text: '修改',\n                                callback() {\n                                    window.console.log('点击了取消');\n                                }\n                            }\n                        });\n                    } else {\n                        // 【自然人】|【机构】|【其他】三个模块中必须有一个模块填写了数据，才能进行线上审批\n                        this.dOperateAdjustExistValueScxxspb();\n                    }\n                }, () => {\n                    // 定位到第一个报错元素\n                    this.gGoToFirstErrorElement();\n                    // 提示\n                    this.gShowMessage('生成审批表失败！');\n                });\n        },\n        reFreshOtherList(otherList){\n            if(otherList){\n                otherList.forEach(item => {\n                    if(item.cxlx == '07' || item.cxlx == '09'){\n                        item.isDisabled = true;\n                        item.mustSetcName = false\n                        item.mustSetnZj = false\n                        item.mustSetcGbglqx = false\n                        item.isNotHmsslb = true\n                        item.isNotZrr = true\n                        item.mustSethmsslb = false\n                        item.hmsslb = ''\n                    }else{\n                        item.isDisabled = false;\n                        item.isNotHmsslb = false\n                    }\n                    if(item.hmsslb){\n                        item.mustSethmsslb = false;\n                    }\n                    if(item.hmsslb==999){\n                        item.isDisabled = true\n                        item.cName = ''\n                        item.nZj = ''\n                        item.cGbglqx = ''\n                        item.isNotZrr = true\n                        item.mustSetcName = false\n                        item.mustSetnZj = false\n                        item.mustSetcGbglqx = false\n                    }else if(item.hmsslb==1){\n                        item.isDisabled = false\n                        item.isNotZrr = false\n                    }else if(item.hmsslb==2){\n                        item.isDisabled = false\n                        item.nZj = ''\n                        item.cGbglqx = ''\n                        item.isNotZrr = true\n                        item.mustSetnZj = false\n                        item.mustSetcGbglqx = false\n                    }\n                });\n\n            }\n        }\n    }\n};\n\n","/**\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020/12/24 - 10:57\r\n *@updateTime 2020/12/28 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n *@namespace    g  ：  global\r\n @description 全局事件模块\r\n */\r\nexport default {\r\n    methods: {\r\n        // 点击下载查询对象模版\r\n        gGownloadTemplate() {\r\n            const id = 'downloadFrame';\r\n            let frame = document.getElementById(id);\r\n            if (!frame) {\r\n                frame = document.createElement('iframe');\r\n                frame.id = id;\r\n                frame.width = '0px';\r\n                frame.height = '0px';\r\n                document.body.appendChild(frame);\r\n            }\r\n            frame.src = window.serverConfig.xzCxdxMb;\r\n        },\r\n        // 定位到第一个报错元素\r\n        gGoToFirstErrorElement() {\r\n            // 先获取所有报错元素的列表\r\n            const _elementList = document.querySelectorAll('.error, .invalid, .repeat,.fd-must-set.required');\r\n            // 取第一个报错元素\r\n            const _element = _elementList[0];\r\n            // 滚动条容器元素\r\n            const _scrollContain = document.querySelector('.fd-page-spb');\r\n            // 判断是否存在报错元素\r\n            if (_element) {\r\n                // 设置滚动条的位置\r\n                window.fdGlobal.setScrollBarPosition(_element, _scrollContain);\r\n            }\r\n        },\r\n        // 定位到第一个查询对象\r\n        gGoToFirstCxdxElement() {\r\n            // 取第一个查询对象元素\r\n            const _element = document.querySelector('.fd-ac-spb-zrr');\r\n            // 滚动条容器元素\r\n            const _scrollContain = document.querySelector('.fd-page-spb');\r\n            // 判断是否存在元素\r\n            if (_element) {\r\n                // 设置滚动条的位置\r\n                window.fdGlobal.setScrollBarPosition(_element, _scrollContain);\r\n            }\r\n        },\r\n        // 显示提示\r\n        gShowMessage(info, type = 'error', duration = 5) {\r\n            // 隐藏其他提示\r\n            this.gHideMessage();\r\n            // 当前的消息\r\n            this.gMessage = window.Artery.message[type]({\r\n                content: info,\r\n                duration: duration\r\n            });\r\n        },\r\n        // 隐藏提示\r\n        gHideMessage() {\r\n            if (typeof this.gMessage === 'function') {\r\n                this.gMessage();\r\n            }\r\n        },\r\n        // 点击body的处理函数\r\n        gBodyClickHandler(event) {\r\n            // 如果是点击消息的蒙版，那么就隐藏提示消息\r\n            if (event.target.classList.contains('aty-message')) {\r\n                // 隐藏全局提示\r\n                this.gHideMessage();\r\n            }\r\n        },\r\n        // 无效的处理函数\r\n        gInvalidHandler(message, type = 'error', duration = 5) {\r\n            // 显示提示\r\n            this.gShowMessage(message, type, duration);\r\n        }\r\n    }\r\n};\r\n\r\n","/**\r\n * @version 20121224\r\n * @author wanghuifeng\r\n * @createTime  20201224\r\n * @updateTime  20201228\r\n * @namespace    e  ：  event\r\n * @decription  树组件绑定事件\r\n */\r\n// 当前模块\r\nexport default {\r\n    beforeDestroy() {\r\n        // 取消事件绑定\r\n        this.unbindEvent();\r\n    },\r\n    methods: {\r\n        // 点击保存\r\n        eClickSave() {\r\n            // 处理[保存]\r\n            this.dOperateSave();\r\n        },\r\n        // 提交线上审批表\r\n        eClickTjxsspb() {\r\n            // 1. 处理[提交线上审批表]\r\n            this.dOperateTjxsspb();\r\n        },\r\n        // 点击 【生成线下审批表】\r\n        eClickScxxspb() {\r\n            // 处理[生成线下审批表]\r\n            this.dOperateScxxspb();\r\n        },\r\n        // 导入查询对象\r\n        eClickDrcxdx() {\r\n            // 1.触发事件\r\n            this.emitGlobalEvent(() => {\r\n                // 发送全局事件\r\n                this.globalBus.$emit('global-spb-drcxdx-show', this.globalBus.commonUrlParams.cBh);\r\n            });\r\n        },\r\n        // 点击下载查询对象模版\r\n        eClickdownloadTemplate() {\r\n            this.gGownloadTemplate();\r\n        },\r\n        // 绑定事件\r\n        bindEvent() {\r\n            window.fdGlobal.on(document.body, 'click', this.gBodyClickHandler);\r\n        },\r\n        // 取消绑定事件\r\n        unbindEvent() {\r\n            window.fdGlobal.off(document.body, 'click', this.gBodyClickHandler);\r\n        }\r\n    }\r\n};\r\n","/**\r\n *@file request\r\n *@version 1.0.1\r\n *@author wanghuifeng\r\n *@createTime 2020/12/28 - 11:03\r\n *@updateTime 2020/12/28 - 11:03\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  阅卷目录request （请求）相关\r\n @namespace  request   请求相关，后面加模块名\r\n 名字解释：\r\n _name ： 用 【模块名】 => 【子模块名】\r\n _method ： 请求的方法\r\n _showLog：  是否显示日志\r\n _url : 请求的url\r\n _data : 请求所需要的数据， 需要的参数名，全部在这里写好， 可以通过传参给对象赋值！\r\n _serverData : 服务器返回的数据\r\n\r\n 请求：\r\n 1. fd工程结构中自带此全局方法\r\n window.fdGlobal.ajax\r\n 2.可以单独使用\r\n axios\r\n\r\n 请求必须输出日志：\r\n 1. 请求日志\r\n window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n 2. 响应日志\r\n window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n\r\n ！important\r\n 请求函数返回一个promise,\r\n 为了性能需要，咱们需要内置性能日志！\r\n 按照以下结构编写即可！\r\n 以下是一个实际案例， 【请求模块】可以通过混入的方式，引入到组件的index.js 中\r\n\r\n request ：为命名空间\r\n TreeData：  为模块名\r\n showLog ： 在组件的 index.js  的data中写好，  如：{showLog: window.fdConfig.url.showLog}, 全局控制日志！\r\n\r\n\r\n */\r\nexport default {\r\n    methods: {\r\n        // 请求【审批表】=> 【获取基本信息默认数据】\r\n        requestDefaultData() {\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal.performance.getCurrentTime();\r\n            return new Promise((resolve, reject) => {\r\n                const _showLog = this.showLog;\r\n                const _name = '【审批表】=> 【获取基本信息默认数据】';\r\n                const _method = window.fdConfig.methodGet;\r\n                const _url = `${window.fdConfig.url.spb.getDefaultData}?${new Date().getTime()}`;\r\n                const _data = {};\r\n                // 输出日志\r\n                window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n                //  返回shuju\r\n                window.fdGlobal.ajax({\r\n                    method: _method,\r\n                    url: _url,\r\n                    // URL参数\r\n                    // 必须是一个纯对象或者 URL参数对象\r\n                    params: _data,\r\n                    // 默认值是json\r\n                    responseType: 'json'\r\n                })\r\n                    .then((data) => {\r\n                        const _serverData = data.data;\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        resolve(_serverData);\r\n                    }, (data) => {\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                        const _serverData = data.data;\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        reject(data);\r\n                    });\r\n            });\r\n        },\r\n        // 请求【审批表】=> 【获取审批流程类型】\r\n        requestApprovalMethodType() {\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal.performance.getCurrentTime();\r\n            return new Promise((resolve, reject) => {\r\n                const _showLog = this.showLog;\r\n                const _name = '【审批表】=> 【获取审批流程类型】';\r\n                const _method = window.fdConfig.methodGet;\r\n                const _url = `${window.fdConfig.url.spb.approvalMethodType}`;\r\n                const _data = {};\r\n                // 输出日志\r\n                window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n                //  返回shuju\r\n                window.fdGlobal.ajax({\r\n                    method: _method,\r\n                    url: _url,\r\n                    // URL参数\r\n                    // 必须是一个纯对象或者 URL参数对象\r\n                    params: _data,\r\n                    // 默认值是json\r\n                    responseType: 'json'\r\n                })\r\n                    .then((data) => {\r\n                        const _serverData = data.data;\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        resolve(_serverData);\r\n                    }, (data) => {\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                        const _serverData = data.data;\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        reject(data);\r\n                    });\r\n            });\r\n        },\r\n        // 请求【审批表】=> 【获取审批记录信息】\r\n        requestGetShjlByJbxxCid(params) {\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal.performance.getCurrentTime();\r\n            return new Promise((resolve, reject) => {\r\n                const _showLog = this.showLog;\r\n                // 在编辑情况下，根据jbxx的主键获取c_cxh，再根据c_cxh来获取审批记录信息\r\n                const _name = '【审批表】=> 【获取审批记录信息】';\r\n                const _method = window.fdConfig.methodGet;\r\n                const _url = `${window.fdConfig.url.spb.getShjlByJbxxCid}`;\r\n                const _data = {\r\n                    // 当前系统的编号\r\n                    cId: params.cId\r\n                };\r\n                // 输出日志\r\n                window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n                //  返回shuju\r\n                window.fdGlobal.ajax({\r\n                    method: _method,\r\n                    url: _url,\r\n                    // URL参数\r\n                    // 必须是一个纯对象或者 URL参数对象\r\n                    params: _data,\r\n                    // 默认值是json\r\n                    responseType: 'json'\r\n                })\r\n                    .then((data) => {\r\n                        const _serverData = data.data;\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        resolve(_serverData);\r\n                    }, (data) => {\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                        const _serverData = data.data;\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        reject(data);\r\n                    });\r\n            });\r\n        },\r\n        // 请求【审批表】=> 【保存审批表信息】\r\n        requestSave(dataParams, type) {\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal.performance.getCurrentTime();\r\n            return new Promise((resolve, reject) => {\r\n                const _showLog = this.showLog;\r\n                const _name = '【审批表】=> 【保存审批表信息】';\r\n                const _method = window.fdConfig.methodPost;\r\n                //  saveType保存类型\r\n                const _url = window.fdConfig.isDebug ? window.fdConfig.url.spb.saveType : window.fdConfig.url.spb.saveType + (type === 'save' ? '1' : '2');\r\n                // 需要发到后端去的数据\r\n                const _data = {\r\n                    // 当前编号\r\n                    cBh: dataParams.cBh,\r\n                    // 当前状态\r\n                    nZt:  dataParams.nZt,\r\n                    // 查询标识\r\n                    cCxbs: dataParams.cCxbs,\r\n                    // 基本信息\r\n                    tjbxx: dataParams.jbxx,\r\n                    // 自然人数据列表\r\n                    cxZrrList: dataParams.cxZrrList,\r\n                    // 企业机构数据列表\r\n                    cxDwList: dataParams.cxDwList,\r\n                    // 其他数据列表\r\n                    cxOtherList: dataParams.cxOtherList\r\n                };\r\n                // 输出日志\r\n                window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n                //  返回shuju\r\n                window.fdGlobal.ajax({\r\n                    method: _method,\r\n                    url: _url,\r\n                    // URL参数\r\n                    // 必须是一个纯对象或者 URL参数对象\r\n                    data: _data,\r\n                    // 默认值是json\r\n                    responseType: 'json'\r\n                })\r\n                    .then((data) => {\r\n                        const _serverData = data.data;\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        resolve(_serverData);\r\n                    }, (data) => {\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                        const _serverData = data.data;\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        reject(data);\r\n                    });\r\n            });\r\n        },\r\n        // 请求【审批表】=> 【编辑】【获取基本信息默认数据】\r\n        requestEditDefaultData(params) {\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal.performance.getCurrentTime();\r\n            return new Promise((resolve, reject) => {\r\n                const _showLog = this.showLog;\r\n                const _name = '请求【审批表】=> 【编辑】【获取基本信息默认数据】';\r\n                const _method = window.fdConfig.methodGet;\r\n                // http://localhost:8081/api/spd/forms/be0de08eba824145b9a56bb55891a999\r\n                const _url = window.fdConfig.isDebug ? window.fdConfig.url.spb.getSpbData : window.fdConfig.url.spb.getSpbData + params.cBh;\r\n                const _data = {};\r\n                // 输出日志\r\n                window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n                //  返回shuju\r\n                window.fdGlobal.ajax({\r\n                    method: _method,\r\n                    url: _url,\r\n                    // URL参数\r\n                    // 必须是一个纯对象或者 URL参数对象\r\n                    params: _data,\r\n                    // 默认值是json\r\n                    responseType: 'json'\r\n                })\r\n                    .then((data) => {\r\n                        const _serverData = data.data;\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        resolve(_serverData);\r\n                    }, (data) => {\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                        const _serverData = data.data;\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                        reject(data);\r\n                    });\r\n            });\r\n        }\r\n    }\r\n};\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\r\n * @version 1.0.1\r\n * @author wanghuifeng  <wuwg@thunisoft.com>\r\n * @createTime:2020-12-24,\r\n * @updateTime:2020-12-26\r\n * @copyright thunisoft fd\r\n * @description  *  [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n *  [jsdoc-vuejs]{@link  http://npm.taobao.org/package/jsdoc-vuejs}  -\r\n *  [个人博客]{@link  http://www.wuweigang.com}\r\n */\r\nimport moduleSpb from '@/components/app/module-spb/main/index.vue';\r\n// 导出模块\r\nexport default {\r\n    name: 'page-spb',\r\n    components: {moduleSpb},\r\n    data() {\r\n        return {};\r\n    },\r\n    //  vm创建后调用该函数\r\n    created: function () {\r\n        // 获取信息\r\n    }\r\n};\r\n\r\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=7cc22db7&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fd-ac-spb-main\"},[_c('header',{staticClass:\"fd-ac-spb-header\"},[_c('h3',{staticClass:\"fd-title\"},[_vm._v(\"信息查询审批表\")]),_vm._v(\" \"),_c('jbxx',{on:{\"ready\":_vm.readyJbxx,\"invalid\":_vm.gInvalidHandler}})],1),_vm._v(\" \"),_c('main',{staticClass:\"fd-ac-spb-content\"},[_c('header',{staticClass:\"fd-content-header\"},[_c('h3',{staticClass:\"fd-title\"},[_vm._v(\"—— 被查询对象 ——\")]),_vm._v(\" \"),_c('div',{staticClass:\"fd-button-group\"},[_c('aty-button',{staticClass:\"download\",on:{\"click\":_vm.eClickdownloadTemplate}},[_vm._v(\"下载查询对象模版\")]),_vm._v(\" \"),_c('aty-button',{staticClass:\"import\",on:{\"click\":_vm.eClickDrcxdx}},[_vm._v(\"导入查询对象\")])],1),_vm._v(\" \"),_c('p',{staticClass:\"fd-xjspd-cxdx-num\"})]),_vm._v(\" \"),_c('zrr',{ref:\"jsZrr\",on:{\"ready\":_vm.readyZrr,\"repeat\":_vm.dSetRepeatFlag,\"invalid\":_vm.gInvalidHandler}}),_vm._v(\" \"),_c('jg',{ref:\"jsJg\",on:{\"ready\":_vm.readyJg,\"invalid\":_vm.gInvalidHandler}}),_vm._v(\" \"),_c('other',{ref:\"jsQt\",on:{\"ready\":_vm.readyQt,\"repeat\":_vm.dSetRepeatFlag,\"invalid\":_vm.gInvalidHandler}})],1),_vm._v(\" \"),_c('footer',{staticClass:\"fd-ac-spb-footer\"},[_c('div',{staticClass:\"fd-btn-group-operate\"},[_c('aty-button',{staticClass:\"save\",on:{\"click\":_vm.eClickSave}},[_vm._v(\"保存\")]),_vm._v(\" \"),_c('aty-button',{staticClass:\"primary\",on:{\"click\":_vm.eClickScxxspb}},[_vm._v(\"生成审批表\")])],1)]),_vm._v(\" \"),_c('popupCxx'),_vm._v(\" \"),_c('importQueryObject'),_vm._v(\" \"),_c('splz')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=7c5c2b84&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"fd-page-spb\"},[_c('div',{staticClass:\"fd-page-spb-in\"},[_c('moduleSpb')],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Vue from 'vue';\r\nimport Router from 'vue-router';\r\nimport pageUnit from '@/pages/page-unit/index.vue';\r\nimport pageSpb from '@/pages/page-spb/index.vue';\r\n// 查询项\r\nimport pageCxx from '@/components/app/module-spb/cxx/index.vue';\r\n// 测试界面\r\nconst pageTest = {\r\n    components: {pageCxx: pageCxx},\r\n    template: '<pageCxx showCxx></pageCxx>'\r\n};\r\n// 使用路由\r\nVue.use(Router);\r\n// 导出路由模块\r\nexport default new Router({\r\n    routes: [\r\n        {\r\n            path: '/',\r\n            redirect: 'spb'\r\n        },\r\n        {\r\n            path: '/unit',\r\n            name: 'pageUnit',\r\n            component: pageUnit\r\n        },\r\n        {\r\n            path: '/test',\r\n            name: 'pageTest',\r\n            component: pageTest\r\n        },\r\n        {\r\n            path: '/spb',\r\n            name: 'pageSpb',\r\n            component: pageSpb\r\n        }\r\n    ]\r\n});\r\n","/**\r\n * @file component-config\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @createTime  2019-08-13\r\n * @updateTime  2019-08-13\r\n * @copyright thunisoft fd\r\n * @see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n * @description  组件的配置文件\r\n */\r\nexport default {\r\n    name: 'config',\r\n    // 公用组件前缀\r\n    componentCcPrefix:'cc',\r\n    // 公用业务组件前缀\r\n    componentAcPrefix:'ac',\r\n    // class模块前缀\r\n    classPrefix:'fd'\r\n};\r\n","/**\r\n * @namespace  global\r\n *  全局事件命名规则必须是 global+moduleName +  children moduleName\r\n *\r\n * 存在globalEventBus的数据，命名必须 以  common 开头，代表通用。\r\n *\r\n */\r\nimport Vue from 'vue';\r\n// 全局的eventBus\r\nexport default new Vue({\r\n    data() {\r\n        return {\r\n            // 全局的url参数配置\r\n            commonUrlParams: {\r\n                // 当前编号\r\n                cBh: '',\r\n                // 数据状态（打印，非打印） 大致19种\r\n                nZt: -1,\r\n                // 查询标识\r\n                cCxbs:''\r\n            },\r\n            // 当前的用户信息\r\n            commonUserInfo: {}\r\n        };\r\n    },\r\n    created() {\r\n        // 绑定全局事件\r\n        this.bindGlobalEvent();\r\n    },\r\n    beforeDestroy() {\r\n        // 取消全局事件\r\n        this.unbindGlobalEvent();\r\n    },\r\n    methods: {\r\n        // 设置全局的url参数配置\r\n        setCommonUrlParams(commonUrlParams) {\r\n            // 全局的url参数配置\r\n            this.commonUrlParams = commonUrlParams;\r\n        },\r\n        // 设置用户信息\r\n        setCommonUserInfo(commonUserInfo) {\r\n            // 当前的用户信息\r\n            this.commonUserInfo = commonUserInfo;\r\n        },\r\n        // 绑定全局事件\r\n        bindGlobalEvent() {\r\n            // 绑定设置当前选中节点信息\r\n            this.$on('global-common-urlParams', this.setCommonUrlParams);\r\n            // 绑定设置用户信息\r\n            this.$on('global-common-userInfo', this.setCommonUserInfo);\r\n        },\r\n        // 取消全局事件\r\n        unbindGlobalEvent() {\r\n            // 取消绑定设置当前选中节点信息\r\n            this.$off('global-common-urlParams', this.setCommonUrlParams);\r\n            // 取消绑定设置用户信息\r\n            this.$off('global-common-userInfo', this.setCommonUserInfo);\r\n        }\r\n    }\r\n});\r\n","/**\r\n *@author   wuwg\r\n *@createTime  2018/10/15\r\n *@updateTime   2018/10/15\r\n *@description  message  component   全局提示组件\r\n */\r\n// config\r\nimport config from '@/components/config/component-config.js';\r\nconst prefixCls = 'fd-message';\r\nconst componentName = `${config.componentCcPrefix}-message`;\r\nconst iconTypes = {\r\n    default: 'default',\r\n    info: 'information',\r\n    success: 'success',\r\n    warning: 'warning',\r\n    error: 'error',\r\n    loading: 'loading'\r\n};\r\n// module\r\nconst module = {\r\n    name: componentName,\r\n    components: {},\r\n    props: {\r\n        content: {\r\n            type: String,\r\n            default: 'message'\r\n        },\r\n        type: {\r\n            type: String,\r\n            default: 'default'\r\n        },\r\n        // 自己的独特的class\r\n        className: String,\r\n        duration: {\r\n            type: Number,\r\n            default: 2000\r\n        }\r\n    },\r\n    data() {\r\n        return {};\r\n    },\r\n    watch: {},\r\n    computed: {\r\n        wrapClasses() {\r\n            return [\r\n                `${prefixCls}`,\r\n                iconTypes[this.type],\r\n                this.className ? this.className : ''\r\n            ];\r\n        }\r\n    },\r\n    methods: {\r\n        // 移入不关闭\r\n        mouseenter() {\r\n            if (this.timer) {\r\n                clearTimeout(this.timer);\r\n            }\r\n        },\r\n        // 移除关闭\r\n        mouseleave() {\r\n            this.close();\r\n        },\r\n        // 关闭提示\r\n        close() {\r\n            if (this.timer) {\r\n                clearTimeout(this.timer);\r\n            }\r\n            document.body.removeChild(this.$parent.$el);\r\n        }\r\n    },\r\n    mounted() {\r\n    // 移出dom\r\n        this.timer = setTimeout(() => {\r\n            this.close();\r\n        }, this.duration);\r\n    }\r\n};\r\nexport default module;\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=49ea52ef&scoped=true&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=49ea52ef&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"49ea52ef\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapClasses,on:{\"mouseenter\":_vm.mouseenter,\"mouseleave\":_vm.mouseleave}},[_c('span',{staticClass:\"fd-close\",on:{\"click\":function($event){return _vm.close()}}}),_vm._v(\" \"),_c('div',{staticClass:\"fd-text\",domProps:{\"innerHTML\":_vm._s(_vm.content)}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n *@author   wuwg\r\n *@createTime  2018/10/15\r\n *@updateTime   2018/10/15\r\n *@description  message  component   全局提示组件\r\n */\r\nimport Vue from 'vue';\r\nimport messageTemplate from './index.vue';\r\n// module\r\nconst module = {\r\n    info(options) {\r\n        return this.message('info', options);\r\n    },\r\n    success(options) {\r\n        return this.message('success', options);\r\n    },\r\n    warning(options) {\r\n        return this.message('warning', options);\r\n    },\r\n    error(options) {\r\n        return this.message('error', options);\r\n    },\r\n    loading(options) {\r\n        return this.message('loading', options);\r\n    },\r\n    message(type, options) {\r\n        let _options = options;\r\n        if (typeof _options === 'string') {\r\n            _options = {content: _options};\r\n        }\r\n        _options.type = type;\r\n        const _props = _options || {};\r\n        const instance = new Vue({\r\n            render(h) {\r\n                return h(messageTemplate, {props: _props, ref: 'jsMessage'});\r\n            }\r\n        }).$mount();\r\n        document.body.appendChild(instance.$el);\r\n        return instance.$refs.jsMessage;\r\n    }\r\n};\r\nexport default module;\r\n","/**\r\n *@author   wuwg\r\n *@createTime   2018/10/25 0012\r\n *@updateTime   2018/10/25 0012\r\n *@description  module  alert component\r\n */\r\n// prefix\r\nconst prefixCls = 'fd-ajax-loading';\r\n// alert弹出层模块\r\nconst module = {\r\n    props: {\r\n        show: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        text: {\r\n            type: String,\r\n            default: ''\r\n        }\r\n    },\r\n    computed: {\r\n        warpClass() {\r\n            return [\r\n                prefixCls,\r\n                {show: this.show}\r\n            ];\r\n        }\r\n    }\r\n};\r\nexport default module;\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=0f8034aa&scoped=true&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=0f8034aa&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0f8034aa\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.warpClass},[_c('span',{staticClass:\"fd-loading-img\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n *@author   wuwg\r\n *@createTime   2018/10/23\r\n *@updateTime   2018/10/23\r\n *@description  ajax-loading  component   全局ajax加载组件\r\n */\r\nimport Vue from 'vue';\r\n// ajaxLoading 组件\r\nimport ajaxLoading from './index.vue';\r\n// module\r\nconst module = {\r\n    // 实例\r\n    instance: null,\r\n    // 开始\r\n    start() {\r\n        if (this.instance) {\r\n            // 显示实例\r\n            this.instance.show();\r\n        } else {\r\n            // 创建实例\r\n            this.createdInstance();\r\n        }\r\n    },\r\n    // 完成\r\n    finish() {\r\n        if (this.instance) {\r\n            // 隐藏实例\r\n            this.instance.hide();\r\n        }\r\n    },\r\n    // 创建实例\r\n    createdInstance() {\r\n        this.instance = new Vue({\r\n            components: {ajaxLoading},\r\n            // 渲染组件\r\n            render(h) {\r\n                return h(\r\n                    'ajaxLoading',\r\n                    // {Object}\r\n                    // 一个包含模板相关属性的数据对象\r\n                    // 你可以在 template 中使用这些特性。可选参数。\r\n                    {\r\n                        // 组件 props\r\n                        props: {show: this.currentShow}\r\n                    },\r\n                    []\r\n                );\r\n            },\r\n            // 数据项\r\n            data: {currentShow: true},\r\n            methods: {\r\n                // 显示组件\r\n                show() {\r\n                    this.currentShow = true;\r\n                },\r\n                // 隐藏组件\r\n                hide() {\r\n                    this.currentShow = false;\r\n                }\r\n            }\r\n        }).$mount();\r\n        // 添加到body\r\n        document.body.appendChild(this.instance.$el);\r\n    }\r\n};\r\nexport default module;\r\n","/**\r\n *@author   wuwg\r\n *@createTime   2018/10/25 0012\r\n *@updateTime   2018/10/25 0012\r\n *@description  module  alert component\r\n */\r\nimport config from '@/components/config/component-config.js';\r\n// prefix\r\nconst prefixCls = 'fd-alert';\r\n// alert弹出层模块\r\nconst module = {\r\n    name: `${config.componentCcPrefix}alert`,\r\n    props: {\r\n    // 自己的独特的class\r\n        className: String,\r\n        // 动画名字\r\n        animateName: {\r\n            type: String,\r\n            default: 'modal'\r\n        },\r\n        // 弹出层宽\r\n        width: [Number, String],\r\n        // 弹出层高\r\n        height: [Number, String],\r\n        // 弹出层z-index\r\n        zIndex: [Number],\r\n        // 是否需要遮罩层\r\n        modal: Boolean,\r\n        // 弹出层类型\r\n        type: {\r\n            default: 'confirm',\r\n            validator(value) {\r\n                // 类型\r\n                return ['alert', 'confirm', 'prompt'].indexOf(value) !== -1;\r\n            }\r\n        },\r\n        // 弹出层标题\r\n        title: {\r\n            type: String,\r\n            default: '提示'\r\n        },\r\n        // 弹出层标题\r\n        content: {\r\n            type: String,\r\n            default: '您确定删除吗？'\r\n        },\r\n        // 弹出层标题\r\n        value: {\r\n            type: String,\r\n            default: '替换值'\r\n        },\r\n        // 显示确认\r\n        confirm: {\r\n            type: Object,\r\n            default: function () {\r\n                return {\r\n                    show: true,\r\n                    text: '确认',\r\n                    callback() {\r\n                        window.console.log('点击了确定');\r\n                    }\r\n                };\r\n            }\r\n        },\r\n        // 显示取消\r\n        cancel: {\r\n            type: Object,\r\n            default: function () {\r\n                return {\r\n                    show: true,\r\n                    text: '取消',\r\n                    callback() {\r\n                        window.console.log('点击了取消');\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    },\r\n    watch: { },\r\n    data() {\r\n        return {\r\n            // 当前数据\r\n            currentValue: this.value\r\n        };\r\n    },\r\n    computed: {\r\n    // 外部class\r\n        wrapClasses() {\r\n            return [\r\n                prefixCls,\r\n                this.type,\r\n                this.className,\r\n                {opacity0: this.modal}\r\n            ];\r\n        },\r\n        // 弹出层容器class\r\n        popupClasses() {\r\n            return [\r\n                `${prefixCls}-popup`\r\n            ];\r\n        },\r\n        // 弹出层头部class\r\n        popupHeaderClasses() {\r\n            return [\r\n                `${prefixCls}-popup-header`\r\n            ];\r\n        },\r\n        // 弹出层body class\r\n        popupBodyClasses() {\r\n            return [\r\n                `${prefixCls}-popup-body`\r\n            ];\r\n        },\r\n        // 弹出层底部class\r\n        popupFooterClasses() {\r\n            return [\r\n                `${prefixCls}-popup-footer`\r\n            ];\r\n        },\r\n        // 当前的样式\r\n        currentStyle() {\r\n            const _style = {};\r\n            // 宽\r\n            if (this.width) {\r\n                _style.width = typeof this.width === 'number' ? `${this.width}px` : this.width;\r\n            }\r\n            // 高\r\n            if (this.height) {\r\n                _style.height = typeof this.height === 'number' ? `${this.height}px` : this.height;\r\n            }\r\n            // z-index\r\n            if (this.zIndex) {\r\n                _style.zIndex = this.zIndex;\r\n            }\r\n            return _style;\r\n        }\r\n    },\r\n    methods: {\r\n    // 销毁实例\r\n        destory() {\r\n            // 找到父元素，进行移除\r\n            document.body.removeChild(this.$parent.$el);\r\n        },\r\n        // 点击取消\r\n        clickCancel: function () {\r\n            // 执行回调函数\r\n            Object.prototype.toString.call(this.cancel.callback) === '[object Function]' && this.cancel.callback();\r\n            // 销毁实例\r\n            this.destory();\r\n        },\r\n        // 点击确认\r\n        clickConfirm() {\r\n            // 执行回调函数\r\n            Object.prototype.toString.call(this.confirm.callback) === '[object Function]' && this.confirm.callback(this.type === 'prompt' ? this.currentValue : '');\r\n            // 销毁实例\r\n            this.destory();\r\n        }\r\n    }\r\n};\r\nexport default module;\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=534a3214&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{\"name\":_vm.animateName}},[_c('div',{class:_vm.wrapClasses},[_c('div',{class:_vm.popupClasses,style:(_vm.currentStyle)},[_c('header',{class:_vm.popupHeaderClasses},[_c('h3',{domProps:{\"textContent\":_vm._s(_vm.title)}})]),_vm._v(\" \"),_c('div',{class:_vm.popupBodyClasses},[_c('div',{staticClass:\"alert-content\",domProps:{\"innerHTML\":_vm._s(_vm.content)}}),_vm._v(\" \"),(_vm.type === 'prompt')?_c('div',{staticClass:\"alert-input-wrap\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.currentValue),expression:\"currentValue\"}],attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.currentValue)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.currentValue=$event.target.value}}})]):_vm._e()]),_vm._v(\" \"),_c('div',{class:_vm.popupFooterClasses},[(_vm.cancel.show)?_c('button',{staticClass:\"alert-btn cancel\",domProps:{\"textContent\":_vm._s(_vm.cancel.text)},on:{\"click\":function($event){return _vm.clickCancel()}}}):_vm._e(),_vm._v(\" \"),(_vm.confirm.show)?_c('button',{staticClass:\"alert-btn confirm\",domProps:{\"textContent\":_vm._s(_vm.confirm.text)},on:{\"click\":function($event){return _vm.clickConfirm()}}}):_vm._e()])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n * Created by wuwg on 2018/10/25.\r\n */\r\n/**\r\n *@author   wuwg\r\n *@createTime  2018/10/15\r\n *@updateTime   2018/10/15\r\n *@description  message  component   全局提示组件\r\n */\r\nimport Vue from 'vue';\r\nimport alertTemplate from './index.vue';\r\n// module\r\nconst module = {\r\n    alert(options) {\r\n        this.createInstance('alert', options);\r\n    },\r\n    confirm(options) {\r\n        this.createInstance('confirm', options);\r\n    },\r\n    prompt(options) {\r\n        this.createInstance('prompt', options);\r\n    },\r\n    createInstance(type, options) {\r\n        let _options = options;\r\n        if (typeof _options === 'string') {\r\n            _options = {content: _options};\r\n        }\r\n        _options.type = type;\r\n        if (type === 'alert') {\r\n            // 隐藏取消按钮\r\n            _options.cancel = {\r\n                show: false,\r\n                text: '取消',\r\n                callback() {\r\n                    // 取消的回调函数\r\n                }\r\n            };\r\n        }\r\n        const _props = _options || {};\r\n        const instance = new Vue({\r\n            render(h) {\r\n                return h(alertTemplate, {props: _props});\r\n            }\r\n        }).$mount();\r\n        // 添加到body下面\r\n        document.body.appendChild(instance.$el);\r\n    }\r\n};\r\nexport default module;\r\n","/**\r\n *@file index\r\n *@version 1.0.1\r\n *@author wuwg\r\n *@createTime 2019/10/18 - 11:33\r\n *@updateTime 2019/10/18 - 11:33\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description clickoutside 的描述\r\n */\r\n\r\nexport default {\r\n    // 只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。\r\n    bind(el, binding) {\r\n        //\r\n        /**\r\n         * 会执行binding.value() 函数，并且把 event对象传出去\r\n         * @param {object} e  event对象\r\n         * @returns {boolean} 布尔值\r\n         */\r\n        function documentHandler(e) {\r\n            // IE有许多好用的方法，后来都被其他浏览器抄袭了，比如这个contains方法。\r\n            // 如果A元素包含B元素，则返回true，否则false。\r\n            // 唯一不支持这个方法的是IE的死对头firefox。\r\n            // https://www.cnblogs.com/rubylouvre/archive/2009/10/14/1583523.html\r\n            // 支持compareDocumentPosition()\r\n            // 如果在 firefox中报错了，再来做兼容,以下是兼容方法。 2018-03-28 wuwg\r\n            /**\r\n             * if(!!window.find){\r\n                    HTMLElement.prototype.contains = function(B){\r\n                     return this.compareDocumentPosition(B) - 19 > 0\r\n                    }\r\n                 }\r\n             //PPK给出如下解决方法。\r\n             if (window.Node && Node.prototype && !Node.prototype.contains){\r\n                   Node.prototype.contains = function (arg) {\r\n                     return !!(this.compareDocumentPosition(arg) & 16)\r\n                   }\r\n                }\r\n             */\r\n\r\n            //  如果包含直接返回\r\n            if (el.contains(e.target)) {\r\n                return false;\r\n            }\r\n            // 执行方法\r\n            if (binding.expression) {\r\n                binding.value(e);\r\n            }\r\n        }\r\n        // 将documentHandler函数，赋值给el 对象\r\n        el.__vueClickOutside__ = documentHandler;\r\n        document.addEventListener('click', documentHandler);\r\n    },\r\n    update() {\r\n        // update 组件\r\n    },\r\n    // 只调用一次，指令与元素解绑时调用。\r\n    unbind(el) {\r\n        // 接触事件绑定\r\n        document.removeEventListener('click', el.__vueClickOutside__);\r\n        delete el.__vueClickOutside__;\r\n    }\r\n};\r\n","/**\r\n *@file request\r\n *@version 1.0.1\r\n *@author wuwg\r\n *@createTime 2019/12/09 - 11:03\r\n *@updateTime 2019/12/09 - 11:03\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  阅卷目录request （请求）相关\r\n @namespace  request   请求相关，后面加模块名\r\n 名字解释：\r\n _name ： 用 【模块名】 => 【子模块名】\r\n _method ： 请求的方法\r\n _showLog：  是否显示日志\r\n _url : 请求的url\r\n _data : 请求所需要的数据， 需要的参数名，全部在这里写好， 可以通过传参给对象赋值！\r\n _serverData : 服务器返回的数据\r\n\r\n 请求：\r\n 1. fd工程结构中自带此全局方法\r\n window.fdGlobal.ajax\r\n 2.可以单独使用\r\n axios\r\n\r\n 请求必须输出日志：\r\n 1. 请求日志\r\n window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n 2. 响应日志\r\n window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n\r\n ！important\r\n 请求函数返回一个promise,\r\n 为了性能需要，咱们需要内置性能日志！\r\n 按照以下结构编写即可！\r\n 以下是一个实际案例， 【请求模块】可以通过混入的方式，引入到组件的index.js 中\r\n\r\n request ：为命名空间\r\n TreeData：  为模块名\r\n showLog ： 在组件的 index.js  的data中写好，  如：{showLog: window.fdConfig.showLog}, 全局控制日志！\r\n */\r\nimport axios from 'axios';\r\n// axios 所有配置\r\nconst _axiosOprionsMap = [\r\n    'url',\r\n    'method',\r\n    'baseURL',\r\n    'transformRequest',\r\n    'transformResponse',\r\n    'headers',\r\n    'params',\r\n    'paramsSerializer',\r\n    'data',\r\n    'timeout',\r\n    'withCredentials',\r\n    'adapter',\r\n    'auth',\r\n    'responseType',\r\n    'responseEncoding',\r\n    'xsrfCookieName',\r\n    'xsrfHeaderName',\r\n    'onUploadProgress',\r\n    'onDownloadProgress',\r\n    'maxContentLength',\r\n    'validateStatus',\r\n    'maxRedirects',\r\n    'socketPath',\r\n    'httpAgent',\r\n    'httpsAgent',\r\n    'proxy',\r\n    'cancelToken'\r\n];\r\nexport default {\r\n    methods: {\r\n        // 请求【自动完成组件】=> 【请求数据】\r\n        requestDataList(options, name) {\r\n            /* eslint-disable */\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal && window.fdGlobal.performance ? window.fdGlobal.performance.getCurrentTime() : 0;\r\n            return new Promise((resolve, reject) => {\r\n                const _showLog = this.showLog;\r\n                const _name = `【自动完成组件】=> 【${name}】`;\r\n                const _method = options.method.toLowerCase();\r\n                const _url = options.url;\r\n                // const _url = 'http://172.16.35.174:9070/xfjglfw-fanss/api/v1/sldj/pzsdList';\r\n                const _data = options.data;\r\n                // 输出日志\r\n                if (window.fdGlobal && window.fdGlobal.consoleLogRequest) {\r\n                    window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n                }\r\n                // ajax 需要的参数\r\n                const _axiosOptions = {\r\n                    method: _method,\r\n                    url: _url,\r\n                    // URL参数\r\n                    // 必须是一个纯对象或者 URL参数对象\r\n                    params: _method === 'get' ? _data : {},\r\n                    data: _method !== 'get' ? _data : {},\r\n                    // 默认值是json\r\n                    responseType: 'json'\r\n                };\r\n                // 合并参数\r\n                for (const _key in options) {\r\n                    if (_axiosOprionsMap.indexOf(_key) !== -1) {\r\n                        _axiosOptions[_key] = options[_key];\r\n                    }\r\n                }\r\n                _axiosOptions.url = _url;\r\n                //  返回数据\r\n                axios(_axiosOptions).then((data) => {\r\n                    const _serverData = data.data;\r\n                    // 输出日志\r\n                    if (window.fdGlobal && window.fdGlobal.consoleLogResponse) {\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                    }\r\n                    if (window.fdGlobal && window.fdGlobal.performance) {\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                    }\r\n                    resolve(_serverData);\r\n                }, (data) => {\r\n                    if (window.fdGlobal && window.fdGlobal.performance) {\r\n                        window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                    }\r\n                    const _serverData = data.data;\r\n                    // 后端输出日志\r\n                    if (window.fdGlobal && window.fdGlobal.consoleLogResponse) {\r\n                        // 后端输出日志\r\n                        window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                    }\r\n                    reject(data);\r\n                });\r\n            });\r\n        }\r\n    },\r\n\r\n    // 请求远程数据的方法\r\n    requestRemoteData(query) {\r\n        return new Promise((resolve, reject) => {\r\n            // 那么必须先指定url(远程搜索的url)\r\n            if (this.remoteUrl) {\r\n                // 请求参数, 合并参数 （远程搜索的额外参数）\r\n                const _data = {};\r\n                // 合并其他参数\r\n                if (Object.prototype.toString.call(this.remoteExtendsParams) === '[object Object]') {\r\n                    for (const _name in this.remoteExtendsParams) {\r\n                        _data[_name] = this.remoteExtendsParams[_name];\r\n                    }\r\n                }\r\n                // 请求参数\r\n                _data.query = query;\r\n                // ajax 参数\r\n                const _ajaxOptions = {\r\n                    method: this.remoteMethod,\r\n                    data: _data,\r\n                    url: this.remoteUrl\r\n                };\r\n                // 发送请求\r\n                this.requestDataList(_ajaxOptions, '请求数据').then((dataList) => {\r\n                    resolve(dataList);\r\n                }, (data) => {\r\n                    reject(data);\r\n                });\r\n            } else {\r\n                reject(new Error('必须指定远程所有地址：remoteUrl'));\r\n            }\r\n        });\r\n    }\r\n};\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","/**\r\n * #info\r\n *\r\n *@author   wuwg\r\n *@createTime   2020/08/12\r\n *@updateTime   2020/08/12\r\n *@description  auto-complete  component 自动完成组件\r\n */\r\n\r\n// 指令\r\nimport clickoutside from './extend/clickoutside/index.js';\r\nimport request from './request/request.js';\r\nimport autocomplete from './extend/autocomplete.js';\r\nimport searchList from './extend/search-list.js';\r\n// module\r\nexport default {\r\n    // 混入\r\n    mixins: [request, autocomplete, searchList],\r\n    // 内置指令\r\n    //  p ： private  私有\r\n    directives: {pclickoutside: clickoutside},\r\n    // 数据双向绑定\r\n    model: {\r\n        prop: 'value',\r\n        event: 'input'\r\n    },\r\n    props: {\r\n\r\n        // 搜索框中的值\r\n        value: {\r\n            type: [String, Number],\r\n            default: ''\r\n        },\r\n\r\n        // 数据节点的名称\r\n        dName: {\r\n            type: String,\r\n            default: 'text'\r\n        },\r\n        // 数据列表 特定的数据，用于静态查询\r\n        dataList: {\r\n            // 必传且是数组\r\n            type: Array,\r\n            // 多种类型 [String,Number]\r\n            default: function () {\r\n                return [];\r\n            }\r\n        },\r\n\r\n        // 是否禁用\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n\r\n        // 是否有清除按钮\r\n        clearable: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n\r\n        // 占位文本\r\n        placeholder: {\r\n            type: String,\r\n            default: '请输入需要查询的内容'\r\n        },\r\n\r\n        /*    是否将弹层放置于 body 内，\r\n         *     在 Tabs、带有 fixed 的 Table 列内使用时，建议添加此属性，它将不受父级样式影响，从而达到更好的效果\r\n         */\r\n        transfer: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        // 远程搜索的方法\r\n        remoteMethod: {\r\n            // 注意这里这个要用的话必须是一个方法。\r\n            type: String,\r\n            default: 'get'\r\n        },\r\n\r\n        // 远程搜索的url\r\n        remoteUrl: {\r\n            type: String,\r\n            default: './static/json/auto-complete/dataList.json'\r\n        },\r\n\r\n        // 远程搜索的额外参数\r\n        remoteExtendsParams: {type: Object},\r\n\r\n        // 远程请求的方法啊\r\n        remoteRequestMethod: {type: Function}\r\n    },\r\n    data() {\r\n        return {\r\n            // 滚动条对象\r\n            scrollBar: null,\r\n            // 激活条目\r\n            currentItem: {},\r\n            // 当前的值\r\n            currentValue: this.value\r\n        };\r\n    },\r\n    computed: {},\r\n    watch: {\r\n        value: {\r\n            handler(val) {\r\n                // 设置当前的值\r\n                this.setCurrentValue(val);\r\n            },\r\n            immediate: true\r\n        }\r\n    },\r\n    mounted() {\r\n        // ready事件\r\n        this.$emit('ready', this);\r\n    },\r\n    methods: {\r\n        // 设置当前的值\r\n        setCurrentValue(value) {\r\n            this.currentValue = value;\r\n        },\r\n\r\n        // 清空值\r\n        clickClear: function () {\r\n            // 1.重置当前选中得数据\r\n            this.resetCurrentItem();\r\n            // 2. 设置当前搜索的值为空\r\n            this.setCurrentValue();\r\n            // 3. 隐藏搜索列表\r\n            this.hideSearchList();\r\n        },\r\n\r\n        // 重置当前选中得数据\r\n        resetCurrentItem() {\r\n            // 清空当前的对象\r\n            this.setCurrentItem({});\r\n        },\r\n        // 设置当前选中得数据\r\n        setCurrentItem(item) {\r\n            // 当前选中的条目\r\n            this.currentItem = item;\r\n            // 设置当前的值\r\n            // this.setCurrentValue(this.currentItem[this.dName]);\r\n            // 触发事件\r\n            this.emitEvent();\r\n        },\r\n        // 触发事件\r\n        emitEvent() {\r\n            // 触发select 事件\r\n            this.$emit('select', this.currentItem, this);\r\n        }\r\n    }\r\n};\r\n","import setScrollBarPosition from './setScrollBarPosition.js';\r\n\r\n/**\r\n * @namespace   atc   auto-component\r\n */\r\nexport default {\r\n    props: {\r\n        // 是否是本地搜索\r\n        localSearch: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        // 防抖的时间间隔\r\n        delay: {\r\n            type: Number,\r\n            default: 200\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            // 是否获得焦点\r\n            focusing: false,\r\n            // 激活条目的索引\r\n            atcActiveIndex: -1,\r\n            // 正在远程搜索\r\n            remoting: false\r\n        };\r\n    },\r\n    methods: {\r\n        // 设置是否正在远程搜索\r\n        setRemoting(flag) {\r\n            this.remoting = flag;\r\n        },\r\n        // 设置是否获得焦点\r\n        setFocusing(flag) {\r\n            this.focusing = flag;\r\n        },\r\n        // 隐藏搜索列表\r\n        hideSearchList() {\r\n            // 1. 取消获得焦点\r\n            this.setFocusing(false);\r\n            // 2.隐藏【搜索列表】\r\n            this.slSetVisible(false);\r\n            // 3.input失去焦点\r\n            this.$refs.jsInput.blur();\r\n        },\r\n        // 设置激活条目的索引index\r\n        atcSetActiveIndex(index) {\r\n            this.atcActiveIndex = index;\r\n        },\r\n        // 重置激活条目\r\n        atcResetActiveItem() {\r\n            // 设置激活条目的索引index\r\n            this.atcSetActiveIndex(-1);\r\n        },\r\n        // 上箭头\r\n        atcUp() {\r\n            if (!this.slCurrentData.length) {\r\n                return false;\r\n            }\r\n            // 索引减去 -\r\n            this.atcSetActiveIndex(this.atcActiveIndex - 1);\r\n            // 判断索引 -\r\n            if (this.atcActiveIndex < 0) {\r\n                // 小于0 设置为0\r\n                this.atcSetActiveIndex(0);\r\n            }\r\n            // 滚动条动画\r\n            this.atcScrollBarAnimate();\r\n        },\r\n\r\n        // 下箭头\r\n        atcDown() {\r\n            if (!this.slCurrentData.length) {\r\n                return false;\r\n            }\r\n            // 索引减去 -\r\n            this.atcSetActiveIndex(this.atcActiveIndex + 1);\r\n            if (this.atcActiveIndex > this.slCurrentData.length - 1) {\r\n                this.atcActiveIndex = this.slCurrentData.length - 1;\r\n            }\r\n            // 滚动条动画\r\n            this.atcScrollBarAnimate();\r\n        },\r\n        // 滚动条动画\r\n        atcScrollBarAnimate() {\r\n            this.$nextTick(() => {\r\n                // 激活的元素\r\n                const _activeElement = this.$refs[`jsSearch${this.atcActiveIndex}`];\r\n                // 如果有激活的元素\r\n                if (_activeElement && Array.isArray(_activeElement)) {\r\n                    setScrollBarPosition(_activeElement[0], this.$refs.jsSearchListContain);\r\n                }\r\n            });\r\n        },\r\n        //  键盘松开\r\n        handleKeyup($event) {\r\n            if (this.slVisible) {\r\n                if (/38|40|13/igm.test($event.keyCode)) {\r\n                    $event.preventDefault();\r\n                }\r\n            }\r\n        },\r\n        // 键盘按下\r\n        handleKeydown($event) {\r\n            //  上箭头38， 下箭头40  //  回车键13\r\n            switch ($event.keyCode) {\r\n                case 38: // eslint-disable-line\r\n                    if (this.slVisible) {\r\n                        // 上箭头38\r\n                        this.atcUp();\r\n                        $event.preventDefault();\r\n                    }\r\n                    break;\r\n                case 40: // eslint-disable-line\r\n                    if (this.slVisible) {\r\n                        // 下箭头40\r\n                        this.atcDown();\r\n                        $event.preventDefault();\r\n                    }\r\n                    break;\r\n                case 13: // eslint-disable-line\r\n                    if (this.slVisible) {\r\n                        // 回车事件处理函数\r\n                        this.atcEnterHandle();\r\n                    }\r\n                    //  隐藏搜索列表\r\n                    // this.hideSearchList();\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n        },\r\n        // 获取焦点\r\n        handleFocus() {\r\n            // 设置是否获得焦点\r\n            this.setFocusing(true);\r\n            // 如果有值\r\n            if (this.currentValue) {\r\n                //  设置搜索列表显示状态 true , 显示\r\n                this.slSetVisible(true);\r\n                // 自动查询一次\r\n                this.handleInput();\r\n            }\r\n            // focus聚焦事件\r\n            this.$emit('focus', this.currentValue);\r\n        },\r\n        // 值发生变动\r\n        handleInput() {\r\n            // 必须是输入发生的变动，也就是获得焦点\r\n            if (this.currentValue && this.focusing) {\r\n                //    设置搜索列表显示状态 true , 显示\r\n                this.slSetVisible(true);\r\n                // 清除定时器\r\n                if (this.inputTimer) {\r\n                    clearTimeout(this.inputTimer);\r\n                }\r\n                // 函数防抖\r\n                this.inputTimer = setTimeout(() => {\r\n                    // 每次变动都重置数据\r\n                    this.atcResetActiveItem();\r\n                    // 如果是本地搜索\r\n                    if (this.localSearch) {\r\n                        // 处理当前数据\r\n                        this.slOperateData(this.dataList);\r\n                    } else {\r\n                        // 远程搜索\r\n                        this.slRemoteSearch(this.currentValue);\r\n                    }\r\n                }, this.delay);\r\n            } else {\r\n                // 设置搜索列表显示状态 false , 隐藏\r\n                this.slSetVisible(false);\r\n            }\r\n            // 发送事件\r\n            this.$emit('input', this.currentValue);\r\n        },\r\n        // 失去焦点\r\n        handleBlur() {\r\n            // 1. 隐藏搜索列表\r\n            // this.hideSearchList();\r\n            // 2. 失去焦点默认按一下回车键\r\n            // this.atcEnterHandle();\r\n            // 3.blur失焦事件.失去焦点\r\n            // this.$emit('blur', this.currentValue);\r\n        },\r\n        // 回车事件\r\n        atcEnterHandle() {\r\n            // 当前索引不为 -1， 说明有选中的条目 &&  并且当前有数据\r\n            if (this.atcActiveIndex !== -1 && this.slCurrentData.length) {\r\n                // 选中搜索列表的条目\r\n                this.slSelectListItem(this.slCurrentData[this.atcActiveIndex]);\r\n            } else {\r\n                // 重置当前索引\r\n                this.atcSetActiveIndex(-1);\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * @version  1.0.1\r\n * @author wuwg\r\n * @createTime  20190816\r\n * @updateTime  20190816\r\n */\r\n\r\n/**\r\n * @function\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @name  adjustScrollBarPosition\r\n * @memberof FdGlobal\r\n * @param {object} element 目标元素\r\n * @param {object} scrollContain 滚动条所在的容器元素（出现滚动条的元素）\r\n * @param {number} distance  滚动条偏移位置\r\n * @description  调整滚动条位置，如果目标(element)不在滚动条容器(scrollContain)的可视区域内，那么将设置滚动条到目标位置，并返回true， 否则返回false\r\n * @returns {boolean}  返回一个boolean值，如果滚动条发生变动，那么将返回true, 否则返回false\r\n * @example\r\n *  <style>\r\n *       ul {\r\n *          width:200px;\r\n *          height: 300px;\r\n *          overflow: auto;\r\n *      }\r\n *       li {\r\n *           padding:5px;\r\n *           line-height:200px;\r\n *           text-align: center;\r\n *           border: 1px solid #000;\r\n *        }\r\n *       li:nth-child(5) {\r\n *           background-color: red;\r\n *       }\r\n *       li:nth-child(2) {\r\n *          background-color: blue\r\n *      }\r\n *  </style>\r\n *  <ul class=\"js-scrollContain\">\r\n *      <li>1</li>\r\n *      <li>2</li>\r\n *      <li>3</li>\r\n *      <li>4</li>\r\n *      <li>5</li>\r\n *      <li>6</li>\r\n *  </ul>\r\n *  <button onclick=\"gotoTarget(5)\">到达5目标位置</button>\r\n *  <button onclick=\"gotoTarget(2)\">到达2目标位置</button>\r\n * <script>\r\n *       function gotoTarget(num) {\r\n *          // 设置滚动条位置\r\n *          FdGlobal.adjustScrollBarPosition(document.querySelector('.js-scrollContain li:nth-child('+ num +')'), document.querySelector('.js-scrollContain'))\r\n *       }\r\n * </script>\r\n */\r\nexport default (element, scrollContain, distance) => {\r\n    const _element = element;\r\n    const _scrollContain = scrollContain;\r\n    const _distance = distance || 0;\r\n    //  获取矩形容器\r\n    const rectTarget = _element.getBoundingClientRect();\r\n    const rectContain = _scrollContain.getBoundingClientRect();\r\n    // debugger\r\n    const bottomOverflowDistance = rectContain.bottom - rectTarget.bottom;\r\n    // bottomOverflowDistance小于0，说明目标元素不在可视范围之内\r\n    if (bottomOverflowDistance < 0) {\r\n        _scrollContain.scrollTop += Math.abs(bottomOverflowDistance) + _distance;\r\n        return true;\r\n    }\r\n    const topOverflowDistance = rectContain.top - rectTarget.top;\r\n    // topOverflowDistance 大于0，说明目标元素不在可视范围之内\r\n    if (topOverflowDistance > 0) {\r\n        _scrollContain.scrollTop -= Math.abs(topOverflowDistance) + _distance;\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n","/**\r\n * @namespace sl   search-list  搜索列表命名空间\r\n *\r\n */\r\nexport default {\r\n    props: {\r\n        // 限制结果\r\n        limit: {\r\n            type: Number,\r\n            default: 10\r\n        },\r\n        // 是否显示未查询到结果的空文本信息\r\n        showEmptyText: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        // 未查询到结果的空文本提示\r\n        emptyText: {\r\n            type: String,\r\n            default: '未搜索到数据'\r\n        },\r\n        // 支持多词搜索，多词以 ‘ ’（空字符串）分割。\r\n        multipleSearch: {\r\n            type: Boolean,\r\n            default: true\r\n        }\r\n    },\r\n    // 数据\r\n    data() {\r\n        return {\r\n            // 是否获得焦点\r\n            slCurrentData: [\r\n\r\n                /* {\r\n                name: '张三四',\r\n                item: {},\r\n                label: '张三<em class=\"fd-hightlight\">四</em>'\r\n            }*/\r\n            ],\r\n            // 是否显示搜索列表\r\n            slVisible: false\r\n        };\r\n    },\r\n    methods: {\r\n        // 设置当前的显示状态\r\n        slSetVisible(flag) {\r\n            this.slVisible = flag;\r\n            // 如果隐藏，那么将列表清空\r\n            if (!flag) {\r\n                this.slSetCurrentData([]);\r\n            }\r\n        },\r\n        // 隐藏列表\r\n        slHide() {\r\n            // 如果下拉列表显示，那么就应该隐藏\r\n            if (this.slVisible) {\r\n                this.slSetVisible(false);\r\n            }\r\n        },\r\n        // 设置当前数据\r\n        slSetCurrentData(dataList) {\r\n            this.slCurrentData = dataList;\r\n        },\r\n        // 搜索列表获取匹配的判断\r\n        slGetSearchPattern(query) {\r\n            // const pattern = new RegExp(this.currentValue.replace(/(\\^|\\(|\\)|\\[|\\]|\\$|\\*|\\+|\\.|\\?|\\\\|\\{|\\}|\\|)/g, '\\\\$1'), 'igm');\r\n            // 如果是多次匹配\r\n            if (this.multipleSearch && query) {\r\n                // 需要查询的子符\r\n                const _query = query.split(' ').filter((item) => item !== '')\r\n                    .join('|');\r\n                return new RegExp(`(${_query})`, 'igm');\r\n            }\r\n            return new RegExp(`(${query})`, 'igm');\r\n        },\r\n        // 设置过滤数据\r\n\r\n        slFilterData(query, dataList) {\r\n            const _dataList = [];\r\n            // 获取正则表达式\r\n            const _pattern = this.slGetSearchPattern(query);\r\n            // 当前激活的条目\r\n            let _atcActiveIndex = -1;\r\n            // 循环所有的树数据\r\n            dataList.every((item) => {\r\n                // 正则匹配\r\n                if (_pattern.test(item[this.dName])) {\r\n                    // const _label = _labelOrigin.replace(_pattern, '<em class=\"fd-hightlight\">$1</em>');\r\n                    const _label = item[this.dName].replace(_pattern, '<em class=\"fd-hightlight\">$1</em>');\r\n                    // 最终的数据\r\n                    const _data = {\r\n                        //  name\r\n                        [this.dName]: item[this.dName],\r\n                        // 需要显示出来的label\r\n                        label: _label,\r\n                        // 当前的数据条目\r\n                        item: item\r\n                    };\r\n                    // 如果完全相等，那么就激活这条\r\n                    if (item[this.dName] === query) {\r\n                        _atcActiveIndex = _dataList.length;\r\n                    }\r\n                    // 推入数组\r\n                    _dataList.push(_data);\r\n                }\r\n                //  超出会推出循环\r\n                return _dataList.length < this.limit;\r\n            });\r\n            // 如果存在完全一样的，那么就激活这条数据\r\n            // 设置激活条目的索引index\r\n            this.atcSetActiveIndex(_atcActiveIndex);\r\n            // 返回列表\r\n            return _dataList;\r\n        },\r\n        // 处理当前数据\r\n        slOperateData(dataList) {\r\n            // 获取搜索列表\r\n            const _dataList = this.slFilterData(this.currentValue, dataList);\r\n            // 设置当前数据\r\n            this.slSetCurrentData(_dataList);\r\n        },\r\n\r\n        // 设置选中的条目\r\n        slSelectListItem(item) {\r\n            // 设置当前选中得数据\r\n            this.setCurrentItem(item);\r\n            // 1.当前的条目不等于value值\r\n            /* if (item[this.dName] !== this.value) {\r\n                // 设置当前选中得数据\r\n                this.setCurrentItem(item);\r\n            }*/\r\n            // 2. 隐藏搜索列表\r\n            // this.hideSearchList();\r\n            // 3. 重新进行一次查询\r\n            // this.handleInput();\r\n        },\r\n\r\n        //  远程搜素\r\n        slRemoteSearch: function (query) {\r\n            // 开始远程搜索\r\n            this.setRemoting(true);\r\n            // 先判断用户是否自己写了请求数据的方法\r\n            if (typeof this.remoteRequestMethod === 'function') {\r\n                this.remoteRequestMethod(query).then((dataList) => {\r\n                    // 处理当前数据\r\n                    this.slOperateData(dataList);\r\n                })\r\n                    .finally(() => {\r\n                        // 结束远程搜索\r\n                        this.setRemoting(false);\r\n                    });\r\n            } else {\r\n                // 请求远程数据的方法\r\n                this.requestRemoteData(query).then((dataList) => {\r\n                    // 处理当前数据\r\n                    this.slOperateData(dataList);\r\n                })\r\n                    .finally(() => {\r\n                        // 结束远程搜索\r\n                        this.setRemoting(false);\r\n                    });\r\n            }\r\n        }\r\n    }\r\n};\r\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=49cf3c69&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"pclickoutside\",rawName:\"v-pclickoutside\",value:(_vm.slHide),expression:\"slHide\"}],staticClass:\"fd-cc-auto-complete\",class:{ active: _vm.slVisible}},[_c('div',{staticClass:\"fd-value-box\",class:{\n            disabled: _vm.disabled,\n            extend: _vm.slVisible,\n            focus: _vm.focusing\n        }},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.currentValue),expression:\"currentValue\"}],ref:\"jsInput\",staticClass:\"fd-value\",attrs:{\"type\":\"text\",\"placeholder\":_vm.placeholder},domProps:{\"value\":(_vm.currentValue)},on:{\"keyup\":function($event){return _vm.handleKeyup($event)},\"keydown\":function($event){return _vm.handleKeydown($event)},\"focus\":_vm.handleFocus,\"input\":[function($event){if($event.target.composing){ return; }_vm.currentValue=$event.target.value},_vm.handleInput],\"blur\":_vm.handleBlur}}),_vm._v(\" \"),(_vm.clearable)?_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentValue),expression:\"currentValue\"}],staticClass:\"fd-clear\",on:{\"click\":_vm.clickClear}},[_vm._v(\"清除按钮\")]):_vm._e()]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.slVisible),expression:\"slVisible\"}],staticClass:\"fd-cc-ac-search-contain\"},[(_vm.showEmptyText)?_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.slCurrentData.length === 0),expression:\"slCurrentData.length === 0\"}],staticClass:\"fd-empty-text\"},[_vm._v(_vm._s(_vm.emptyText))]):_vm._e(),_vm._v(\" \"),_c('ul',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.slCurrentData.length),expression:\"slCurrentData.length\"}],ref:\"jsSearchListContain\",staticClass:\"fd-dropdown-list\"},_vm._l((_vm.slCurrentData),function(item,index){return _c('li',{key:index + item[_vm.dName],ref:'jsSearch'+index,refInFor:true,staticClass:\"fd-list-item\",class:{active: _vm.atcActiveIndex ===index},attrs:{\"title\":item[_vm.dName]},on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.slSelectListItem(item)}}},[_vm._t(\"default\",[_c('div',{staticClass:\"fd-list-item-text\",domProps:{\"innerHTML\":_vm._s(item.label)}})],{\"item\":item})],2)}),0)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n *@author       wanghuifeng\r\n *@createTime   2020/12/27\r\n *@updateTime   2020/12/27\r\n *@description  window popup  弹出层组件\r\n */\r\n// prefix\r\nconst prefixCls = 'fd-cc-window';\r\n// 弹出层模块\r\nconst module = {\r\n    // 数据双向绑定\r\n    model: {\r\n        prop: 'show',\r\n        event: 'change'\r\n    },\r\n    // props\r\n    props: {\r\n        // 自己的独特的class\r\n        className: String,\r\n        // 动画名字\r\n        animateName: {\r\n            type: String,\r\n            default: 'modal'\r\n        },\r\n        // 弹出层宽\r\n        width: [Number, String],\r\n        // 弹出层高\r\n        height: [Number, String],\r\n        // 弹出层z-index\r\n        zIndex: [Number],\r\n        // 是否需要遮罩层\r\n        modal: Boolean,\r\n        // 弹出层标题\r\n        title: {\r\n            type: String,\r\n            default: '弹出层标题'\r\n        },\r\n        // 是否显示弹出层\r\n        show: {\r\n            type: [Boolean, Number],\r\n            default: false\r\n        },\r\n        // 是否显示关闭按钮\r\n        showClose: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        // 显示确认\r\n        confirm: {\r\n            type: Object,\r\n            default() {\r\n                return {\r\n                    show: true,\r\n                    text: '确认',\r\n                    callback(popup) {\r\n                        window.console.log('点击了确定');\r\n                        popup.hidePopup();\r\n                    }\r\n                };\r\n            }\r\n        },\r\n        // 显示取消\r\n        cancel: {\r\n            type: Object,\r\n            default() {\r\n                return {\r\n                    show: true,\r\n                    text: '取消',\r\n                    callback() {\r\n                        window.console.log('点击了取消');\r\n                    }\r\n                };\r\n            }\r\n        },\r\n        // 显示其他按钮\r\n        other: {\r\n            type: Object,\r\n            default() {\r\n                return {\r\n                    show: false,\r\n                    text: '其他',\r\n                    callback(popup) {\r\n                        window.console.log('点击了取消');\r\n                        popup.hidePopup();\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            // 当前的显示状态\r\n            currentShow: this.show\r\n        };\r\n    },\r\n    watch: {\r\n        // 监听show  状态\r\n        show(newValue) {\r\n            this.currentShow = newValue;\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        // 外部class\r\n        wrapClasses() {\r\n            return [\r\n                // 是否添加show 类名\r\n                this.currentShow ? 'show' : '',\r\n                prefixCls,\r\n                this.type,\r\n                this.className,\r\n                {opacity0: this.modal}\r\n            ];\r\n        },\r\n        // 弹出层容器class\r\n        popupClasses() {\r\n            return [\r\n                `${prefixCls}-popup`\r\n            ];\r\n        },\r\n        // 弹出层头部class\r\n        popupHeaderClasses() {\r\n            return [\r\n                `${prefixCls}-popup-header`\r\n            ];\r\n        },\r\n        // 弹出层body class\r\n        popupBodyClasses() {\r\n            return [\r\n                `${prefixCls}-popup-body`\r\n            ];\r\n        },\r\n        // 弹出层底部class\r\n        popupFooterClasses() {\r\n            return [\r\n                `${prefixCls}-popup-footer`\r\n            ];\r\n        },\r\n        // 当前的样式\r\n        currentStyle() {\r\n            const _style = {};\r\n            // 宽\r\n            if (this.width) {\r\n                _style.width = typeof this.width === 'number' ? `${this.width}px` : this.width;\r\n            }\r\n            // 高\r\n            if (this.height) {\r\n                _style.height = typeof this.height === 'number' ? `${this.height}px` : this.height;\r\n            }\r\n            // z-index\r\n            if (this.zIndex) {\r\n                _style.zIndex = this.zIndex;\r\n            }\r\n            return _style;\r\n        }\r\n    },\r\n    mounted() {\r\n        // 追加到body 下面\r\n        document.querySelector('body')\r\n            .appendChild(this.$el);\r\n    },\r\n    methods: {\r\n        // 设置当前弹出层的显示状态\r\n        setCurrentShow(flag) {\r\n            // 当前弹出层是否显示\r\n            this.currentShow = flag;\r\n            // 处罚change 事件，进行数据双向绑定\r\n            this.$emit('change', this.currentShow);\r\n        },\r\n        // 隐藏弹出层\r\n        hidePopup() {\r\n            // 隐藏弹出层\r\n            this.setCurrentShow(false);\r\n            this.$emit('close');\r\n        },\r\n        // 点击取消\r\n        clickCancel() {\r\n            // 执行回调函数\r\n            Object.prototype.toString.call(this.cancel.callback) === '[object Function]' && this.cancel.callback();\r\n            this.hidePopup();\r\n            this.$emit('cancel');\r\n        },\r\n        // 点击确认\r\n        clickConfirm() {\r\n            // 执行回调函数\r\n            Object.prototype.toString.call(this.confirm.callback) === '[object Function]' && this.confirm.callback(this);\r\n            this.$emit('confirm', this);\r\n        },\r\n        // 其他\r\n        clickOther() {\r\n            // 执行回调函数\r\n            Object.prototype.toString.call(this.other.callback) === '[object Function]' && this.other.callback();\r\n            this.hidePopup();\r\n            this.$emit('other', this);\r\n        },\r\n        // 关闭弹出层\r\n        clickClose() {\r\n            this.$emit('close', this);\r\n            this.hidePopup();\r\n        }\r\n    }\r\n};\r\nexport default module;\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=0c0fd87c&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{\"name\":_vm.animateName}},[_c('div',{class:_vm.wrapClasses},[_c('div',{class:_vm.popupClasses,style:(_vm.currentStyle)},[_c('header',{class:_vm.popupHeaderClasses},[_vm._t(\"header\",[_c('h3',{domProps:{\"innerHTML\":_vm._s(_vm.title)}})]),_vm._v(\" \"),(_vm.showClose)?_c('span',{staticClass:\"window-close\",on:{\"click\":function($event){return _vm.clickClose()}}},[_vm._v(\"关闭\")]):_vm._e()],2),_vm._v(\" \"),_c('div',{class:_vm.popupBodyClasses},[_vm._t(\"default\",[_c('div',{staticClass:\"window-content\"},[_vm._v(\"\\n                        default     body， 默认的插槽\\n                    \")])])],2),_vm._v(\" \"),_c('div',{class:_vm.popupFooterClasses},[_vm._t(\"footer\",[(_vm.cancel.show)?_c('button',{staticClass:\"window-btn cancel\",domProps:{\"textContent\":_vm._s(_vm.cancel.text)},on:{\"click\":function($event){return _vm.clickCancel()}}}):_vm._e(),_vm._v(\" \"),(_vm.confirm.show)?_c('button',{staticClass:\"window-btn confirm\",domProps:{\"textContent\":_vm._s(_vm.confirm.text)},on:{\"click\":function($event){return _vm.clickConfirm()}}}):_vm._e(),_vm._v(\" \"),(_vm.other.show)?_c('button',{staticClass:\"window-btn other\",domProps:{\"textContent\":_vm._s(_vm.other.text)},on:{\"click\":function($event){return _vm.clickOther()}}}):_vm._e()])],2)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n * @file component-config\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @createTime  2019-08-13\r\n * @updateTime  2019-08-13\r\n * @copyright thunisoft fd\r\n * @see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n * @description  组件的配置文件\r\n */\r\nexport default {\r\n    name: 'config',\r\n    // 公用组件前缀\r\n    componentCcPrefix:'cc',\r\n    // 公用业务组件前缀\r\n    componentAcPrefix:'ac',\r\n    // class模块前缀\r\n    classPrefix:'fd-'\r\n};\r\n","/**\r\n * @version 1.0.1\r\n * @author wuwg\r\n * @createTime  20190815\r\n * @updateTime  20190815\r\n * @decription  绑定|取消事件函数\r\n */\r\nexport default {\r\n\r\n    /**\r\n     * @function\r\n     * @name  on\r\n     * @version 1.0.1\r\n     * @author wuwg  <wuwg@thunisoft.com>\r\n     * @memberof  FdGlobal\r\n     * @description  为元素或对象绑定事件\r\n     * @time 2019-08-15\r\n     * @param {object} element 需要解除事件的对象或者元素\r\n     * @param {string}  event  需要解除的事件名\r\n     * @param {function} handler  解除事件的回调函数\r\n     * @param {boolean} capture  是否采用捕获，默认为false\r\n     * @return {undefined} 无返回值\r\n     * @example  FdGlobal.on(window, 'resize', function(){})\r\n     */\r\n    on: (() => {\r\n        // 如果是非ie\r\n        if (document.addEventListener) {\r\n            return (element, event, handler, capture) => {\r\n                if (element && event && handler) {\r\n                    element.addEventListener(event, handler, Object.prototype.toString.call(capture) === '[object Boolean]' ? capture : false);\r\n                }\r\n            };\r\n        }\r\n        // 如果是ie\r\n        return (element, event, handler) => {\r\n            if (element && event && handler) {\r\n                element.attachEvent(`on${event}`, handler);\r\n            }\r\n        };\r\n    })(),\r\n\r\n    /**\r\n     *\r\n     * @function\r\n     * @name  FdGlobal.off\r\n     * @version 1.0.1\r\n     * @author wuwg  <wuwg@thunisoft.com>\r\n     * @alias   FdGlobal.off\r\n     * @description      解除为元素或对象的事件\r\n     * @param {object} element    需要解除事件的对象或者元素\r\n     * @param {string}  event  需要解除的事件名\r\n     * @param {function} handler  解除事件的回调函数\r\n     * @param {boolean} capture  是否采用捕获，默认为false\r\n     * @return {undefined} 无返回值\r\n     * @example  FdGlobal.off(window, 'resize', function(){})\r\n     */\r\n    off: (() => {\r\n        // 如果是非ie\r\n        if (document.removeEventListener) {\r\n            return (element, event, handler, capture) => {\r\n                if (element && event) {\r\n                    element.removeEventListener(event, handler, Object.prototype.toString.call(capture) === '[object Boolean]' ? capture : false);\r\n                }\r\n            };\r\n        }\r\n        // 如果是ie\r\n        return (element, event, handler) => {\r\n            if (element && event) {\r\n                element.detachEvent(`on${event}`, handler);\r\n            }\r\n        };\r\n    })()\r\n};\r\n","/**\r\n *@file getScrollsize\r\n *@version 1.0.1\r\n *@author wuwg\r\n *@createTime 2019/9/6 - 16:03\r\n *@updateTime 2019/9/6 - 16:03\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description getScrollsize 获取浏览器滚动条的大小\r\n */\r\n\r\n// 滚动条宽\r\nlet barSize;\r\n\r\n/**\r\n * @description 计算浏览器滚动条大小的内置方法\r\n * @return {boolean}  返回浏览器滚动条的大小\r\n */\r\nfunction countScrollBarSize() {\r\n    // 一、创建一个外部的div\r\n    const element = document.createElement('div');\r\n    const elementStyle = element.style;\r\n    elementStyle.position = 'absolute';\r\n    elementStyle.top = '-9999em';\r\n    elementStyle.left = '-9999em';\r\n    // 无事件响应\r\n    elementStyle.pointerEvents = 'none';\r\n    // 隐藏div\r\n    elementStyle.visibility = 'hidden';\r\n    // 设置宽高\r\n    elementStyle.width = '200px';\r\n    elementStyle.height = '200px';\r\n    // 强制出现滚动条\r\n    elementStyle.overflow = 'scroll';\r\n    // 添加到页面\r\n    document.body.appendChild(element);\r\n    // 设置大小\r\n    barSize = element.offsetWidth - element.clientWidth;\r\n    // 移除元素\r\n    document.body.removeChild(element);\r\n}\r\n\r\n/**\r\n * @function\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @alias FdGlobal.getScrollBarSize\r\n * @description  获取浏览器滚动条的大小\r\n * @param {boolean} fresh  是否强制重新获取滚动条的大小\r\n * @returns {number} 返回浏览器滚动条的大小\r\n * @example\r\n    let  barSize = FdGlobal.getScrollBarSize()\r\n    console.log(barSize)\r\n */\r\nexport default (fresh) => {\r\n    if (fresh || typeof barSize === 'undefined') {\r\n        // 计算滚动条的宽\r\n        countScrollBarSize();\r\n    }\r\n    return barSize;\r\n};\r\n","/**\r\n *@author   wuwg\r\n *@createTime   2018/03/20\r\n *@updateTime   2019/09/09\r\n *@description  vertical-scrollbar 组件\r\n */\r\nimport config from '../extend/component-config.js';\r\nimport eventObject from '../extend/event.js';\r\n// 事件方法\r\nconst {\r\n    on, off\r\n} = eventObject;\r\n// prefix\r\nconst prefixCls = `${config.classPrefix}scroll-track-v`;\r\nconst scrollbarClass = `${config.classPrefix}scroll-bar`;\r\nconst NUM_2 = 2;\r\nconst NUM_16 = 16;\r\n// module\r\nexport default {\r\n    name: `${config.componentCcPrefix}vertical-scrollbar`,\r\n    props: {\r\n        //  当前滚动区域的scrollHeight值\r\n        cscrollAreaHeight: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        // 当前滚动区域的clientHeight值\r\n        cscrollWrapperHeight: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        // 当前滚动区域的scrollTop滚动值\r\n        cscrollTop: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        // 动画的缓动时间，单位毫秒, 如调用update()方法，点击滚动条得滑倒，滚动条滚动，耗时都是用得这个数值\r\n        tweenTime: {\r\n            type: Number,\r\n            default: 200\r\n        },\r\n        //  滚动条最小的尺寸，为了提升用户体验\r\n        scrollbarMinSize: {\r\n            type: Number,\r\n            default: 30\r\n        },\r\n        //  拖拽滚动条时，扩展滚动条大小 ,此处通过css控制 ， 外围容器增加 pressed 类名\r\n        pressExtendScrollbarSize: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            // vertical-scrollbar 组件可视的高度\r\n            clientHeight: 1,\r\n            // 是否正在拖动\r\n            dragging: false,\r\n            // 开始拖动的坐标点 pageY\r\n            startY: 0,\r\n            // 结束拖动的坐标点 pageY\r\n            endY: 0,\r\n            // 滚动条的位置\r\n            scrollBarPostion: 0,\r\n            // 当前滚动区域的scrollHeight值\r\n            scrollAreaHeight: 1,\r\n            // 当前滚动区域的clientHeight值\r\n            scrollWrapperHeight: 0\r\n        };\r\n    },\r\n    computed: {\r\n        // 有效的模拟滚动条滚动值\r\n        validScrollDistance() {\r\n            return this.clientHeight - this.scrollbarHeight;\r\n        },\r\n        // 有效的真实滚动条滚动值\r\n        validRealScrollDistance() {\r\n            return this.scrollAreaHeight - this.scrollWrapperHeight;\r\n        },\r\n        // 滚动条的高\r\n        scrollbarHeight() {\r\n            return Math.max(this.scrollbarMinSize, this.scrollWrapperHeight / this.scrollAreaHeight * this.clientHeight);\r\n        },\r\n        // 滚动条位置的样式\r\n        style() {\r\n            return {\r\n                // 垂直滚动条的高\r\n                height: `${this.scrollbarHeight}px`,\r\n                //  垂直滚动条的top值（滚动条是绝对定位的）\r\n                top: `${this.scrollBarPostion}px`\r\n            };\r\n        },\r\n        // 垂直滚动条组件容器的class\r\n        wrapClasses() {\r\n            return [\r\n                prefixCls,\r\n                // 拖拽时的类名\r\n                this.dragging && this.pressExtendScrollbarSize ? 'pressed' : ''\r\n            ];\r\n        },\r\n        // 垂直滚动条的class\r\n        scrollbarClass() {\r\n            return [\r\n                scrollbarClass,\r\n                // 拖拽时的类名\r\n                this.dragging ? 'pressed' : ''\r\n            ];\r\n        }\r\n    },\r\n    mounted() {\r\n        // 初始化函数\r\n        this.init();\r\n    },\r\n    beforeDestroy() {\r\n        // 解除事件绑定\r\n        this.unbindEvent();\r\n        //  解除resize监听\r\n        off(window, 'resize', this.initParams);\r\n        // 先取消动画\r\n        cancelAnimationFrame(this.requestAnimationFrameTimerPosition);\r\n        // 先取消动画定时器\r\n        cancelAnimationFrame(this.requestAnimationFrameTimer);\r\n    },\r\n    methods: {\r\n\r\n        /**\r\n         * @function\r\n         * @memberOf module:vertical-scrollbar\r\n         * @description 初始化函数\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        init() {\r\n            // 初始化参数\r\n            this.initParams();\r\n            // 默认设置一次滚动条配置\r\n            this.setScrollPostion(this.cscrollAreaHeight, this.cscrollWrapperHeight, this.cscrollTop);\r\n            //  监听resize事件\r\n            on(window, 'resize', this.initParams);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description 初始化参数\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        initParams() {\r\n            // 纵向滚动条外围的高\r\n            this.clientHeight = this.$el.clientHeight;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description 设置拖拽状态\r\n         * @param  {boolean} flag 拖拽的状态\r\n         * @returns  {undefined} 无返回值\r\n         */\r\n        setDragStatus(flag) {\r\n            this.dragging = flag;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description 获取兼容ie和非ie的event对象\r\n         * @param {object} event  当前的event对象\r\n         * @returns {*|Event} 返回兼容ie和非ie的event对象\r\n         */\r\n        getEvent(event) {\r\n            return event || window.event;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description  阻止默认事件\r\n         * @param {object} event  当前的event对象\r\n         * @return {undefined} 无返回值\r\n         */\r\n        stopEvent(event) {\r\n            const _event = event || window.event;\r\n            if (_event.preventDefault) {\r\n                _event.preventDefault();\r\n            } else {\r\n                _event.returnValue = false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description 设置开始点的坐标\r\n         * @param {number} startY  开始拖拽的位置\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        setStartY(startY) {\r\n            this.startY = startY;\r\n        },\r\n\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description 设置结束点的坐标\r\n         * @param {number} endY  节点拖拽的位置\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        setEndY(endY) {\r\n            this.endY = endY;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description 设置滚动条的位置\r\n         * @param {number} scrollBarPostion  当前滚动条的位置\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        setScrollBarPostion(scrollBarPostion) {\r\n            // 先取消动画\r\n            cancelAnimationFrame(this.requestAnimationFrameTimerPosition);\r\n            // 如果不存在开始时间\r\n            if (!this.requestAnimationFrameTimerPositionLastTime) {\r\n                this.requestAnimationFrameTimerPositionLastTime = new Date().getTime();\r\n            }\r\n            // 如果是拖拽\r\n            if (this.dragging) {\r\n                this.scrollBarPostion = scrollBarPostion;\r\n            } else {\r\n                // 当前时间\r\n                const _currentTime = new Date().getTime();\r\n                // 当前时间超出，立即执行\r\n                if (_currentTime - this.requestAnimationFrameTimerPositionLastTime > 16) { // eslint-disable-line\r\n                    // 执行回调函数\r\n                    this.scrollBarPostion = scrollBarPostion;\r\n                    // 结束时间\r\n                    this.requestAnimationFrameTimerPositionLastTime = _currentTime;\r\n                } else {\r\n                    this.requestAnimationFrameTimerPosition = requestAnimationFrame(() => {\r\n                        this.scrollBarPostion = scrollBarPostion;\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description 设置滚动位置，里面会设置scrollAreaHeight，scrollWrapperHeight 以及调用setScrollBarPostion（）方法，设计滚动条的位置\r\n         * @param {number} scrollAreaHeight   当前滚动区域的scrollHeight值\r\n         * @param {number} scrollWrapperHeight   当前滚动区域的clientHeight值\r\n         * @param {number} scrollTop  当前滚动区域的scrollTop滚动值\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        setScrollPostion(scrollAreaHeight, scrollWrapperHeight, scrollTop) {\r\n            // 滚动区域的高\r\n            this.scrollAreaHeight = scrollAreaHeight;\r\n            // 滚动区域的外围的高\r\n            this.scrollWrapperHeight = scrollWrapperHeight;\r\n            // 滚动条的位置\r\n            const _scrollBarPostion = scrollTop / this.validRealScrollDistance * this.validScrollDistance;\r\n            // 初始化参数\r\n            this.initParams();\r\n            // 设置滚动条的位置\r\n            this.setScrollBarPostion(_scrollBarPostion);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description 绑定所有事件， 绑定了mousemove，touchmove，mouseup 和touchend 事件\r\n         * @returns  {undefined} 无返回值\r\n         */\r\n        bindEvent() {\r\n            //  事件监听\r\n            on(document, 'mousemove', this.onDrag, true);\r\n            on(document, 'touchmove', this.onDrag, true);\r\n            on(document, 'mouseup', this.stopDrag, true);\r\n            on(document, 'touchend', this.stopDrag, true);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description 取消绑定的所有事件\r\n         * @returns  {undefined} 无返回值\r\n         */\r\n        unbindEvent() {\r\n            //  移除事件监听\r\n            off(document, 'mousemove', this.onDrag, true);\r\n            off(document, 'touchmove', this.onDrag, true);\r\n            off(document, 'mouseup', this.stopDrag, true);\r\n            off(document, 'touchend', this.stopDrag, true);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description 设置拖拽状态\r\n         * @param  {object} event event 对象\r\n         * @returns  {undefined} 无返回值\r\n         */\r\n        startDrag(event) {\r\n            // 阻止默认事件\r\n            this.stopEvent(event);\r\n            // pc 的event对象\r\n            let _event = this.getEvent(event);\r\n            // 移动端的event对象\r\n            _event = _event.changedTouches ? _event.changedTouches[0] : _event;\r\n            // 正在拖动\r\n            this.setDragStatus(true);\r\n            // 设置开始位置\r\n            this.setStartY(_event.pageY);\r\n            // 绑定拖拽事件\r\n            this.bindEvent();\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description 拖拽移动事件处理函数\r\n         * @param {object} event  event 对象\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        onDrag(event) {\r\n            // 如果正在拖拽\r\n            if (this.dragging) {\r\n                // 阻止默认事件\r\n                this.stopEvent(event);\r\n                // pc 的event对象\r\n                let _event = this.getEvent(event);\r\n                // 移动端的event对象\r\n                _event = _event.changedTouches ? _event.changedTouches[0] : _event;\r\n                // 设置结束点的坐标\r\n                this.setEndY(_event.pageY);\r\n                // 处理 scrollTop\r\n                this.operateScrollTop(true);\r\n                // 重新设置开始点的坐标\r\n                this.setStartY(_event.pageY);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description 拖拽停止处理函数\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        stopDrag() {\r\n            //  (2018-09-20 解决无限触发函数bug)\r\n            if (this.dragging) {\r\n                // 设置拖拽状态\r\n                this.setDragStatus(false);\r\n                // 处理函数\r\n                this.operateScrollTop(false);\r\n            }\r\n            // 取消绑定的所有事件\r\n            this.unbindEvent();\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description 处理scrollTop值的函数\r\n         * @param {boolean}  dragging 是否正在拖拽\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        operateScrollTop(dragging) {\r\n            //  滚动的值不能小于0， 不能大于  this.clientHeight - this.scrollbarHeight\r\n            const _scrollBarPostion = Math.max(0, Math.min(this.validScrollDistance, (this.endY - this.startY) + this.scrollBarPostion));\r\n            // 触发事件\r\n            this.emitChangeScrollTop(_scrollBarPostion, dragging);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description 触发事件的处理函数， 里面会触发 changeScrollTop 事件，传递出_currentPercent（当前滚动条的百分比）, dragging（当前的拖拽状态），这两个参数\r\n         * @param {number}  scrollBarPostion 当前滚动条的位置值\r\n         * @param {boolean}  dragging 当前滚动条的拖拽状态\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        emitChangeScrollTop(scrollBarPostion, dragging) {\r\n            // 设置滚动条的位置\r\n            this.setScrollBarPostion(scrollBarPostion);\r\n            // y移动的比值\r\n            const _currentPercent = this.scrollBarPostion / this.validScrollDistance;\r\n            //  事件分发\r\n            this.$emit('changeScrollTop', _currentPercent, dragging);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description 点击滑道的处理函数,滚动条会滑动到目标位置\r\n         * @param {object}  event 当前的event对象\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        clickGoto(event) {\r\n            // pc 的event对象\r\n            let _event = this.getEvent(event);\r\n            // 移动端的event对象\r\n            _event = _event.changedTouches ? _event.changedTouches[0] : _event;\r\n            const isContainer = _event.target === this.$el;\r\n            if (isContainer) {\r\n                // Get the Element Position\r\n                const position = this.$refs.scrollbar.getBoundingClientRect();\r\n                const _moveDistance = (_event.clientY - position.top - this.scrollbarHeight / NUM_2);\r\n                const _times = Math.ceil(this.tweenTime / NUM_16);\r\n                const _distance = _moveDistance / _times;\r\n                // 移动滚动条\r\n                this.moveScrollbar(_distance, _times);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:vertical-scrollbar\r\n         * @description 移动滚动条的处理函数，次函数会递归调用，直到times ===0 ，停止递归\r\n         * @param {number}  moveDistance 需要移动的距离\r\n         * @param {number}  times 需要递归的次数\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        moveScrollbar(moveDistance, times) {\r\n            // 次数为0\r\n            if (times === 0) {\r\n                return false;\r\n            }\r\n            // 先取消动画\r\n            cancelAnimationFrame(this.requestAnimationFrameTimer);\r\n            // 执行动画\r\n            this.requestAnimationFrameTimer = requestAnimationFrame(() => {\r\n                //  滚动的值不能小于0， 不能大于  this.clientHeight - this.scrollbarHeight\r\n                const _scrollBarPostion = Math.max(0, Math.min(this.validScrollDistance, moveDistance + this.scrollBarPostion));\r\n                // 触发事件\r\n                this.emitChangeScrollTop(_scrollBarPostion, true);\r\n                // 递归调用\r\n                this.moveScrollbar(moveDistance, times - 1);\r\n            });\r\n        }\r\n    }\r\n};\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=2778df90&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapClasses,on:{\"click\":function($event){return _vm.clickGoto($event)}}},[_c('div',{ref:\"scrollbar\",class:_vm.scrollbarClass,style:(_vm.style),on:{\"touchstart\":function($event){$event.stopPropagation();return _vm.startDrag($event)},\"mousedown\":function($event){$event.stopPropagation();return _vm.startDrag($event)}}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n *@author   wuwg\r\n *@createTime   2018/03/20\r\n *@updateTime   2019/09/09\r\n *@description  horizontal-scrollbar  component\r\n */\r\nimport config from '../extend/component-config.js';\r\nimport eventObject from '../extend/event.js';\r\n// 事件方法\r\nconst {\r\n    on, off\r\n} = eventObject;\r\n// prefix\r\nconst prefixCls = `${config.classPrefix}scroll-track-h`;\r\nconst scrollbarCls = `${config.classPrefix}scroll-bar`;\r\nconst NUM_2 = 2;\r\nconst NUM_16 = 16;\r\n// module\r\nconst module = {\r\n    name: `${config.componentCcPrefix}horizontal-scrollbar`,\r\n    props: {\r\n        // 当前滚动区域的scrollWidth值\r\n        cscrollAreaWidth: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        // 当前滚动区域的clientWidth值\r\n        cscrollWrapperWidth: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        // 当前滚动区域的scrollLeft滚动值\r\n        cscrollLeft: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n\r\n        // 动画的缓动时间，单位毫秒, 如调用update()方法，点击滚动条得滑倒，滚动条滚动，耗时都是用得这个数值\r\n        tweenTime: {\r\n            type: Number,\r\n            default: 200\r\n        },\r\n        //  滚动条最小的尺寸，为了提升用户体验\r\n        scrollbarMinSize: {\r\n            type: Number,\r\n            default: 30\r\n        },\r\n        //  拖拽滚动条时，扩展滚动条大小 ,此处通过css控制 ， 外围容器增加 pressed 类名\r\n        pressExtendScrollbarSize: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            // horizontal-scrollbar组件可视的宽度\r\n            clientWidth: 1,\r\n            // 是否正在拖拽\r\n            dragging: false,\r\n            // 开始拖动的坐标点 pageX\r\n            startX: 0,\r\n            // 结束拖动的坐标点 pageX\r\n            endX: 0,\r\n            // 滚动条的位置\r\n            scrollBarPostion: 0,\r\n            // 当前滚动区域的scrollWidth值\r\n            scrollAreaWidth: 1,\r\n            // 当前滚动区域的 clientWidth 值\r\n            scrollWrapperWidth: 0\r\n        };\r\n    },\r\n    computed: {\r\n        // 有效的模拟滚动条滚动值\r\n        validScrollDistance() {\r\n            return this.clientWidth - this.scrollbarWidth;\r\n        },\r\n        // 有效的真实滚动条滚动值\r\n        validRealScrollDistance() {\r\n            return this.scrollAreaWidth - this.scrollWrapperWidth;\r\n        },\r\n        // 滚动条的宽\r\n        scrollbarWidth() {\r\n            return Math.max(this.scrollbarMinSize, this.scrollWrapperWidth / this.scrollAreaWidth * this.clientWidth);\r\n        },\r\n        // 滚动条位置的样式\r\n        style() {\r\n            return {\r\n                // 滚动条的宽\r\n                width: `${this.scrollbarWidth}px`,\r\n                //  滚动条的left值（滚动条是绝对定位的）\r\n                left: `${this.scrollBarPostion}px`\r\n            };\r\n        },\r\n        // 滚动条外围class\r\n        wrapClasses() {\r\n            return [\r\n                prefixCls,\r\n                // 拖拽时的类名\r\n                this.dragging && this.pressExtendScrollbarSize ? 'pressed' : ''\r\n            ];\r\n        },\r\n        // 滚动条样式class\r\n        scrollbarClass() {\r\n            return [\r\n                scrollbarCls,\r\n                this.dragging ? 'pressed' : ''\r\n            ];\r\n        }\r\n    },\r\n    mounted() {\r\n        // 初始化函数\r\n        this.init();\r\n    },\r\n    beforeDestroy() {\r\n        // 解除事件绑定\r\n        this.unbindEvent();\r\n        //  解除resize监听\r\n        off(window, 'resize', this.initParams);\r\n        // 先取消动画\r\n        cancelAnimationFrame(this.requestAnimationFrameTimerPosition);\r\n        // 先取消动画定时器\r\n        cancelAnimationFrame(this.requestAnimationFrameTimer);\r\n    },\r\n    methods: {\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 初始化函数\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        init() {\r\n            // 初始化参数\r\n            this.initParams();\r\n            // 默认设置一次滚动条配置\r\n            this.setScrollPostion(this.cscrollAreaWidth, this.cscrollWrapperWidth, this.cscrollLeft);\r\n            //  监听resize事件\r\n            on(window, 'resize', this.initParams);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 初始化参数\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        initParams() {\r\n            // 纵向滚动条外围的高\r\n            this.clientWidth = this.$el.clientWidth;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 设置拖拽状态\r\n         * @param  {boolean} flag 拖拽的状态\r\n         * @returns  {undefined} 无返回值\r\n         */\r\n        setDragStatus(flag) {\r\n            this.dragging = flag;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 获取兼容ie和非ie的event对象\r\n         * @param {object} event  当前的event对象\r\n         * @returns {*|Event} 返回兼容ie和非ie的event对象\r\n         */\r\n        getEvent(event) {\r\n            return event || window.event;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description  阻止默认事件\r\n         * @param {object} event  当前的event对象\r\n         * @return {undefined} 无返回值\r\n         */\r\n        stopEvent(event) {\r\n            const _event = event || window.event;\r\n            if (_event.preventDefault) {\r\n                _event.preventDefault();\r\n            } else {\r\n                _event.returnValue = false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 设置开始点的坐标\r\n         * @param {number} startX  开始拖拽的位置\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        setStartX(startX) {\r\n            this.startX = startX;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 设置结束点的坐标\r\n         * @param {number} endX  节点拖拽的位置\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        setEndX(endX) {\r\n            this.endX = endX;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 设置滚动条的位置\r\n         * @param {number} scrollBarPostion  当前滚动条的位置\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        setScrollBarPostion(scrollBarPostion) {\r\n            // 先取消动画\r\n            cancelAnimationFrame(this.requestAnimationFrameTimerPosition);\r\n            // 如果不存在开始时间\r\n            if (!this.requestAnimationFrameTimerPositionLastTime) {\r\n                this.requestAnimationFrameTimerPositionLastTime = new Date().getTime();\r\n            }\r\n            // 如果是拖拽\r\n            if (this.dragging) {\r\n                this.scrollBarPostion = scrollBarPostion;\r\n            } else {\r\n                // 当前时间\r\n                const _currentTime = new Date().getTime();\r\n                // 当前时间超出，立即执行\r\n                if (_currentTime - this.requestAnimationFrameTimerPositionLastTime > 16) { // eslint-disable-line\r\n                    // 执行回调函数\r\n                    this.scrollBarPostion = scrollBarPostion;\r\n                    // 结束时间\r\n                    this.requestAnimationFrameTimerPositionLastTime = _currentTime;\r\n                } else {\r\n                    this.requestAnimationFrameTimerPosition = requestAnimationFrame(() => {\r\n                        this.scrollBarPostion = scrollBarPostion;\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 设置滚动位置，里面会设置scrollAreaWidth，scrollWrapperWidth 以及调用setScrollBarPostion（） 方法，设计滚动条的位置\r\n         * @param {number} scrollAreaWidth   当前滚动区域的scrollWidth值\r\n         * @param {number} scrollWrapperWidth   当前滚动区域的 clientWidth 值\r\n         * @param {number} scrollLeft  当前滚动区域的scrollLeft滚动值\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        setScrollPostion(scrollAreaWidth, scrollWrapperWidth, scrollLeft) {\r\n            // 滚动区域的宽\r\n            this.scrollAreaWidth = scrollAreaWidth;\r\n            // 滚动区域的外围的宽\r\n            this.scrollWrapperWidth = scrollWrapperWidth;\r\n            // 滚动条的位置\r\n            const _scrollBarPostion = scrollLeft / this.validRealScrollDistance * this.validScrollDistance;\r\n            // 初始化参数\r\n            this.initParams();\r\n            // 设置滚动条的位置\r\n            this.setScrollBarPostion(_scrollBarPostion);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 绑定所有事件， 绑定了mousemove，touchmove，mouseup 和touchend 事件\r\n         * @returns  {undefined} 无返回值\r\n         */\r\n        bindEvent() {\r\n            //  事件监听\r\n            on(document, 'mousemove', this.onDrag, true);\r\n            on(document, 'touchmove', this.onDrag, true);\r\n            on(document, 'mouseup', this.stopDrag, true);\r\n            on(document, 'touchend', this.stopDrag, true);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 取消绑定的所有事件\r\n         * @returns  {undefined} 无返回值\r\n         */\r\n        unbindEvent() {\r\n            //  移除事件监听\r\n            off(document, 'mousemove', this.onDrag, true);\r\n            off(document, 'touchmove', this.onDrag, true);\r\n            off(document, 'mouseup', this.stopDrag, true);\r\n            off(document, 'touchend', this.stopDrag, true);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 设置拖拽状态\r\n         * @param  {object} event event 对象\r\n         * @returns  {undefined} 无返回值\r\n         */\r\n        startDrag(event) {\r\n            // 阻止默认事件\r\n            this.stopEvent(event);\r\n            // pc 的event对象\r\n            let _event = this.getEvent(event);\r\n            // 移动端的event对象\r\n            _event = _event.changedTouches ? _event.changedTouches[0] : _event;\r\n            // 正在拖动\r\n            this.setDragStatus(true);\r\n            // 设置开始位置\r\n            this.setStartX(_event.pageX);\r\n            // 绑定拖拽事件\r\n            this.bindEvent();\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 拖拽移动事件处理函数\r\n         * @param {object} event  event 对象\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        onDrag(event) {\r\n            if (this.dragging) {\r\n                // 阻止默认事件\r\n                this.stopEvent(event);\r\n                // pc 的event对象\r\n                let _event = this.getEvent(event);\r\n                // 移动端的event对象\r\n                _event = _event.changedTouches ? _event.changedTouches[0] : _event;\r\n                // 设置结束点的坐标\r\n                this.setEndX(_event.pageX);\r\n                // 处理 scrollLeft\r\n                this.operateScrollLeft(true);\r\n                // 重新设置开始点的坐标\r\n                this.setStartX(_event.pageX);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 拖拽停止处理函数\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        stopDrag() {\r\n            //  (2018-09-20 解决无限触发函数bug)\r\n            if (this.dragging) {\r\n                // 设置拖拽状态\r\n                this.setDragStatus(false);\r\n                // 处理函数\r\n                this.operateScrollLeft(false);\r\n            }\r\n            // 取消绑定的所有事件\r\n            this.unbindEvent();\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 处理scrollLeft值的函数\r\n         * @param {boolean}  dragging 是否正在拖拽\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        operateScrollLeft(dragging) {\r\n            //  滚动的值不能小于0， 不能大于  this.offsetHeight - this.scrollbarHeight\r\n            const _scrollBarPostion = Math.max(0, Math.min(this.validScrollDistance, (this.endX - this.startX) + this.scrollBarPostion));\r\n            // 触发事件\r\n            this.emitChangeScrollLeft(_scrollBarPostion, dragging);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 触发事件的处理函数， 里面会触发 changeScrollLeft 事件，传递出_currentPercent（当前滚动条的百分比）, dragging（当前的拖拽状态），这两个参数\r\n         * @param {number}  scrollBarPostion 当前滚动条的位置值\r\n         * @param {boolean}  dragging 当前滚动条的拖拽状态\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        emitChangeScrollLeft(scrollBarPostion, dragging) {\r\n            // 设置滚动条的位置\r\n            this.setScrollBarPostion(scrollBarPostion);\r\n            // y移动的比值\r\n            const _currentPercent = this.scrollBarPostion / this.validScrollDistance;\r\n            //  事件分发\r\n            this.$emit('changeScrollLeft', _currentPercent, dragging);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 点击滑道的处理函数，滚动条会滑动到目标位置\r\n         * @param {object}  event 当前的event对象\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        clickGoto(event) {\r\n            // pc 的event对象\r\n            let _event = this.getEvent(event);\r\n            // 移动端的event对象\r\n            _event = _event.changedTouches ? _event.changedTouches[0] : _event;\r\n            const isContainer = _event.target === this.$el;\r\n            if (isContainer) {\r\n                // Get the Element Position\r\n                const position = this.$refs.scrollbar.getBoundingClientRect();\r\n                const _moveDistance = (_event.clientX - position.left - this.scrollbarWidth / NUM_2);\r\n                const _times = Math.ceil(this.tweenTime / NUM_16);\r\n                const _distance = _moveDistance / _times;\r\n                // 移动滚动条\r\n                this.moveScrollbar(_distance, _times);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:horizontal-scrollbar\r\n         * @description 移动滚动条的处理函数，次函数会递归调用，直到times ===0 ，停止递归\r\n         * @param {number}  moveDistance 需要移动的距离\r\n         * @param {number}  times 需要递归的次数\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        moveScrollbar(moveDistance, times) {\r\n            // 次数为0\r\n            if (times === 0) {\r\n                return false;\r\n            }\r\n            // 先取消动画\r\n            cancelAnimationFrame(this.requestAnimationFrameTimer);\r\n            // 执行动画\r\n            this.requestAnimationFrameTimer = requestAnimationFrame(() => {\r\n                //  滚动的值不能小于0， 不能大于  this.offsetHeight - this.scrollbarHeight\r\n                const _scrollBarPostion = Math.max(0, Math.min(this.validScrollDistance, moveDistance + this.scrollBarPostion));\r\n                // 触发事件\r\n                this.emitChangeScrollLeft(_scrollBarPostion, true);\r\n                // 递归调用\r\n                this.moveScrollbar(moveDistance, times - 1);\r\n            });\r\n        }\r\n    }\r\n};\r\nexport default module;\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=631dbfbc&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapClasses,on:{\"click\":function($event){return _vm.clickGoto($event)}}},[_c('div',{ref:\"scrollbar\",class:_vm.scrollbarClass,style:(_vm.style),on:{\"touchstart\":function($event){$event.stopPropagation();return _vm.startDrag($event)},\"mousedown\":function($event){$event.stopPropagation();return _vm.startDrag($event)}}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n *@version 1.0.1\r\n *@author wuwg\r\n *@createTime 2019/9/07 - 10:57\r\n *@updateTime 2019/9/09 - 10:57\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  滚动条组件\r\n */\r\nimport config from './extend/component-config.js';\r\nimport eventObject from './extend/event.js';\r\nimport getScrollBarSize from './extend/getScrollBarSize.js';\r\nimport './extend/requestAnimationFrame.js';\r\n//   components\r\nimport verticalScrollbar from './vertical-scrollbar/index.vue';\r\nimport horizontalScrollbar from './horizontal-scrollbar/index.vue';\r\n// prefix\r\nconst prefixCls = `${config.classPrefix}scroll`;\r\nconst NUM_16 = 16;\r\nconst {\r\n    on, off\r\n} = eventObject;\r\n// module\r\nexport default {\r\n    name: `${config.componentCcPrefix}scrollbar`,\r\n    // components\r\n    components: {\r\n        verticalScrollbar,\r\n        horizontalScrollbar\r\n    },\r\n    props: {\r\n\r\n        /**\r\n         * @description 滚动条默认是否显示\r\n         */\r\n        show: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n\r\n        /**\r\n         * @description 是否启动响应式， 默认启动\r\n         */\r\n        responseType: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n\r\n        /**\r\n         * @description 响应式监听的属性值\r\n         */\r\n        attributeFilter: {\r\n            type: Array,\r\n            default() {\r\n                return ['style', 'class'];\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description 动画的缓动时间，单位毫秒, 如调用update()方法，点击滚动条得滑倒，滚动条滚动，耗时都是用得这个数值\r\n         */\r\n        tweenTime: {\r\n            type: Number,\r\n            default: 200\r\n        },\r\n\r\n        /**\r\n         * @description 上拉刷新|下拉加载间隔时间，单位毫秒，主要为了提升性能，默认为500\r\n         */\r\n        delay: {\r\n            type: Number,\r\n            default: 200\r\n        },\r\n\r\n        /**\r\n         * @description  滚动条最小的尺寸\r\n         */\r\n        scrollbarMinSize: {\r\n            type: Number,\r\n            default: 30\r\n        },\r\n\r\n        //  拖拽滚动条时，扩展滚动条大小 ,此处通过css控制 ， 外围容器增加 pressed 类名\r\n        pressExtendScrollbarSize: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            // 是否显示滚动条\r\n            showScrollbar: this.isMobile() ? true : this.show,\r\n\r\n            // has vertical  scroll bar\r\n            hasVerticalScrollBar: false,\r\n            // has horizontal  scroll bar\r\n            hasHorizontalScrollBar: false,\r\n\r\n            // 纵向滚动条的 scrollTop\r\n            scrollTop: 0,\r\n            // 横线滚动条的 scrollLeft\r\n            scrollLeft: 0,\r\n\r\n            // 滚动区域内容的宽高\r\n            scrollAreaWidth: 0,\r\n            scrollAreaHeight: 0,\r\n\r\n            // 滚动区域外围容器的宽高\r\n            scrollWrapperHeight: 0,\r\n            scrollWrapperWidth: 0,\r\n\r\n            // 判断浏览器为非webkit内核的浏览器\r\n            isNotWebkit: !((navigator.userAgent.toLowerCase()\r\n                .indexOf('applewebkit/') > -1)),\r\n            // 浏览器默认滚动条的大小\r\n            scrollBarSize: 17,\r\n            // 是否正在拖动\r\n            dragging: false\r\n\r\n        };\r\n    },\r\n    watch: {},\r\n    computed: {\r\n        // 真实有效的scrollTop滚动值\r\n        validRealScrollTopDistance() {\r\n            return this.scrollAreaHeight - this.scrollWrapperHeight;\r\n        },\r\n        // 真实有效的scrollLeft滚动值\r\n        validRealScrollLeftDistance() {\r\n            return this.scrollAreaWidth - this.scrollWrapperWidth;\r\n        },\r\n        // 滚动容器的样式\r\n        style() {\r\n            return this.isNotWebkit ? {\r\n                // 滚动容器的高，隐藏横向滚动条\r\n                height: `${this.scrollWrapperHeight + this.scrollBarSize}px`,\r\n                //  滚动容器的margin-right 隐藏纵向滚动条\r\n                'margin-right': `-${this.scrollBarSize}px`\r\n            } : {};\r\n        },\r\n        // 滚动条组件容器的class\r\n        wrapClasses() {\r\n            return [\r\n                prefixCls,\r\n                this.isNotWebkit ? 'not-webkit' : '',\r\n                this.showScrollbar || this.dragging ? 'show' : ''\r\n            ];\r\n        },\r\n        // 滚动容器的class\r\n        scrollbarAreaClasses() {\r\n            return [\r\n                `${config.classPrefix}scroll-area`\r\n            ];\r\n        },\r\n        // 滚动内容容器的class\r\n        scrollbarContentClasses() {\r\n            return [\r\n                `${config.classPrefix}scroll-content`\r\n            ];\r\n        }\r\n    },\r\n    mounted() {\r\n        // 初始化的方法\r\n        this.init();\r\n        // 响应式，监听\r\n        this.bindResponseTypeObserve();\r\n        // ready事件\r\n        this.$emit('ready', this);\r\n    },\r\n    beforeDestroy() {\r\n        // 取消事件绑定\r\n        this.unbindEvent();\r\n        //  响应式，取消监听\r\n        this.unbindResponseTypeObserve();\r\n        // 先取消动画\r\n        cancelAnimationFrame(this.requestAnimationFrameTimerPositionTop);\r\n        // 先取消动画\r\n        cancelAnimationFrame(this.requestAnimationFrameTimerPositionLeft);\r\n        // 先取消动画定时器\r\n        cancelAnimationFrame(this.requestAnimationFrameTimer);\r\n    },\r\n    methods: {\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description  初始化的方法\r\n         * @returns {undefined} 无返回值\r\n         */\r\n        init() {\r\n            // 滚动条的大小\r\n            this.scrollBarSize = this.getScrollBarSize();\r\n            // 初始化参数\r\n            this.initParams();\r\n            // 绑定事件\r\n            this.bindEvent();\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description  初始化参数的方法\r\n         * @returns {undefined} 无返回值\r\n         */\r\n        initParams() {\r\n            // 1.滚动条外围的宽\r\n            this.scrollWrapperWidth = this.$el.clientWidth;\r\n            // 2.滚动条外围的高\r\n            this.scrollWrapperHeight = this.$el.clientHeight;\r\n            // 3.滚动区域【内容的宽】\r\n            this.scrollAreaWidth = this.$refs.scrollArea.scrollWidth;\r\n            // 4.滚动区域【内容的高】\r\n            this.scrollAreaHeight = this.$refs.scrollArea.scrollHeight;\r\n            // 5.有纵向滚动条\r\n            this.hasVerticalScrollBar = this.scrollAreaHeight > this.scrollWrapperHeight;\r\n            // 6.有横向滚动条\r\n            this.hasHorizontalScrollBar = this.scrollAreaWidth > this.scrollWrapperWidth;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description  响应式，取消监听的方法\r\n         * @returns {undefined} 无返回值\r\n         */\r\n        unbindResponseTypeObserve() {\r\n            // 启用了响应式，并且已经有监听对象\r\n            if (this.responseType && this.mutationObserver) {\r\n                this.mutationObserver.disconnect();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description  响应式，绑定监听的方法\r\n         * @returns {undefined} 无返回值\r\n         */\r\n        bindResponseTypeObserve() {\r\n            //  MutationEvent在IE浏览器中最低支持到IE9\r\n            // 在webkit内核的浏览器中，不支持 DOMAttrModified\r\n            // IE，Edge以及Firefox浏览器下不支持，不支持 DOMNodeInsertedIntoDocument 和 DOMNodeRemovedFromDocument\r\n            if (this.responseType && typeof window.MutationObserver === 'function') {\r\n                // 所有配置文件\r\n                const observerConfig = {\r\n                    // 子节点的变动\r\n                    attributes: true,\r\n                    // 属性的变动\r\n                    childList: true,\r\n                    // 节点内容或节点文本的变动\r\n                    characterData: true,\r\n                    // 所有后代节点的变动\r\n                    subtree: true,\r\n                    // 表示观察attributes变动时，是否需要记录变动前的属性\r\n                    attributeOldValue: false,\r\n                    // 表示观察characterData变动时，是否需要记录变动前的值\r\n                    characterDataOldValue: false,\r\n                    // 如果不是所有的属性改变都需要被观察，并且attributes设置为true或者被忽略，\r\n                    // 那么设置一个需要观察的属性本地名称（不需要命名空间）的列表\r\n                    // 默认只监听了两个值 ['style', 'class']\r\n                    attributeFilter: this.attributeFilter\r\n                };\r\n\r\n                // 停止对target的观察。\r\n                this.mutationObserver = new MutationObserver((mutationsList, observer) => { // eslint-disable-line\r\n\r\n                    /**\r\n                     * {object} mutation 下的属性\r\n                     * type: 如果是属性变化，返回\"attributes\"，如果是一个CharacterData节点（Text节点、Comment节点）变化，返回\"characterData\"，节点树变化返回\"childList\"\r\n                     * target 返回影响改变的节点\r\n                     * addedNodes 返回添加的节点列表\r\n                     * removedNodes 返回删除的节点列表\r\n                     * previousSibling:  返回分别添加或删除的节点的上一个兄弟节点，否则返回null\r\n                     * nextSibling 返回分别添加或删除的节点的下一个兄弟节点，否则返回null\r\n                     * attributeName 返回已更改属性的本地名称，否则返回null\r\n                     * attributeNamespace: 返回已更改属性的名称空间，否则返回null\r\n                     * oldValue: 返回值取决于type。对于\"attributes\"，它是更改之前的属性的值。对于\"characterData\"，它是改变之前节点的数据。对于\"childList\"，它是null\r\n                     */\r\n                    this.$nextTick(() => {\r\n                        // 刷新滚动条\r\n                        this.refresh(false, (top, left) => {\r\n                            // 触发事件【滚动条因内部内容高度发生变化触发的事件】\r\n                            this.$emit('mutationObserver', top, left);\r\n                        });\r\n                    });\r\n                });\r\n                // 设置观察目标，接受两个参数，target：观察目标，options：通过对象成员来设置观察选项\r\n                this.mutationObserver.observe(this.$el, observerConfig);\r\n                // console.log(this.mutationObserver)\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description 获取浏览器滚动条的大小\r\n         * @returns {number} 返回浏览器滚动条的大小\r\n         */\r\n        getScrollBarSize() {\r\n            return getScrollBarSize();\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description 设置拖拽状态\r\n         * @param  {boolean} flag 拖拽的状态\r\n         * @returns  {undefined} 无返回值\r\n         */\r\n        setDragStatus(flag) {\r\n            this.dragging = flag;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description refresh 刷新方法，先初始化参数initParams()，再设置滚动条样式scrollHandle()\r\n         * @param {boolean} emitScroll 是否触发滚动事件，默认不触发\r\n         * @param {function} callback 刷新后的回调函数\r\n         * @returns  {undefined} 无返回值\r\n         */\r\n        refresh(emitScroll = false, callback) {\r\n            // 保\r\n            this.$nextTick(() => {\r\n                // 初始化参数\r\n                this.initParams();\r\n                // 触发一次滚轮事件\r\n                this.scrollHandle(emitScroll);\r\n                // 回调函数\r\n                if (typeof callback === 'function') {\r\n                    // 触发回调函数\r\n                    callback(this.scrollTop, this.scrollLeft);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description 绑定事件,此函数只是绑定了 resize事件\r\n         * @returns {undefined} 无返回值\r\n         */\r\n        bindEvent() {\r\n            // 浏览器窗口改变，重新设置参数\r\n            on(window, 'resize', this.refresh);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description 取消绑定的事件\r\n         * @returns {undefined} 无返回值\r\n         */\r\n        unbindEvent() {\r\n            // 解除resize事件\r\n            off(window, 'resize', this.refresh);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description 获取兼容ie和非ie的event对象\r\n         * @param {object} event  当前的event对象\r\n         * @returns {*|Event} 返回兼容ie和非ie的event对象\r\n         */\r\n        getEvent(event) {\r\n            return event || window.event;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description  阻止默认事件\r\n         * @param {object} event  当前的event对象\r\n         * @return {undefined} 无返回值\r\n         */\r\n        stopEvent(event) {\r\n            const _event = event || window.event;\r\n            if (_event.preventDefault) {\r\n                _event.preventDefault();\r\n            } else {\r\n                _event.returnValue = false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description  滚动到顶部||最左侧触发的处理函数\r\n         * @return {undefined} 无返回值\r\n         */\r\n        scrollToUpper() {\r\n            // 清除延迟定时器\r\n            if (this.delayTimer) {\r\n                return false;\r\n            }\r\n            // 设置延迟定时器\r\n            this.delayTimer = setTimeout(() => {\r\n                // 触发事件【滚动条触顶事件】\r\n                this.$emit('scrollToUpper', this.scrollTop, this.scrollLeft);\r\n                this.delayTimer = null;\r\n            }, this.delay);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description  滚动到底部||最右侧触发的处理函数\r\n         * @return {undefined} 无返回值\r\n         */\r\n        scrollToLower() {\r\n            // 清除延迟定时器\r\n            if (this.delayTimer) {\r\n                return false;\r\n            }\r\n            // 设置延迟定时器\r\n            this.delayTimer = setTimeout(() => {\r\n                // 触发事件【滚动条触底事件】\r\n                this.$emit('scrollToLower', this.scrollTop, this.scrollLeft);\r\n                this.delayTimer = null;\r\n            }, this.delay);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description 处理滚轮事件的处理函数\r\n         * @return {undefined} 无返回值\r\n         */\r\n        operateWheelHandle() {\r\n            // 如果是下滚， 且纵滚动条的值达到最下面或者横滚到达最右边\r\n            if (this.wheelDirection === 'lower' && (this.scrollLeft === this.validRealScrollLeftDistance || this.scrollTop === this.validRealScrollTopDistance)) {\r\n                this.scrollToLower();\r\n            }\r\n            // 如果是上滚，且纵滚动条的值达到最上面（0）或者横滚到达最左边（0）\r\n            if (this.wheelDirection === 'upper' && (this.scrollLeft === 0 || this.scrollTop === 0)) {\r\n                this.scrollToUpper();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description 单独处理safari处理滚轮事件\r\n         * @param {Object} event  event 对象\r\n         * @return {undefined} 无返回值\r\n         */\r\n        mousewheelHandle(event) {\r\n            // 不是拖动\r\n            this.setDragStatus(false);\r\n            // 是否按住了shift\r\n            this.shiftKey = (event.shiftKey);\r\n            // 滚轮的方向\r\n            this.wheelDirection = event.wheelDeltaY < 0 ? 'lower' : 'upper';\r\n            // console.log('mousewheelHandle');\r\n            // console.log(event);\r\n            // 处理滚轮事件\r\n            this.operateWheelHandle();\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description 处理非safari处理滚轮事件\r\n         * @param {Object} event  event 对象\r\n         * @return {undefined} 无返回值\r\n         */\r\n        wheelHandle(event) {\r\n            // 不是拖动\r\n            this.setDragStatus(false);\r\n            // 是否按住了shift\r\n            this.shiftKey = (event.shiftKey);\r\n            // 滚轮的方向\r\n            this.wheelDirection = event.deltaY > 0 ? 'lower' : 'upper';\r\n            // 处理滚轮事件\r\n            this.operateWheelHandle();\r\n            // console.log('wheelHandle');\r\n            // console.log(event);\r\n            // 经过测试， ie 每次滚动，默认会滚动144px，而其他浏览器会滚动 100\r\n            // 滚动触发次数ie 一般为3次，而chrome 会触发 5- 6次\r\n            /**\r\n             *****************************************************************************\r\n             safari  不支持wheel 事件\r\n             mousewheel事件 type:mousewheel,   wheelDeltaY , 往下是  -, 往上 + ；\r\n             wheel事件不触发，  mousewheel 触发\r\n             *****************************************************************************\r\n             chrome  wheel事件，type: \"wheel\"，  deltaY，  往下是  +, 往上 -；（100）\r\n             mousewheel事件， wheelDeltaY 属性 ,     往下是  -, 往上 + ； （120）\r\n             wheel事件触发，  mousewheel 不触发\r\n             * *****************************************************************************\r\n             opera  wheel事件，type: \"wheel\"，  deltaY，  往下是  +, 往上 -；（100）\r\n             mousewheel事件， wheelDeltaY 属性 ,  往下是  -, 往上 + ； （120）\r\n             wheel事件触发，  mousewheel 不触发\r\n             *****************************************************************************\r\n             ie    wheel事件， type: \"wheel\"，  deltaY，  往下是  +, 往上 -；（144）\r\n             mousewheel 事件， wheelDeltaY 属性 ,  往下是  -, 往上 + ； （120）\r\n             wheel，  mousewheel 都触发\r\n             *****************************************************************************\r\n             firefox  wheel事件，type: \"wheel\"，  deltaY，  往下是  +, 往上 -；（3）\r\n             mousewheel事件不支持，\r\n             DOMMouseScroll 事件 ，支持， 属性为detail 往下是  +, 往上 -；（3）（唯独火狐支持）\r\n             wheel事件触发，  mousewheel 不触发\r\n             *****************************************************************************\r\n             */\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description  滚动条事件处理函数\r\n         * @param {boolean} emitScroll=true  是否触发滚动条事件\r\n         * @return {undefined} 无返回值\r\n         */\r\n        scrollHandle(emitScroll = true) {\r\n            // 滚动后的值\r\n            // 纵向滚动条的 scrollTop\r\n            this.scrollTop = this.$refs.scrollArea.scrollTop;\r\n            // 横线滚动条的 scrollLeft\r\n            this.scrollLeft = this.$refs.scrollArea.scrollLeft;\r\n            // 如果触发滚动\r\n            if (emitScroll) {\r\n                // 触发滚动事件,\r\n                this.$emit('scroll', this.scrollTop, this.scrollLeft);\r\n            }\r\n            //  非拖拽，说明是原生滚动，需要移动滚动条的位置\r\n            if (!this.dragging) {\r\n                // 移动模拟的滚动条\r\n                this.moveTheScrollbar();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description  移动模拟的滚动条处理函数\r\n         * @return {undefined} 无返回值\r\n         */\r\n        moveTheScrollbar() {\r\n            // 如果有纵向滚动条\r\n            if (this.hasVerticalScrollBar && typeof this.$refs.verticalScrollbar === 'object' && typeof this.$refs.verticalScrollbar.setScrollPostion === 'function') {\r\n                // 设置纵向滚动条位置\r\n                this.$refs.verticalScrollbar.setScrollPostion(this.scrollAreaHeight, this.scrollWrapperHeight, this.scrollTop);\r\n            }\r\n            // 如果有水平滚动条\r\n            if (this.hasHorizontalScrollBar && typeof this.$refs.horizontalScrollbar === 'object' && typeof this.$refs.horizontalScrollbar.setScrollPostion === 'function') {\r\n                // 设置水平滚动条位置\r\n                this.$refs.horizontalScrollbar.setScrollPostion(this.scrollAreaWidth, this.scrollWrapperWidth, this.scrollLeft);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description  改变纵向滚动条位置的处理函数\r\n         * @param {number} currentPercent   当前纵向滚动条的进度条（小数）\r\n         * @param {boolean} dragging   是否正在拖动\r\n         * @return {undefined} 无返回值\r\n         */\r\n        handleChangeScrollTop(currentPercent, dragging) {\r\n            // 先取消动画\r\n            cancelAnimationFrame(this.requestAnimationFrameTimerPositionTop);\r\n            this.requestAnimationFrameTimerPositionTop = requestAnimationFrame(() => {\r\n                // 拖动\r\n                this.setDragStatus(dragging);\r\n                // 改变纵向滚动条位置改变\r\n                this.$refs.scrollArea.scrollTop = this.validRealScrollTopDistance * currentPercent;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description  改变横向滚动条位置的处理函数\r\n         * @param {number} currentPercent   当前横向滚动条的进度条（小数）\r\n         * @param {boolean} dragging   是否正在拖动\r\n         * @return {undefined} 无返回值\r\n         */\r\n        handleChangeScrollLeft(currentPercent, dragging) {\r\n            // 先取消动画\r\n            cancelAnimationFrame(this.requestAnimationFrameTimerPositionLeft);\r\n            this.requestAnimationFrameTimerPositionLeft = requestAnimationFrame(() => {\r\n                // 拖动\r\n                this.setDragStatus(dragging);\r\n                // 改变水平滚动条位置改变\r\n                this.$refs.scrollArea.scrollLeft = this.validRealScrollLeftDistance * currentPercent;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description  更新纵向滚动条位置的处理函数\r\n         * @param {number} top   纵向滚动条位置\r\n         * @param {function} callback   更新完滚动条后的回调函数\r\n         * @param {boolean} animateFlag = true  是否有动画\r\n         * @return {undefined} 无返回值\r\n         */\r\n        updateTop(top, callback, animateFlag = true) {\r\n            this.update(top, this.scrollLeft, callback, animateFlag);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description  更新横向滚动条位置的处理函数\r\n         * @param {number} left   横向滚动条位置\r\n         * @param {function} callback   更新完滚动条后的回调函数\r\n         * @param {boolean} animateFlag = true  是否有动画\r\n         * @return {undefined} 无返回值\r\n         */\r\n        updateLeft(left, callback, animateFlag = true) {\r\n            this.update(this.scrollTop, left, callback, animateFlag);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description  更新滚动条的处理函数，纵向和横向都更新\r\n         * @param {number} top   纵向滚动条位置\r\n         * @param {number} left   横向滚动条位置\r\n         * @param {function} callback   更新完滚动条后的回调函数\r\n         * @param {boolean} animateFlag = true  是否有动画\r\n         * @return {undefined} 无返回值\r\n         */\r\n        update(top, left, callback, animateFlag = true) {\r\n            let _top = top;\r\n            let _left = left;\r\n            if (typeof _top === 'undefined') {\r\n                _top = this.scrollTop;\r\n            }\r\n            if (typeof _left === 'undefined') {\r\n                _left = this.scrollLeft;\r\n            }\r\n            // 初始化参数\r\n            this.initParams();\r\n            // 纵向滚动条的 scrollTop\r\n            const _moveDistanceTop = _top - this.scrollTop;\r\n            // 横向滚动条的 scrollLeft\r\n            const _moveDistanceLeft = _top - this.scrollLeft;\r\n            // 滚动次数\r\n            const _times = animateFlag ? Math.ceil(this.tweenTime / NUM_16) : 1;\r\n            // 纵向滚动条每次滚动的距离\r\n            const _distanceTop = _moveDistanceTop / _times;\r\n            // 横向滚动条每次滚动的距离\r\n            const _distanceLeft = _moveDistanceLeft / _times;\r\n            // 移动滚动条\r\n            this.moveScrollbar(_distanceTop, _distanceLeft, _times, callback, _top, _left);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description  移动滚动条的处理函数， 有动画\r\n         * @param {number} distanceTop   纵向滚动条每次滚动的距离\r\n         * @param {number} distanceLeft   横向滚动条每次滚动的距离\r\n         * @param {number} times   滚动次数\r\n         * @param {function} callback   更新完滚动条后的回调函数\r\n         * @param {number} top   纵向滚动条最终的位置\r\n         * @param {number} left   横向滚动条最终的位置\r\n         * @return {undefined} 无返回值\r\n         */\r\n        moveScrollbar(distanceTop, distanceLeft, times, callback, top, left) {\r\n            // 先取消动画定时器\r\n            cancelAnimationFrame(this.requestAnimationFrameTimer);\r\n            // 次数为0\r\n            if (times === 0) {\r\n                //  设置滚动条位置\r\n                this.$refs.scrollArea.scrollTop = top;\r\n                this.$refs.scrollArea.scrollLeft = left;\r\n                // 当前滚动条赋值\r\n                this.scrollTop = top;\r\n                this.scrollLeft = left;\r\n                // 浏览器渲染进程\r\n                this.requestAnimationFrameTimer = requestAnimationFrame(() => {\r\n                    // 执行回调函数\r\n                    this.excuteCallback(callback, this.scrollTop, this.scrollLeft);\r\n                });\r\n                return false;\r\n            }\r\n            // 执行动画，设置动画定时器\r\n            this.requestAnimationFrameTimer = requestAnimationFrame(() => {\r\n                //  设置滚动条位置\r\n                this.$refs.scrollArea.scrollTop = this.scrollTop + distanceTop;\r\n                this.$refs.scrollArea.scrollLeft = this.scrollLeft + distanceLeft;\r\n                // 递归调用\r\n                this.moveScrollbar(distanceTop, distanceLeft, times - 1, callback, top, left);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description 执行回调函数\r\n         * @param {function} callback  需要执行的回调函数\r\n         * @param {object} param  扩展的参数\r\n         * @returns {undefined}  无返回值\r\n         */\r\n        excuteCallback(callback, ...param) {\r\n            if (typeof callback === 'function') {\r\n                // 执行回调函数\r\n                callback.apply(null, param);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @memberof module:scrollbar\r\n         * @description  检测当前浏览器是否为移动端的方法\r\n         * @return  {boolean} 返回一个boolean值\r\n         */\r\n        isMobile: () => {\r\n            const agent = navigator.userAgent.toLowerCase();\r\n            const isIphone = agent.indexOf('iphone') !== -1;\r\n            const isAndroid = agent.indexOf('android') !== -1;\r\n            const isIPad = agent.indexOf('ipad') !== -1;\r\n            const isIPod = agent.indexOf('ipod') !== -1;\r\n            const isIEMobile = agent.indexOf('iemobile') !== -1;\r\n            const isWebOS = agent.indexOf('webos') !== -1;\r\n            const isBlackBerry = agent.indexOf('blackberry') !== -1;\r\n            const isOperaMini = agent.indexOf('opera mini') !== -1;\r\n            return (isIphone || isAndroid || isIPad || isIPod || isIEMobile || isWebOS || isBlackBerry || isOperaMini);\r\n        }\r\n    }\r\n};\r\n","import mod from \"-!./index.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./index.js?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=48bae95a&\"\nimport script from \"./index.js?vue&type=script&lang=js&\"\nexport * from \"./index.js?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.wrapClasses},[_c('div',{ref:\"scrollArea\",class:_vm.scrollbarAreaClasses,style:(_vm.style),on:{\"scroll\":_vm.scrollHandle,\"wheel\":function($event){return _vm.wheelHandle($event)},\"mousewheel\":function($event){return _vm.mousewheelHandle($event)},\"touchstart\":function($event){$event.stopPropagation();return _vm.startDrag($event)},\"touchmove\":function($event){$event.stopPropagation();return _vm.onDrag($event)},\"touchend\":function($event){$event.stopPropagation();return _vm.stopDrag($event)}}},[_c('div',{ref:\"scrollContent\",class:_vm.scrollbarContentClasses},[_vm._t(\"default\")],2)]),_vm._v(\" \"),(_vm.hasVerticalScrollBar)?_c('vertical-scrollbar',{ref:\"verticalScrollbar\",attrs:{\"cscrollAreaHeight\":_vm.scrollAreaHeight,\"cscrollWrapperHeight\":_vm.scrollWrapperHeight,\"cscrollTop\":_vm.scrollTop,\"tweenTime\":_vm.tweenTime,\"scrollbarMinSize\":_vm.scrollbarMinSize,\"pressExtendScrollbarSize\":_vm.pressExtendScrollbarSize},on:{\"changeScrollTop\":_vm.handleChangeScrollTop}}):_vm._e(),_vm._v(\" \"),(_vm.hasHorizontalScrollBar)?_c('horizontal-scrollbar',{ref:\"horizontalScrollbar\",attrs:{\"cscrollAreaWidth\":_vm.scrollAreaWidth,\"cscrollWrapperWidth\":_vm.scrollWrapperWidth,\"cscrollLeft\":_vm.scrollLeft,\"tweenTime\":_vm.tweenTime,\"scrollbarMinSize\":_vm.scrollbarMinSize,\"pressExtendScrollbarSize\":_vm.pressExtendScrollbarSize},on:{\"changeScrollLeft\":_vm.handleChangeScrollLeft}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n * @description 注册全局组件\r\n */\r\n// vue框架\r\nimport Vue from 'vue';\r\n// 配置文件\r\nimport config from '@/components/config/component-config.js';\r\n// 全局注册\r\nimport globalBus from '../globalBus/index.js';\r\n// 全局注册\r\n\r\n// notice start\r\nimport message from '@/components/common/notice/message/message.js';\r\nimport ajaxLoading from '@/components/common/notice/ajax-loading/ajax-loading.js';\r\nimport $alert from '@/components/common/notice/alert/alert.js';\r\n// notice end\r\n\r\n// form  start\r\nimport autoComplete from './form/auto-complete/index.vue';\r\n// form end\r\n\r\n// other start\r\nimport popup from './popup/index.vue';\r\n// other end\r\n\r\n// other start\r\nimport scrollbar from './other/scrollbar/index.vue';\r\n// other end\r\n\r\n// 全局注册\r\nVue.component(`${config.componentCcPrefix}-scrollbar`, scrollbar);\r\nconst components = {scrollbar, popup, autoComplete};\r\n\r\n// 安装\r\nconst install = function () {\r\n    if (install.installed) {\r\n        return false;\r\n    }\r\n    let i = 0;\r\n    window.console.log('【1.全局组件】');\r\n    // 注册组件\r\n    Object.keys(components)\r\n        .forEach(key => {\r\n            i++;\r\n            const pattern = /([A-Z])|^(\\$)/gm;\r\n            let _key = key;\r\n            // 大写转-小写\r\n            _key = _key.replace(pattern, function (a) {\r\n                // ==$ 表示是因为组件是关键词，所以多加了标识符$\r\n                return a === '$' ? '' : `-${a.toLowerCase()}`;\r\n            });\r\n            Vue.component(`component-${_key}`, components[key]);\r\n            window.console.log(`全局组件【component-${_key}】已注册，可以使用！`);\r\n        });\r\n    // 全局方法\r\n    Vue.prototype.$Message = message;\r\n    Vue.prototype.$AjaxLoading = ajaxLoading;\r\n    Vue.prototype.$Alert = $alert;\r\n    // 全局的eventBus\r\n    Vue.prototype.globalBus = globalBus;\r\n    window.console.log(`组件总数${i}`);\r\n    window.console.log('\\n');\r\n};\r\nconst API = {install};\r\nVue.use(API);\r\n","/**\r\n *@file index\r\n *@version 1.0.1\r\n *@author wuwg\r\n *@createTime 2019/10/18 - 11:33\r\n *@updateTime 2019/10/18 - 11:33\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description clickoutside 的描述\r\n */\r\n\r\nexport default {\r\n    // 只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。\r\n    bind(el, binding) {\r\n        //\r\n        /**\r\n         * 会执行binding.value() 函数，并且把 event对象传出去\r\n         * @param {object} e  event对象\r\n         * @returns {boolean} 布尔值\r\n         */\r\n        function documentHandler(e) {\r\n            // IE有许多好用的方法，后来都被其他浏览器抄袭了，比如这个contains方法。\r\n            // 如果A元素包含B元素，则返回true，否则false。\r\n            // 唯一不支持这个方法的是IE的死对头firefox。\r\n            // https://www.cnblogs.com/rubylouvre/archive/2009/10/14/1583523.html\r\n            // 支持compareDocumentPosition()\r\n            // 如果在 firefox中报错了，再来做兼容,以下是兼容方法。 2018-03-28 wuwg\r\n            /**\r\n             * if(!!window.find){\r\n                    HTMLElement.prototype.contains = function(B){\r\n                     return this.compareDocumentPosition(B) - 19 > 0\r\n                    }\r\n                 }\r\n             //PPK给出如下解决方法。\r\n             if (window.Node && Node.prototype && !Node.prototype.contains){\r\n                   Node.prototype.contains = function (arg) {\r\n                     return !!(this.compareDocumentPosition(arg) & 16)\r\n                   }\r\n                }\r\n             */\r\n\r\n            //  如果包含直接返回\r\n            if (el.contains(e.target)) {\r\n                return false;\r\n            }\r\n            // 执行方法\r\n            if (binding.expression) {\r\n                binding.value(e);\r\n            }\r\n        }\r\n        // 将documentHandler函数，赋值给el 对象\r\n        el.__vueClickOutside__ = documentHandler;\r\n        document.addEventListener('click', documentHandler);\r\n    },\r\n    update() {\r\n        // update 组件\r\n    },\r\n    // 只调用一次，指令与元素解绑时调用。\r\n    unbind(el) {\r\n        // 接触事件绑定\r\n        document.removeEventListener('click', el.__vueClickOutside__);\r\n        delete el.__vueClickOutside__;\r\n    }\r\n};\r\n","/**\r\n * @version  1.0.1\r\n * @author wuwg\r\n * @createTime  20200820\r\n * @updateTime  20200820\r\n */\r\n\r\n/**\r\n * @function\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @name  adjustScrollBarPosition\r\n * @memberof FdGlobal\r\n * @param {number} left 当前的left\r\n * @param {number} top  当前的top\r\n * @param {object} element  目标元素\r\n * @description 根据\r\n * @returns {object}  返回一个对象，携带判断之后的top和left, position\r\n * @example\r\n * adjustScrollBarPosition(top,left, element)\r\n */\r\nfunction adjustTipsPosition(left, top, element) {\r\n    // 当前的left 和top\r\n    let _left = left;\r\n    let _top = top;\r\n    // window 的宽和高\r\n    const _winW = window.innerWidth;\r\n    const _winH = window.innerHeight;\r\n    // 元素的宽和高\r\n    const _elementW = element.clientWidth;\r\n    const _elementH = element.clientHeight;\r\n    // 最终的位置\r\n    const _position = ['right', 'bottom'];\r\n    // 如果已经到最右边\r\n    if (_left + _elementW > _winW) {\r\n        _left = _left - _elementW;\r\n        _position[0] = 'left';\r\n    }\r\n    if (_top + _elementH > _winH) {\r\n        _top = _top - _elementH;\r\n        _position[1] = 'top';\r\n    }\r\n    // 返回一个对象\r\n    return {\r\n        top: _top,\r\n        left: _left,\r\n        position: _position\r\n    };\r\n}\r\n// 导出一个模块\r\nexport default adjustTipsPosition;\r\n","/**\r\n *@file index\r\n *@version 1.0.0\r\n *@author wuwg\r\n *@createTime 2020/12/08 - 11:33\r\n *@updateTime 2020/12/08 - 11:33\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description  v-tips  当元素出现..., 需要出现提示的指令\r\n */\r\n\r\nimport adjustTipsPosition from './adjustTipsPosition.js';\r\n// 默认提示框的颜色\r\nconst TIPS_OPTIONS = {\r\n    style: {\r\n        default: {\r\n            'position': 'fixed',\r\n            'top': '0',\r\n            'left': '0',\r\n            'z-index': 99,\r\n            'background-color': '#fff',\r\n            'font': '12px/20px \"Microsoft YaHei\"',\r\n            'color': '#333',\r\n            'max-width': '400px',\r\n            'padding': '5px 10px',\r\n            'border-radius': '5px',\r\n            'border': '0px  solid rgba(0,0,0,0.3)',\r\n            'box-shadow': '1px 1px 5px rgba(0,0,0,0.3)',\r\n            'word-break': 'break-all',\r\n            'visibility': 'hidden'\r\n        },\r\n        info: {\r\n            // #5bc0de\r\n            'background-color': '#fff',\r\n            // 'border-color' : '#46b8da',\r\n            'border': '1px  solid #46b8da',\r\n            // #fff\r\n            'color': '#333'\r\n        },\r\n        warning: {\r\n            // #f0ad4e\r\n            'background-color': '#fff',\r\n            // 'border-color' : '#eea236',\r\n            'border': '1px  solid #eea236',\r\n            // #fff\r\n            'color': '#333'\r\n        },\r\n        success: {\r\n            // #5cb85c\r\n            'background-color': '#fff',\r\n            // 'border-color' : '#4cae4c',\r\n            'border': '1px  solid #4cae4c',\r\n            // #fff\r\n            'color': '#333'\r\n        },\r\n        error: {\r\n            // #d9534f\r\n            'background-color': '#fff',\r\n            // 'border-color' : '#d43f3a',\r\n            'border': '1px  solid #d43f3a',\r\n            'color': '#333'\r\n        }\r\n    },\r\n    //  偏移的距离\r\n    offsetDistance: {\r\n        // 提示框top偏移\r\n        top: 10,\r\n        // 提示框left偏移\r\n        left: 15\r\n    }\r\n};\r\n// 提示框容器\r\nconst TIPS = {\r\n    // dom 元素\r\n    DOM: null,\r\n    // 创建 tips 容器函数\r\n    createTips() {\r\n        // 提示框 容器\r\n        const _tipsDom = document.createElement('div');\r\n        // 添加class\r\n        _tipsDom.classList.add('fd-tips-contain');\r\n        // 设置默认的样式\r\n        _tipsDom.setAttribute('style', TIPS_OPTIONS.style.default);\r\n        // 获取提示框的元素\r\n        TIPS.DOM = _tipsDom;\r\n        // 添加到页面\r\n        document.querySelector('body')\r\n            .appendChild(_tipsDom);\r\n        // 返回TIPS.DOM对象\r\n        return TIPS;\r\n    },\r\n\r\n    // 隐藏提示框\r\n    hideTips() {\r\n        // TIPS.DOM.style.display = 'none';\r\n        TIPS.DOM.style.visibility = 'hidden';\r\n        // 返回TIPS.DOM对象\r\n        return TIPS;\r\n    },\r\n\r\n    // 显示提示框\r\n    showTips() {\r\n        // TIPS.DOM.style.display = 'block';\r\n        TIPS.DOM.style.visibility = 'visible';\r\n        // 返回TIPS.DOM对象\r\n        return TIPS;\r\n    },\r\n\r\n    // 设置提示框的位置\r\n    setTipsPostion(event) {\r\n        // 占位元素的left和top值\r\n        // const _left = event.pageX;\r\n        const _left = event.clientX;\r\n        // const _top = event.pageY;\r\n        const _top = event.clientY;\r\n        //  调整位置\r\n        const {\r\n            top,\r\n            left,\r\n            position\r\n        } = adjustTipsPosition(_left, _top, TIPS.DOM);\r\n        //  如果提示框出现在左侧\r\n        const resultLeft = position[0] === 'left' ? left - TIPS_OPTIONS.offsetDistance.left : left + TIPS_OPTIONS.offsetDistance.left;\r\n        //  如果提示框出现在右侧\r\n        const resultTop = position[0] === 'top' ? top - TIPS_OPTIONS.offsetDistance.top : top + TIPS_OPTIONS.offsetDistance.top;\r\n        TIPS.DOM.style.left = `${resultLeft}px`;\r\n        TIPS.DOM.style.top = `${resultTop}px`;\r\n        // 返回TIPS.DOM对象\r\n        return TIPS;\r\n    },\r\n    // 设置值\r\n    setValue(value) {\r\n        // 3.1.设置目标的值\r\n        TIPS.DOM.innerHTML = value;\r\n        return TIPS;\r\n    },\r\n    // 设置class\r\n    setClass(value) {\r\n        // 3.1.设置目标的值\r\n        TIPS.DOM.className = value.join(' ');\r\n        return TIPS;\r\n    },\r\n    // 设置样式\r\n    setStyle(style) {\r\n        if (Object.prototype.toString.call(style, null) === '[object Object]') {\r\n            // 3.2设置基础样式\r\n            for (const _name in style) {\r\n                // 设置样式\r\n                TIPS.DOM.style[_name] = style[_name];\r\n            }\r\n        }\r\n        return TIPS;\r\n    }\r\n};\r\n\r\n\r\n// 注册\r\nexport default {\r\n    // 只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。\r\n    bind(el, binding) {\r\n        // 如果不存在提示框，那么需要创建提示框\r\n        if (!TIPS.DOM) {\r\n            // 1.创建提示框\r\n            TIPS.createTips();\r\n        }\r\n\r\n        // 提示的类型\r\n        //  default, info, warning, success,error\r\n        const _category = binding.arg ? binding.arg : 'default';\r\n        // 增加class\r\n        const _className = ['fd-tips-contain'];\r\n        for (const _name in binding.modifiers) {\r\n            _className.push(_name);\r\n        }\r\n        // 2. 获取目标提示框的样式\r\n        const _tipsStyle = TIPS_OPTIONS.style[_category];\r\n        // 是否判断省略号\r\n        const _ellipsis = binding.modifiers.ellipsis || false;\r\n\r\n        /**\r\n         * 3. 移动的处理函数\r\n         * @param {Event} event event对象\r\n         * @returns {void} 无返回值\r\n         */\r\n        function documentHandler(event) {\r\n            // 如果判断省略号， 那先进行判断，需要配合 v-line-clamp指令一起使用， 在父元素的data上增加  ellipsis=true 属性\r\n            let _show = true;\r\n            // 如果需要判断出现...， 那么就需要判断【自身】或者【父元素】在dataset中是否有 ellipsis=true\r\n            if (_ellipsis) {\r\n                // 查找父元素节点，查看  ellipsis 属性\r\n                _show = el.dataset.ellipsis === 'true' || el.parentNode.dataset.ellipsis === 'true';\r\n            }\r\n            // 如果存在值，那么才走下面的赋值方法\r\n            if (binding.value && _show) {\r\n                // 值可能是函数，也可能是直接的值\r\n                const _value = typeof binding.value === 'function' ? binding.value(event, el) : binding.value;\r\n                // 3.1设置值\r\n                TIPS.setValue(_value)\r\n                    // 3.2 设置class\r\n                    .setClass(_className)\r\n                    // 3.3设置样式\r\n                    .setStyle(_tipsStyle)\r\n                    // 3.4  设置提示框的位置\r\n                    .setTipsPostion(event)\r\n                    // 3.5  设置显示\r\n                    .showTips();\r\n            }\r\n        }\r\n\r\n        //  移动入\r\n        el.onmouseenter = function () {\r\n            // 将documentHandler函数，赋值给el 对象\r\n            el.__vueMouseMove = documentHandler;\r\n            // 绑定事件\r\n            document.addEventListener('mousemove', documentHandler);\r\n        };\r\n        //  移动入\r\n        el.onmouseleave = function () {\r\n            // 隐藏提示框\r\n            TIPS.hideTips();\r\n            // 解除事件绑定\r\n            document.removeEventListener('mousemove', el.__vueMouseMove);\r\n            // 删除属性\r\n            delete el.__vueMouseMove;\r\n        };\r\n    },\r\n    // 被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。\r\n    inserted() {\r\n        // 被绑定元素插入父节点时调用\r\n    },\r\n    // ：所在组件的 VNode 更新时调用，但是可能发生在其子 VNode 更新之前。指令的值可能发生了改变，也可能没有\r\n    // 。但是你可以通过比较更新前后的值来忽略不必要的模板更新 (详细的钩子函数参数见下)。\r\n    update() {\r\n        // 所在组件的 VNode 更新时调用\r\n    },\r\n    // 指令所在组件的 VNode 及其子 VNode 全部更新后调用。\r\n    componentUpdated() {\r\n        // 指令所在组件的\r\n    },\r\n    // 只调用一次，指令与元素解绑时调用。\r\n    unbind(el) {\r\n        // 接触事件绑定\r\n        document.removeEventListener('mousemove', el.__vueMouseMove);\r\n        // 删除属性\r\n        delete el.__vueMouseMove;\r\n        //  鼠标移入\r\n        el.onmouseenter = null;\r\n        //  鼠标移出\r\n        el.onmouseleave = null;\r\n    }\r\n};\r\n","/**\r\n *@file fdDirective\r\n *@version 1.0.1\r\n *@author wuwg\r\n *@createTime 2019/10/18 - 11:31\r\n *@updateTime 2019/10/18 - 11:31\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description fdDirective 全局指令\r\n */\r\nimport Vue from 'vue';\r\n// 点击目标外围组件\r\nimport clickoutside from './clickoutside/index.js';\r\n// 提示组件\r\nimport tips from './tips/index.js';\r\n// 点击外围\r\nVue.directive('clickoutside', clickoutside);\r\n// 提示组件\r\nVue.directive('tips', tips);\r\nwindow.console.log('【2.全局指令】');\r\nwindow.console.log('全局指令 【v-clickoutside】 已注册，可以使用！');\r\nwindow.console.log('全局指令 【v-tips】 已注册，可以使用！');\r\nwindow.console.log('\\n');\r\n","/**\r\n *@file fdFilter.js\r\n *@version 1.0.1\r\n *@author wuwg\r\n *@createTime 2019/10/17 - 20:47\r\n *@updateTime 2019/10/17 - 20:47\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description fdFilter.js 的描述\r\n */\r\nimport Vue from 'vue';\r\nimport capitalize from './capitalize/index.js';\r\nimport dateFormate from './dateFormate/index.js';\r\n// 点击外围\r\nVue.filter('capitalize', capitalize);\r\n// 格式化日期\r\nVue.filter('dateformate', dateFormate);\r\nwindow.console.log('【3.全局过滤器】');\r\nwindow.console.log('全局过滤器 【capitalize】 已注册，可以使用！');\r\nwindow.console.log('全局过滤器 【dateformate】 已注册，可以使用！');\r\nwindow.console.log('\\n');\r\n","/**\r\n *@file index\r\n *@version 1.0.1\r\n *@author wuwg\r\n *@createTime 2019/10/18 - 14:22\r\n *@updateTime 2019/10/18 - 14:22\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description capitalize 首字母转换成大写\r\n */\r\n/**\r\n *\r\n * @param {string} value 需要转换字符串\r\n * @returns {*} 返回首字母被转换成大写的值\r\n */\r\nexport default (value) => {\r\n    if (!value) {\r\n        return '';\r\n    }\r\n    const _value = value.toString();\r\n    return _value.charAt(0).toUpperCase() + _value.slice(1);\r\n};\r\n","/**\r\n *@file index\r\n *@version 1.0.1\r\n *@author wanghuifeng\r\n *@createTime 2020/12/26 - 14:22\r\n *@updateTime 2020/12/26 - 14:22\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description 日期格式转换\r\n */\r\n/**\r\n *\r\n * @param {string} value 需要转换值\r\n * @param {Boolean} isZhCN 是否是中文日期\r\n * @returns {*} 返回格式化的日期格式\r\n */\r\nexport default (value, isZhCN) => {\r\n    if (value === null || value === '' || typeof (value) !== 'string') {\r\n        return '';\r\n    }\r\n    // 把毫秒替换掉，ie不支持\r\n    let dateStr = value.replace(/\\.\\d{3}/, '');\r\n    dateStr = dateStr.replace(/-/g, '/');\r\n    const date = new Date(dateStr);\r\n    // 获取年\r\n    const y = date.getFullYear();\r\n    // 获取月\r\n    let m = date.getMonth() + 1;\r\n    m = m < 10 ? `0${m}` : m; // eslint-disable-line\r\n    // 获取天\r\n    let d = date.getDate();\r\n    d = d < 10 ? (`0${d}`) : d; // eslint-disable-line\r\n    return isZhCN ? `${y}年${m}月${d}日` : `${y}-${m}-${d}`;\r\n};\r\n","/**\r\n *@file fdDataTable\r\n *@version 1.0.1\r\n *@author wanghuifeng\r\n *@createTime 2020/12/28 - 20:48\r\n *@updateTime 2020/12/28 - 20:48\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description fdDataTable 是前端的数据字典表，此为【审批表】需要数据字段表\r\n */\r\nconst _fdDataTable = {\r\n    //  !important ，  zj, glgb, sy，cxlx，zjlx，zzlx从后端获取的数据， 【前置请求中】进行的赋值\r\n    //  @todo  20201228 wanghuifeng\r\n    // 【职级】codeType\r\n    zJCodeType: '',\r\n    // 【干部管理权限】 codeType\r\n    gbglqxCodeType: '',\r\n    // 【事由】 codeType\r\n    syCodeType:'',\r\n    // 【查询类型】 codeType\r\n    cxlxCodeType:'',\r\n    // 【证件类型】 codeType\r\n    zjlxCodeType:'',\r\n    // 【证照类型】 codeType\r\n    zzlxCodeType:'',\r\n\r\n    // 查询【事由】\r\n    table1001: {\r\n        table01: '日常监督',\r\n        table02: '线索处置',\r\n        table03: '初步核实',\r\n        table04: '审查调查',\r\n        table99: '其他'\r\n    },\r\n\r\n    // 职级\r\n    table1002: {\r\n        table1: '正国',\r\n        table2: '副国',\r\n        table3: '正部',\r\n        table4: '副部',\r\n        table5: '正局',\r\n        table6: '副局',\r\n        table7: '正处',\r\n        table8: '副处',\r\n        table9: '正科',\r\n        table10: '副科',\r\n        table11: '科员',\r\n        table12: '见习',\r\n        table13: '未定职',\r\n        table14: '无'\r\n\r\n    },\r\n\r\n    /* 性别*/\r\n    table1003: {\r\n        table1: '男',\r\n        table2: '女',\r\n        table3: '其他'\r\n    },\r\n\r\n    /* 是否*/\r\n    table1004: {\r\n        table1: '是',\r\n        table2: '否'\r\n    },\r\n\r\n    /* 申请分类*/\r\n    table1005: {\r\n        table0: '全部',\r\n        table1:\r\n            '定向核查',\r\n        table2:\r\n            '主体身份核实'\r\n    },\r\n\r\n    /* 名族*/\r\n    table1006: {\r\n        table1: '汉族',\r\n        table2:\r\n            '蒙古族',\r\n        table3:\r\n            '回族',\r\n        table4:\r\n            '藏族',\r\n        table5:\r\n            '维吾尔族',\r\n        table6:\r\n            '苗族',\r\n        table7:\r\n            '彝族',\r\n        table8:\r\n            '壮族',\r\n        table9:\r\n            '布依族',\r\n        table10:\r\n            '朝鲜族',\r\n        table11:\r\n            '满族',\r\n        table12:\r\n            '侗族',\r\n        table13:\r\n            '瑶族',\r\n        table14:\r\n            '白族',\r\n        table15:\r\n            '土家族',\r\n        table16:\r\n            '哈尼族',\r\n        table17:\r\n            '哈萨克族',\r\n        table18:\r\n            '傣族',\r\n        table19:\r\n            '黎族',\r\n        table20:\r\n            '傈僳族',\r\n        table21:\r\n            '佤族',\r\n        table22:\r\n            '畲族',\r\n        table23:\r\n            '高山族',\r\n        table24:\r\n            '拉祜族',\r\n        table25:\r\n            '水族',\r\n        table26:\r\n            '东乡族',\r\n        table27:\r\n            '纳西族',\r\n        table28:\r\n            '景颇族',\r\n        table29:\r\n            '柯尔克孜族',\r\n        table30:\r\n            '土族',\r\n        table31:\r\n            '达斡尔族',\r\n        table32:\r\n            '仫佬族',\r\n        table33:\r\n            '羌族',\r\n        table34:\r\n            '布朗族',\r\n        table35:\r\n            '撒拉族',\r\n        table36:\r\n            '毛南族',\r\n        table37:\r\n            '仡佬族',\r\n        table38:\r\n            '锡伯族',\r\n        table39:\r\n            '阿昌族',\r\n        table40:\r\n            '普米族',\r\n        table41:\r\n            '塔吉克族',\r\n        table42:\r\n            '怒族',\r\n        table43:\r\n            '乌孜别克族',\r\n        table44:\r\n            '俄罗斯族',\r\n        table45:\r\n            '鄂温克族',\r\n        table46:\r\n            '德昂族',\r\n        table47:\r\n            '保安族',\r\n        table48:\r\n            '裕固族',\r\n        table49:\r\n            '京族',\r\n        table50:\r\n            '塔塔尔族',\r\n        table51:\r\n            '独龙族',\r\n        table52:\r\n            '鄂伦春族',\r\n        table53:\r\n            '赫哲族',\r\n        table54:\r\n            '门巴族',\r\n        table55:\r\n            '珞巴族',\r\n        table56:\r\n            '基诺族'\r\n    },\r\n\r\n    // 证件类型\r\n    table1007: {\r\n        table10: '居民身份证',\r\n        table20: '港澳居民来往内地通行证',\r\n        table30: '台湾居民来往大陆通行证',\r\n        table40: '中国公民护照'\r\n        // 后续添加 2021-01-08 zhanna\r\n        // table50: '外国公民护照',\r\n        // table60: '其他证件'\r\n    },\r\n\r\n    /* 状态列表状态*/\r\n    table1008: {\r\n        table0: '全部',\r\n        table1: '未打印',\r\n        table2: '已打印',\r\n        table4: '已作废',\r\n        table3: '部分反馈',\r\n        table5: '全部反馈'\r\n\r\n    },\r\n\r\n    /* 核实主体*/\r\n    table1009: {\r\n        table1: '自然人',\r\n        table2:\r\n            '机构'\r\n\r\n    },\r\n    // 查询对象类别 TODO 2020-12-28\r\n    table1010: {\r\n        table1: '自然人',\r\n        table2: '机构',\r\n        table3: '车牌号',\r\n        table4: '银行账号',\r\n        table5: '手机号',\r\n        table6: '信托产品编码',\r\n        table7: '理财产品编码',\r\n        table8: '保险保单号',\r\n        table9: '商户代码',\r\n        table10: '商户订单号',\r\n        table11: '签购单信息',\r\n        table12: '快递单号'\r\n    },\r\n    // 查询项\r\n    table1011: {\r\n        table1: '人口',\r\n        table2: '出入境',\r\n        table3: '机动车',\r\n        table4: '驾驶证'\r\n    },\r\n\r\n    /* 单位证件类型*/\r\n    table1012: {\r\n        table01: '统一社会信用代码证',\r\n        table02: '组织机构代码证',\r\n        table03: '纳税人识别号'\r\n        // 后续添加 2021-01-08 zhanna\r\n        // table99: '其他'\r\n    },\r\n    table1013: {\r\n        table0: '全部',\r\n        table1: '待审核',\r\n        table2: '未通过',\r\n        table3: '已通过'\r\n    },\r\n    table1014: {\r\n        table1: '未生效',\r\n        table2: '生效',\r\n        table3: '失效'\r\n    },\r\n    table1015: {\r\n        table1: '正国',\r\n        table2: '副国',\r\n        table3: '正部',\r\n        table4: '副部',\r\n        table5: '正局（厅）',\r\n        table6: '副局（厅）',\r\n        table7: '正处',\r\n        table8: '副处',\r\n        table9: '正科',\r\n        table10: '副科',\r\n        table11: '科员',\r\n        table12: '见习',\r\n        table13: '未定职',\r\n        table14: '无',\r\n        table15: '专业技术七级',\r\n        table16: '专业技术八级',\r\n        table17: '专业技术九级',\r\n        table18: '专业技术十级',\r\n        table19: '专业技术十一级',\r\n        table20: '专业技术十二级',\r\n        table21: '技术工一级',\r\n        table22: '技术工二级',\r\n        table23: '技术工三级',\r\n        table24: '技术工四级',\r\n        table25: '技术工五级',\r\n        table26: '普通工',\r\n        table33: '正战区',\r\n        table34: '副战区',\r\n        table35: '正军',\r\n        table36: '副军',\r\n        table27: '正师',\r\n        table28: '副师',\r\n        table29: '正团',\r\n        table30: '副团',\r\n        table31: '正营',\r\n        table32: '副营',\r\n        table37: '一级巡视员',\r\n        table38: '二级巡视员',\r\n        table39: '一级调研员',\r\n        table40: '二级调研员',\r\n        table41: '三级调研员',\r\n        table42: '四级调研员',\r\n        table43: '一级主任科员',\r\n        table44: '二级主任科员',\r\n        table45: '三级主任科员',\r\n        table46: '四级主任科员',\r\n        table47: '一级科员',\r\n        table48: '二级科员'\r\n    },\r\n    table1016: {\r\n        table1: '启用',\r\n        table2: '停用'\r\n    },\r\n    table1017: {\r\n        table1: '接口查询',\r\n        table2: '落地数据查询'\r\n    },\r\n    // 查询项管理的协助查询单位\r\n    table1018: {},\r\n    table1019: {\r\n        table1: '正常',\r\n        table2: '停用',\r\n        table3: '注销',\r\n        table4: '锁定'\r\n    },\r\n    table1020: {\r\n        // table03: '车牌号',  TODO 2020-01-08 whf @description 需求说暂不支持，所以目前不展示\r\n        table04: '银行账/卡号',\r\n        table05: '手机号',\r\n        table06: '信托产品编码',\r\n        table07: '理财产品编码',\r\n        table08: '保险保单号',\r\n        table09: '商户代码（银联）',\r\n        table10: '商户订单号（银联）',\r\n        table11: '签购单信息（银联）',\r\n        table12: '快递单号'\r\n    },\r\n    table1021: {\r\n        table1: '总队总',\r\n        table2: '点对点'\r\n    },\r\n    table1022: {\r\n        table1: '委部领导',\r\n        table2: '副部长级室主任',\r\n        table3: '副部级巡视专员',\r\n        table4: '副部级干部',\r\n        table5: '秘书长',\r\n        table6: '副秘书长',\r\n        table7: '部长',\r\n        table8: '常务副部长',\r\n        table9: '副部长',\r\n        table10: '书记',\r\n        table11: '常务副书记',\r\n        table12: '副书记',\r\n        table13: '机关纪委书记',\r\n        table14: '机关工会主席',\r\n        table15: '正局级巡视专员',\r\n        table16: '副局级巡视专员',\r\n        table17: '主任',\r\n        table18: '副主任',\r\n        table19: '主任助理',\r\n        table20: '副局长',\r\n        table21: '局长',\r\n        table22: '社长',\r\n        table23: '副社长',\r\n        table24: '社长助理',\r\n        table25: '总编辑',\r\n        table26: '副总编辑',\r\n        table27: '党委书记',\r\n        table28: '党委副书记',\r\n        table29: '纪委书记',\r\n        table30: '院长',\r\n        table31: '副院长',\r\n        table32: '正局员',\r\n        table33: '副局员',\r\n        table34: '副局级干部',\r\n        table35: '处长',\r\n        table36: '负责人',\r\n        table37: '正处员',\r\n        table38: '副处长',\r\n        table39: '机关团委书记',\r\n        table40: '机关团委副书记',\r\n        table41: '副处员',\r\n        table42: '主任科员',\r\n        table43: '副主任科员',\r\n        table44: '科员',\r\n        table45: '直属单位专业技术人员',\r\n        table46: '工人',\r\n        table47: '未定职人员',\r\n        table48: '组长',\r\n        table49: '副组长',\r\n        table50: '纪工委书记',\r\n        table51: '纪工委副书记',\r\n        table52: '纪工委委员',\r\n        table53: '纪委书记',\r\n        table54: '纪委副书记',\r\n        table55: '监察部部长',\r\n        table56: '监察部副部长',\r\n        table57: '监察室主任',\r\n        table58: '监察室副主任',\r\n        table59: '纪委常委',\r\n        table60: '监察厅副厅长',\r\n        table61: '监察局副局长',\r\n        table62: '无',\r\n        table63: '正处级巡视专员',\r\n        table64: '副处级巡视专员',\r\n        table65: '国家预防腐败局副局长',\r\n        table66: '正局级干部',\r\n        table67: '总务部主任',\r\n        table68: '工作人员',\r\n        table69: '网络中心技术主任',\r\n        table70: '秘书',\r\n        table71: '干事'\r\n    },\r\n    table1023: {\r\n        table1: '中央纪委书记',\r\n        table2: '中央纪委主持日常工作的副书记(国家监委主任)',\r\n        table3: '分管委领导',\r\n        table4: '承办部门主要负责人'\r\n\r\n    },\r\n    table1024: {\r\n        table100: '居民身份证',\r\n        table300: '往来台湾通行证',\r\n        table400: '往来港澳通行证',\r\n        // table500: \"机动车驾驶证\",\r\n        table600: '中国公民护照',\r\n        table801: '外国公民护照',\r\n        table9999: '其他证件',\r\n        table902: '组织机构代码',\r\n        table903: '统一社会信用代码',\r\n        table904: '纳税人识别号'\r\n    },\r\n    table1025: {\r\n        table1: '正国',\r\n        table2: '副国',\r\n        table3: '正部',\r\n        table4: '副部',\r\n        table5: '正局（厅）',\r\n        table6: '副局（厅）',\r\n        table7: '正处',\r\n        table8: '副处',\r\n        table9: '正科',\r\n        table10: '副科',\r\n        table11: '科员',\r\n        table12: '见习',\r\n        table13: '未定职',\r\n        table14: '无'\r\n    },\r\n    table1026: {\r\n        table1: '中央纪委书记',\r\n        table2: '主持日常工作副书记',\r\n        table3: '分管委领导',\r\n        table4: '承办部门主要负责人'\r\n\r\n    },\r\n    table1027: {table1: '工作证审核'},\r\n    table1028: {\r\n        table0: '未读',\r\n        table1: '已读'\r\n    },\r\n    table1029: {\r\n        table1: '已发布',\r\n        table0: '未发布'\r\n    },\r\n    table1030: {\r\n        table: '全部',\r\n        table1: '正常',\r\n        table2: '停用',\r\n        table3: '注销',\r\n        table4: '锁定'\r\n    },\r\n    table1031: {\r\n        table1: '中管干部',\r\n        table2: '非中管干部'\r\n    },\r\n    table1032: {\r\n        table5: '全部反馈',\r\n        table3: '部分反馈',\r\n        table2: '未反馈'\r\n    },\r\n    table1033: {\r\n        table0: '已反馈',\r\n        table1: '未反馈'\r\n    },\r\n\r\n    /**\r\n     * @param {String} codeType  codeType 类型\r\n     * @returns {Array} 返回一个数组\r\n     */\r\n    getCodeTypeDataList: function (codeType) {\r\n        const _dataList = [];\r\n        // 目标对象\r\n        const _targetObj = this[`table${codeType}`];\r\n        // 判断是否存在该类型\r\n        if (Object.prototype.toString.call(_targetObj) === '[object Object]') {\r\n            for (const _name in _targetObj) {\r\n                // 在意外（自定义/继承）成员上进行可能的迭代，可能缺少属性检查\r\n                // 做了个这个判断。 hasOwnProperty\r\n                if (_targetObj.hasOwnProperty(_name)) {\r\n                    _dataList.push({\r\n                        code: _name.replace(/^table/igm, ''),\r\n                        name: _targetObj[_name],\r\n                        codeType: codeType\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return _dataList;\r\n    },\r\n\r\n    /**\r\n     * select中支持拼音搜索\r\n     * @param {String} codeType  codeType 类型\r\n     * @returns {Array} 返回一个数组\r\n     */\r\n    getCodeTypePinyinDataList: function (codeType) {\r\n        return this[`table${codeType}`];\r\n    },\r\n\r\n    /**\r\n     * 传入 codeType, 获取该类型下的数据对象\r\n     * @param {String} codeType  codeType 类型\r\n     * @returns {Array} 返回该类型对应的数据对象\r\n     */\r\n    getCodeTypeObject: function (codeType) {\r\n        const _dataObject = {};\r\n        // 目标对象\r\n        const _targetObj = this[`table${codeType}`];\r\n        // 判断是否存在该类型\r\n        if (Object.prototype.toString.call(_targetObj) === '[object Object]') {\r\n            for (const _name in _targetObj) {\r\n                // 在意外（自定义/继承）成员上进行可能的迭代，可能缺少属性检查\r\n                // 做了个这个判断。 hasOwnProperty\r\n                if (_targetObj.hasOwnProperty(_name)) {\r\n                    _dataObject[_name.replace(/^table/igm, '')] = _targetObj[_name];\r\n                }\r\n            }\r\n        }\r\n        return _dataObject;\r\n    },\r\n\r\n    /**\r\n     * 传入 codeType 和  code 获取该code 对应的name值\r\n     * @param {String} codeType  数据类型\r\n     * @param {String} code  代码值\r\n     * @returns {String} 返回codeType类型下，code对应的中文名称\r\n     */\r\n    getCodeToName: function (codeType, code) {\r\n        let _name = '';\r\n        // 目标对象\r\n        const _targetObj = this[`table${codeType}`];\r\n        // 判断是否存在该类型\r\n        if (Object.prototype.toString.call(_targetObj) === '[object Object]') {\r\n            // 在意外（自定义/继承）成员上进行可能的迭代，可能缺少属性检查\r\n            // 做了个这个判断。 hasOwnProperty\r\n            if (_targetObj.hasOwnProperty(`table${code}`)) {\r\n                _name = _targetObj[`table${code}`];\r\n            }\r\n        }\r\n        return _name;\r\n    },\r\n\r\n    /**\r\n     * 传入 codeType 和  code 获取该code 对应的name值\r\n     * @param {String} codeType  数据类型\r\n     * @param {Array} dataList  代码值\r\n     * @returns {String} 返回codeType类型下，code对应的中文名称\r\n     */\r\n    setCodeTypeData(codeType, dataList) {\r\n        if (codeType === this.zJCodeType || codeType === this.gbglqxCodeType) {\r\n            this[`table${codeType}`] = dataList;\r\n            return;\r\n        }\r\n        // 按照codeType 创建一个新对象\r\n        this[`table${codeType}`] = {};\r\n        // 循环数据\r\n        dataList.forEach((item) => {\r\n            // 给新对象添加子属性\r\n            this[`table${codeType}`][`table${item.code}`] = item.name;\r\n        });\r\n    }\r\n};\r\n\r\nwindow.fdDataTable = _fdDataTable;\r\n\r\nexport default _fdDataTable;\r\n","/**\r\n *@file config.js\r\n *@version 1.0.0\r\n *@author wanghuifeng\r\n *@createTime 2020/12/24 - 20:37\r\n *@updateTime 2020/12/28 - 20:37\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n * @description    server-config.js.js ,所有服务器的url配置\r\n */\r\n// 服务数据\r\nconst serverUrl = {\r\n    // 登录\r\n    login: '',\r\n    // 查询项\r\n    cxx: {\r\n        // 获取查询项的几大行业数据 【查询项左边树状结构】GET\r\n        getCxxAsideTree: '/api/cxx/select',\r\n        // 获取【获取内容列表】 =>银行和城市的数据【查询项扩展项树状】 [POST]\r\n        getContentList: '/api/cxx/extend'\r\n    },\r\n    // 审批表\r\n    spb: {\r\n        // 获取单值代码， 只有职级和干部管理权限【审批表页面的单值代码】GET\r\n        getCodes: '/api/spd/code',\r\n        // 获取默认的基本信息的数据 【新建审批单时，页面的展示内容】GET\r\n        getDefaultData: '/api/spd/creation/content',\r\n        // 【GET】 常用审批人\r\n        cyspr: '/api/v1/cxsq/cyspr',\r\n        // 【POST】 审批记录\r\n        spjl: '/api/v1/cxsq/spjl',\r\n        // 获取审批流程类型 GET\r\n        approvalMethodType:'/api/v1/cxsq/approvalMethodType',\r\n        // 根据jbxx的主键获取审批记录表的信息\r\n        getShjlByJbxxCid:'/api/v1/cxjcjl/getShjlByJbxxCid',\r\n        // 导入查询对象 POST\r\n        uploadBdcdx:'/api/spd/bdcdx/excel',\r\n        // 确定导入查询对象 POST\r\n        confirmDrcxdx:'/api/spd/bdcdx/excel/confirm',\r\n        // 获取审批表数据 GET  编辑 {cBh}\r\n        getSpbData:'/api/spd/forms/',\r\n        // 获取线上审批流程类型 GET\r\n        multipleSplz:'/api/v1/cxsq/multiple',\r\n        // 保存(新建和更新)审批表数据 POST + saveType\r\n        // '/api/spd/forms/{saveType}'\r\n        saveType:'/api/spd/forms/',\r\n\r\n        // @TODO 暂时未用到 2020-01-11\r\n        // 草稿状态发起审批或再次发起审批或结束审批 POST\r\n        applyAgain:'/api/spd/applyAgain',\r\n        // 查询申请单草稿状态直接提交线下审批 POST\r\n        formPlus:'/api/spd/formPlus'\r\n    },\r\n    bankCode: {\r\n        getBankCode: '/api/bankcode/getBankCodes'\r\n    }\r\n};\r\nexport default serverUrl;\r\n","/**\n *@file config.js\n *@version 1.0.0\n *@author wanghuifeng\n *@createTime 2020/12/24 - 20:37\n *@updateTime 2020/12/28 - 20:37\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\n *@description    config.js ,所有的配置文件\n *                      详细说明看注释  !important\n */\n// 服务器配置\nimport serverUrl from './server-config.js';\n// let production = process.env.NODE_ENV !== 'production'\n// 默认开发环境\nconst develop = false;\n// 配置文件\nconst config = {\n    //  是否是调试模式，true 为json数据，false 为服务器数据\n    isDebug: develop,\n    // ajax查询方式   GET\n    methodGet: 'GET',\n    // ajax查询方式  POST\n    methodPost: develop ? 'GET' : 'POST',\n    // ajax查询方式  PUT\n    methodPut: develop ? 'GET' : 'PUT',\n    // ajax查询方式  DELETEsocketio\n    methodDelete: develop ? 'GET' : 'DELETE',\n    // ajax查询方式  PATCH\n    methodPatch: develop ? 'GET' : 'PATCH',\n    //  url链接,也就是数据的地址\n    url: {},\n    // 是否显示日志\n    showLog: true\n};\n// 本地数据\nconst localUrl = {\n    // 登录\n    login: '',\n    // 查询项\n    cxx: {\n        // 获取查询项的几大行业数据\n        getCxxAsideTree: './static/json/cxx/asideTree.json',\n        // 银行业金融机构=> 账户信息: 001001001.json\n        // 银行业金融机构=> 交易流水: 001001002.json\n        // 银行业金融机构=> 金融理财: 001001003.json\n\n        // 工信部=> 登记信息: 003001001.json\n        // 工信部=> 话单信息: 003001002.json\n\n        // 自然资源部=> 不动产（精准查询）: 004002002.json\n        // 获取【获取内容列表】 =>银行和城市的数据【查询项扩展项树状】 [POST]， 包含以以上\n        // getContentList + id.json\n        getContentList: './static/json/cxx/extend/'\n    },\n    // 审批表\n    spb: {\n        // 获取单值代码， 只有职级和干部管理权限【审批表页面的单值代码】GET\n        getCodes: './static/json/spb/codes.json',\n        // 获取默认的基本信息的数据 【新建审批单时，页面的展示内容】GET\n        getDefaultData: './static/json/spb/defaultData.json',\n        // 【GET】 常用审批人\n        cyspr: './static/json/spb/cyspr.json',\n        // 【POST】 审批记录\n        spjl: './static/json/spb/spjl.json',\n        // 获取审批流程类型 GET\n        approvalMethodType: './static/json/spb/approvalMethodType.json',\n        // 根据jbxx的主键获取审批记录表的信息\n        getShjlByJbxxCid: './static/json/spb/shjlByJbxxCid.json',\n        // 导入查询对象 POST\n        uploadBdcdx: './static/json/spb/uploadBdcdx.json',\n        // 确定导入查询对象 POST\n        confirmDrcxdx: './static/json/spb/confirmDrcxdx.json',\n        // 获取审批表数据 GET  编辑 {cBh}\n        getSpbData:'./static/json/spb/spbData.json',\n        // 获取线上审批流程类型 GET\n        multipleSplz:'./static/json/spb/multipleSplz.json'\n    },\n    artery:{\n        // 【审批表】=》【基本信息】获取【查询申请人】以及【协助查询人】的组织机构树数据\n        getOrganChildren: './static/json/spb/organChildren.json',\n        // 【提交线上审批】=》【审批流转】 组织人员\n        getOrganChildrenSplz: './static/json/spb/splzZzry.json'\n    }\n};\nconfig.url = config.isDebug ? localUrl : serverUrl;\n//  注册全局变量，fdConfig\nwindow.fdConfig = config;\n","/**\r\n * @version 20190401\r\n * @author wuwg\r\n * @createTime  20190410\r\n * @updateTime  20190410\r\n */\r\n\r\n/**\r\n * @function\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @alias FdGlobal.debounce\r\n * @description  函数防抖，用于性能优化\r\n * @param {function} fn  需要防抖的函数\r\n * @param {object} contentText 上下文，也就是对象本身\r\n * @param {number} delay 需要延迟的时间（毫秒数）\r\n * @returns {Function} 返回一个函数\r\n * @example\r\n * <h1>【实例1】addEventListener 方式</h1>\r\n *<input type=\"text\" name=\"test\"  id=\"jsInput\"  >\r\n * <script>\r\n * function doThing() {\r\n *     console.log(this)\r\n *     console.log('需要做的事情 ')\r\n * }\r\n * //  addEventListener 方式\r\n * document.querySelector('#jsInput').addEventListener('input',debounce(doThing,document.querySelector('#jsInput'),1000),false);\r\n * </script>\r\n * <h1>【实例2】元素上直接绑定的方式</h1>\r\n *<input type=\"text\" name=\"test\" oninput=\"inputMethod()\"   >\r\n * <script>\r\n * function doThing() {\r\n *     console.log(this)\r\n *     console.log('需要做的事情 ')\r\n * }\r\n * // 先声明方法\r\n * let inputMethod = debounce(doThing,document.querySelector('#jsInput'), 1000);\r\n * </script>\r\n *\r\n *【vue实例3】\r\n *<div id=\"jsApp\">\r\n *   <button  @click=\"clickDebounce(5)\" id=\"jsButton\">click</button>\r\n *   <test  @change=\"changeHandler\"></test>\r\n *</div>\r\n *<script>\r\n * function doThing(num) {\r\n *     console.log(num)\r\n *     console.log(this)\r\n *     console.log('需要做的事情 ')\r\n * }\r\n *   new Vue({\r\n *    el:'#jsApp',\r\n *    components:{\r\n *        test:{\r\n *          template: '<div><button @click=\"clickHandler\">點擊我</button></div>',\r\n *          methods:{\r\n *             clickHandler:function () {\r\n *              this.$emit('change', 5)\r\n *             }\r\n *\r\n *          }\r\n *        }\r\n *\r\n *    },\r\n *    methods:{\r\n *      clickDebounce:debounce(doThing,document.querySelector('#jsButton'), 1000),\r\n *      changeHandler:debounce(doThing)\r\n *    }\r\n *  })\r\n * </script>\r\n */\r\nexport default (fn, contentText, delay) => {\r\n    let waiting;\r\n    let _delay = 50;\r\n    _delay = typeof delay === 'number' ? delay : _delay;\r\n    const later = (_arguments) => {\r\n        waiting = false;\r\n        fn.apply(contentText, _arguments);\r\n    };\r\n    // 注意，這裏不用使用箭頭函數，否則獲取不到傳遞的參數\r\n    return function () {\r\n        const _arguments = arguments;\r\n        if (waiting) {\r\n            clearTimeout(waiting);\r\n        }\r\n        // 执行回调函数\r\n        waiting = setTimeout(() => {\r\n            later(_arguments);\r\n        }, _delay);\r\n    };\r\n};\r\n","/**\r\n * @version 1.0.1\r\n * @author wuwg\r\n * @createTime  20190815\r\n * @updateTime  20190815\r\n * @decription  绑定|取消事件函数\r\n */\r\nexport default {\r\n\r\n    /**\r\n     * @function\r\n     * @name  on\r\n     * @version 1.0.1\r\n     * @author wuwg  <wuwg@thunisoft.com>\r\n     * @memberof  FdGlobal\r\n     * @description  为元素或对象绑定事件\r\n     * @time 2019-08-15\r\n     * @param {object} element 需要解除事件的对象或者元素\r\n     * @param {string}  event  需要解除的事件名\r\n     * @param {function} handler  解除事件的回调函数\r\n     * @param {boolean} capture  是否采用捕获，默认为false\r\n     * @return {undefined} 无返回值\r\n     * @example  FdGlobal.on(window, 'resize', function(){})\r\n     */\r\n    on: (() => {\r\n        // 如果是非ie\r\n        if (document.addEventListener) {\r\n            return (element, event, handler, capture) => {\r\n                if (element && event && handler) {\r\n                    element.addEventListener(event, handler, Object.prototype.toString.call(capture) === '[object Boolean]' ? capture : false);\r\n                }\r\n            };\r\n        }\r\n        // 如果是ie\r\n        return (element, event, handler) => {\r\n            if (element && event && handler) {\r\n                element.attachEvent(`on${event}`, handler);\r\n            }\r\n        };\r\n    })(),\r\n\r\n    /**\r\n     *\r\n     * @function\r\n     * @name  FdGlobal.off\r\n     * @version 1.0.1\r\n     * @author wuwg  <wuwg@thunisoft.com>\r\n     * @alias   FdGlobal.off\r\n     * @description      解除为元素或对象的事件\r\n     * @param {object} element    需要解除事件的对象或者元素\r\n     * @param {string}  event  需要解除的事件名\r\n     * @param {function} handler  解除事件的回调函数\r\n     * @param {boolean} capture  是否采用捕获，默认为false\r\n     * @return {undefined} 无返回值\r\n     * @example  FdGlobal.off(window, 'resize', function(){})\r\n     */\r\n    off: (() => {\r\n        // 如果是非ie\r\n        if (document.removeEventListener) {\r\n            return (element, event, handler, capture) => {\r\n                if (element && event) {\r\n                    element.removeEventListener(event, handler, Object.prototype.toString.call(capture) === '[object Boolean]' ? capture : false);\r\n                }\r\n            };\r\n        }\r\n        // 如果是ie\r\n        return (element, event, handler) => {\r\n            if (element && event) {\r\n                element.detachEvent(`on${event}`, handler);\r\n            }\r\n        };\r\n    })()\r\n};\r\n","/**\r\n * @file  performance.js\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @description  performance 属于FdLobal对象。fdGlobal.performance. 执行时间\r\n * @createTime  2019-08-13\r\n * @copyright thunisoft fd\r\n * @see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n * @updateTime  2019-08-13\r\n * @update  1.将css集成到此文件，另外将方法进行模块化封装 2019-06-04\r\n */\r\n\r\n/**\r\n * @namespace performance\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @description  performance 属于FdLobal对象。fdGlobal.performance. 执行时间\r\n * @see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n */\r\n/* (function (factory) {\r\n    /!* eslint-disable *!/\r\n    if (typeof (define) === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define('performance', [], factory)\r\n    } else if (typeof(exports) === 'object') {\r\n        // Node/CommonJS style for Browserify\r\n        module.exports = factory();\r\n    } else {\r\n        fdPerformance = factory();\r\n    }\r\n})(function () {*/\r\n/* eslint-enable */\r\nconst fdPerformance = {\r\n\r\n    /**\r\n         *\r\n         * @function\r\n         * @name start\r\n         * @version 1.0.1\r\n         * @author wuwg  <wuwg@thunisoft.com>\r\n         * @memberof performance\r\n         * @description   开启【时间消耗工具】\r\n         * @param  {date} time 开始时间\r\n         * @return {undefined} 无返回值\r\n         * @example  performance.start()\r\n         */\r\n    start(time) {\r\n        this.create(true, time);\r\n    },\r\n\r\n    /**\r\n         *\r\n         * @function\r\n         * @name  stop\r\n         * @version 1.0.1\r\n         * @author wuwg  <wuwg@thunisoft.com>\r\n         * @memberof performance\r\n         * @description   终止【时间消耗工具】\r\n         * @return {undefined} 无返回值\r\n         * @example  performance.stop()\r\n         */\r\n    stop() {\r\n        this._recodeTime = false;\r\n        // 移除元素\r\n        this._body.removeChild(this._recodeTimePanel);\r\n        // 清除事件\r\n        this._button.onclick = null;\r\n        // 清空引用\r\n        this._button = null;\r\n        this._body = null;\r\n        this._recodeTimePanel = null;\r\n    },\r\n\r\n    /**\r\n         *\r\n         * @function\r\n         * @name create\r\n         * @version 1.0.1\r\n         * @author wuwg  <wuwg@thunisoft.com>\r\n         * @memberof performance\r\n         * @description   创建记录【时间消耗的面板】\r\n         * @param  {boolean} flag flag为true代表创建时间记录面板，为false不创建时间记录面板\r\n         * @param  {date} time 开始时间\r\n         * @return {undefined} 无返回值\r\n         * @example  performance.create()\r\n         */\r\n    create(flag = false, time) {\r\n        // 如果存在，那么就先移除\r\n        if (this._recodeTimePanel) {\r\n            this.stop();\r\n        }\r\n        // 是否记录时间\r\n        this._recodeTime = flag;\r\n        if (this._recodeTime) {\r\n            this._body = document.querySelector('body');\r\n            // 创建面板\r\n            this._recodeTimePanel = document.createElement('div');\r\n            this._recodeTimePanel.setAttribute('class', 'fd-record-panel');\r\n            const _style = [\r\n                'position: fixed',\r\n                'bottom: 10px',\r\n                'right: 10px',\r\n                'z-index: 99',\r\n                'padding: 10px',\r\n                'width: 500px',\r\n                'height: 600px',\r\n                'overflow: auto',\r\n                'border-radius: 5px',\r\n                'box-shadow: 0 0 5px rgba(0,0,0,0.5)',\r\n                'background-color: #fff'\r\n            ];\r\n                // 添加样式\r\n            this._recodeTimePanel.setAttribute('style', _style.join(';'));\r\n            this._button = document.createElement('button');\r\n            // 添加样式\r\n            this._button.setAttribute('style', 'cursor:pointer;width:60px;height:30px;');\r\n            this._button.innerText = '清空';\r\n            this._button.onclick = () => {\r\n                this.performancePanel.innerHTML = '';\r\n            };\r\n            this.performancePanel = document.createElement('div');\r\n            // 添加样式\r\n            this.performancePanel.setAttribute('style', 'color: #999;font:14px/24px \"Microsoft YaHei\";');\r\n            this._recodeTimePanel.appendChild(this._button);\r\n            this._recodeTimePanel.appendChild(this.performancePanel);\r\n            this._body.appendChild(this._recodeTimePanel);\r\n            // 开始时间\r\n            this.setStartTime(time || new Date().getTime());\r\n        }\r\n    },\r\n\r\n    /**\r\n         *\r\n         * @function\r\n         * @name  setStartTime\r\n         * @version 1.0.1\r\n         * @author wuwg  <wuwg@thunisoft.com>\r\n         * @memberof performance\r\n         * @description   重新设置【时间消耗工具】的开始时间\r\n         * @param  {Date.getTime} startTime 开始时间，必须为毫秒数\r\n         * @return {undefined} 无返回值\r\n         * @example  performance.setStartTime(new Date().getTime())\r\n         */\r\n    setStartTime(startTime) {\r\n        this.startTime = startTime;\r\n    },\r\n\r\n    /**\r\n         *\r\n         * @function\r\n         * @name  getCurrentTime\r\n         * @version 1.0.1\r\n         * @author wuwg  <wuwg@thunisoft.com>\r\n         * @memberof performance\r\n         * @description   获取当前时间，毫秒时间\r\n         * @return {Date} 返回当前时间\r\n         * @example  performance.getCurrentTime()\r\n         */\r\n    getCurrentTime() {\r\n        return new Date().getTime();\r\n    },\r\n\r\n    /**\r\n         *\r\n         * @function\r\n         * @name  execute\r\n         * @version 1.0.1\r\n         * @author wuwg  <wuwg@thunisoft.com>\r\n         * @memberof performance\r\n         * @description   记录代码运行到这里，消耗的时间日志\r\n         * @param {string} methodName 方法名\r\n         * @param {Date} startTime 可选参数，传递了第二个参数，说明是【测试方法】耗时，不传，那么是记录页面运行到这里的整体耗时。\r\n         * @return {undefined} 无返回值\r\n         * @example\r\n         * // 1.不带第二个参数\r\n         * performance.execute('页面加载到此处消耗的时间')\r\n         * // 2.带第二个参数\r\n         * performance.execute('页面加载到此处消耗的时间', startTime)\r\n         */\r\n    execute(methodName = '页面加载到此处消耗的时间：', startTime) {\r\n        if (this._recodeTime) {\r\n            // 传递了第二个参数，说明是【测试方法】耗时\r\n            const _isTestMethod = Boolean(startTime);\r\n            let _color = 'green';\r\n            const _startTime = _isTestMethod ? startTime : this.startTime;\r\n            const _endTime = new Date().getTime();\r\n            const _expenseTime = _endTime - _startTime;\r\n            const _maxExpenseTime = 100;\r\n            const _item = document.createElement('div');\r\n            // 如果是【测试方法】耗时\r\n            if (_isTestMethod) {\r\n                if (_expenseTime > _maxExpenseTime) {\r\n                    _color = 'red';\r\n                }\r\n                _item.setAttribute('style', `color:${_color}`);\r\n            }\r\n            _item.innerHTML = `${methodName}${_expenseTime}ms`;\r\n            this.performancePanel.appendChild(_item);\r\n        }\r\n    }\r\n};\r\n// });\r\n// 如果是非模块化的，请注释下面的这行代码\r\n// 2019-06-04 todo\r\nexport default fdPerformance;\r\n","/**\r\n * @file  log.js\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @description  log属于FdLobal对象。fdGlobal.log. 日志对象\r\n * @copyright thunisoft fd\r\n * @see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n */\r\n// let fdLog;\r\n\r\n/**\r\n * @namespace log\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @description  log属于FdLobal对象。fdGlobal.log. 日志对象\r\n * @copyright thunisoft fd\r\n * @see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n */\r\n/* (function (factory) {\r\n    /!* eslint-disable *!/\r\n    if (typeof (define) === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define('performance', [], factory)\r\n    } else if (typeof(exports) === 'object') {\r\n        // Node/CommonJS style for Browserify\r\n        module.exports = factory();\r\n    } else {\r\n        fdLog = factory();\r\n    }\r\n})(function () {*/\r\n/* eslint-enable */\r\nconst fdLog = {\r\n\r\n    /**\r\n         *\r\n         * @function\r\n         * @name start\r\n         * @version 1.0.1\r\n         * @author wuwg  <wuwg@thunisoft.com>\r\n         * @memberof log\r\n         * @description   开启【日志记录工具】\r\n         * @return {undefined} 无返回值\r\n         * @example  log.start()\r\n         */\r\n    start() {\r\n        this.create(true);\r\n    },\r\n\r\n    /**\r\n         *\r\n         * @function\r\n         * @name  stop\r\n         * @version 1.0.1\r\n         * @author wuwg  <wuwg@thunisoft.com>\r\n         * @memberof log\r\n         * @description   终止【日志记录工具】\r\n         * @return {undefined} 无返回值\r\n         * @example  log.stop()\r\n         */\r\n    stop() {\r\n        this._recodeLog = false;\r\n        this.body.removeChild(this._logPanelWrap);\r\n        this._logPanelWrap = null;\r\n    },\r\n\r\n    /**\r\n         *\r\n         * @function\r\n         * @name create\r\n         * @version 1.0.1\r\n         * @author wuwg  <wuwg@thunisoft.com>\r\n         * @memberof log\r\n         * @description   创建记录【日志的面板】\r\n         * @param  {boolean} flag flag为true代表创建日志记录面板，为false不创建日志记录面板\r\n         * @return {undefined} 无返回值\r\n         * @example  log.create()\r\n         */\r\n    create(flag = false) {\r\n        // 如果存在，那么就先移除\r\n        if (this._logPanelWrap) {\r\n            this.stop();\r\n        }\r\n        // 是否记录日志\r\n        this._recodeLog = flag;\r\n        if (this._recodeLog) {\r\n            this._body = document.querySelector('body');\r\n            // 创建面板\r\n            this._logPanelWrap = document.createElement('div');\r\n            const _style = [\r\n                'position: fixed',\r\n                'bottom: 10px',\r\n                'left: 10px',\r\n                'z-index: 99',\r\n                'padding: 10px',\r\n                'width: 500px',\r\n                'height: 300px',\r\n                'overflow: auto',\r\n                'border-radius: 5px',\r\n                'box-shadow: 0 0 5px rgba(0,0,0,0.5)',\r\n                'background-color: #fff'\r\n            ];\r\n                // 添加样式\r\n            this._logPanelWrap.setAttribute('style', _style.join(';'));\r\n            const _button = document.createElement('button');\r\n            // 添加样式\r\n            _button.setAttribute('style', 'cursor:pointer;width:60px;height:30px;');\r\n            _button.innerText = '清空';\r\n            _button.onclick = () => {\r\n                this._logPanel.innerHTML = '';\r\n            };\r\n            this._logPanel = document.createElement('div');\r\n            // 添加样式\r\n            this._logPanel.setAttribute('style', 'color: #333;font:14px/24px \"Microsoft YaHei\";');\r\n            this._logPanelWrap.appendChild(_button);\r\n            this._logPanelWrap.appendChild(this._logPanel);\r\n            this.body.appendChild(this._logPanelWrap);\r\n        }\r\n    },\r\n\r\n    /**\r\n         *\r\n         * @function\r\n         * @name  setRecodeLog\r\n         * @version 1.0.1\r\n         * @author wuwg  <wuwg@thunisoft.com>\r\n         * @memberof log\r\n         * @description  重新设置【日志记录工具】的记录状态\r\n         * @param  {Boolean} recodeLogFlag 设置记录的状态， 为true， 开启日志记录， false， 终止日志记录\r\n         * @return {undefined} 无返回值\r\n         * @example  log.setRecodeLog(true)\r\n         */\r\n    setRecodeLog(recodeLogFlag) {\r\n        this._recodeLog = recodeLogFlag;\r\n    },\r\n\r\n\r\n    /**\r\n         *\r\n         * @function\r\n         * @name  execute\r\n         * @version 1.0.1\r\n         * @author wuwg  <wuwg@thunisoft.com>\r\n         * @memberof log\r\n         * @description   生成日志的方法\r\n         * @param {string} information 日志信息\r\n         * @param {string=} [color=green]  可选参数，日志的颜色\r\n         * @return {undefined} 无返回值\r\n         * @example\r\n         * // 1.不带第二个参数\r\n         * // 单条日志\r\n         * log.execute('日志记录')\r\n         * // 多条日志\r\n         * log.execute(['日志1','日志2'])\r\n         * // 2.带第二个参数\r\n         * log.execute('日志记录', 'red')\r\n         */\r\n    execute(information = '日志记录：', color = 'green') {\r\n        let _information = information;\r\n        if (this._recodeLog) {\r\n            // 如果是非数组\r\n            if (!Array.isArray(_information)) {\r\n                _information = [_information];\r\n            }\r\n            _information.forEach((item) => {\r\n                const _item = document.createElement('div');\r\n                _item.innerHTML = `<p>【日志】：${item}</p>`;\r\n                _item.setAttribute('style', `color:${color};`);\r\n                this._logPanel.appendChild(_item);\r\n            });\r\n            // 换行\r\n            const _itemBr = document.createElement('br');\r\n            this._logPanel.appendChild(_itemBr);\r\n        }\r\n    }\r\n};\r\n// });\r\n// 如果是模块化的，请注释下面的这行代码\r\n// 2019-06-04 todo\r\nexport default fdLog;\r\n","/**\r\n *@file console\r\n *@version 1.0.1\r\n *@author wuwg\r\n *@createTime 2019/8/25 - 16:47\r\n *@updateTime 2019/8/25 - 16:47\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description console 日志模块。包含四个方法consoleLogRequest，consoleLogResponse， consoleLogError， consoleLog\r\n */\r\nexport default {\r\n\r\n    /**\r\n     * 注意不能加@name属性，否则显示jsdoc无法准确的生成文档\r\n     * @function\r\n     * @version 1.0.1\r\n     * @author wuwg  <wuwg@thunisoft.com>\r\n     * @alias FdGlobal.consoleLogRequest\r\n     * @description  为了统一管理request(请求)日志\r\n     * @time 2018-08-25\r\n     * @param {boolean} showLog 是否输出日志\r\n     * @param {string} name  模块名称\r\n     * @param {string} method  请求方式  post,get，delete，.etc,\r\n     * @param {string} url 请求的url\r\n     * @param {object} requestData 请求的数据\r\n     * @returns {undefined} 无返回值\r\n     */\r\n    consoleLogRequest(showLog, name, method, url, requestData) {\r\n        if (showLog) {\r\n            window.console.log(`[[模块名称]]==>${name}`);\r\n            window.console.log('[[前台]]==>请求方式是');\r\n            window.console.log(method);\r\n            window.console.log('[[前台]]==>请求的url是');\r\n            window.console.log(url);\r\n            window.console.log('[[前台]]==>请求的数据是');\r\n            window.console.log(requestData);\r\n            window.console.log('\\n');\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 注意不能加@name属性，否则显示jsdoc无法准确的生成文档\r\n     * @function\r\n     * @version 1.0.1\r\n     * @author wuwg  <wuwg@thunisoft.com>\r\n     * @alias FdGlobal.consoleLogResponse\r\n     * @description  为了统一管理response(响应)日志，\r\n     * @time   2018-08-25\r\n     * @param {boolean} showLog 是否输出日志\r\n     * @param {string} name 模块名称\r\n     * @param {object} responseData  后台返回的数据\r\n     * @returns {undefined} 无返回值\r\n     */\r\n    consoleLogResponse(showLog, name, responseData) {\r\n        if (showLog) {\r\n            window.console.log(`%c【模块名称】==>${name}`, 'color:#00cc66');\r\n            window.console.log('%c【后台】==>返回的数据是', 'color:#00cc66');\r\n            window.console.dir(responseData);\r\n            window.console.log('\\n');\r\n            window.console.log('\\n');\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 注意不能加@name属性，否则显示jsdoc无法准确的生成文档\r\n     * @function\r\n     * @version 1.0.1\r\n     * @author wuwg  <wuwg@thunisoft.com>\r\n     * @alias FdGlobal.requestError\r\n     * @description  为了统一管理error(错误)日志，\r\n     * @time   2018-08-25\r\n     * @param {object} name  模块名称\r\n     * @param {object} data  报错的数据对象\r\n     * @param  {number} textStatus 错误的状态码\r\n     * @param  {object} errorThrown 全量的异常\r\n     * @returns {undefined} 无返回值\r\n     */\r\n    consoleLogError(name, data, textStatus, errorThrown) {\r\n        // 2018-03-21 ，ie会直接弹窗报错，所用 try{}catch(e){}\r\n        try {\r\n            window.console.log(`[[模块名称]]==>${name}`);\r\n            window.console.error('请求数据发生了错误，错误数据为：');\r\n            window.console.error(data);\r\n            if (textStatus) {\r\n                window.console.error(textStatus);\r\n            }\r\n            if (errorThrown) {\r\n                window.console.error(errorThrown);\r\n            }\r\n        } catch (e) {\r\n            // console.log(e)\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 注意不能加@name属性，否则显示jsdoc无法准确的生成文档\r\n     * @function\r\n     * @version 1.0.1\r\n     * @author wuwg  <wuwg@thunisoft.com>\r\n     * @alias FdGlobal.consoleLog\r\n     * @description  为了统一管理log日志，\r\n     * @time 2018-03-21\r\n     * @param {boolean} showLog   是否输出日志\r\n     * @param {*}  logInfo  要输出的日志信息,任意数据类型皆可\r\n     *  @returns {undefined} 无返回值\r\n     */\r\n    consoleLog(showLog, logInfo) {\r\n        if (showLog) {\r\n            window.console.log(logInfo);\r\n        }\r\n    }\r\n};\r\n","/**\r\n * @file  browser.js\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @description  log属于FdLobal对象。fdGlobal.browser. 浏览器对象\r\n * @copyright thunisoft fd\r\n * @see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n */\r\n\r\n/**\r\n * @namespace browser\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @description  一个判断浏览器的对象\r\n * @copyright thunisoft fd\r\n * @see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n */\r\n/* let fdBrowser;\r\n(function (factory) {\r\n    /!* eslint-disable *!/\r\n    if (typeof (define) === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define('performance', [], factory)\r\n    } else if (typeof(exports) === 'object') {\r\n        // Node/CommonJS style for Browserify\r\n        module.exports = factory();\r\n    } else {\r\n        fdBrowser = factory();\r\n    }\r\n})(function () {*/\r\nconst agent = navigator.userAgent.toLowerCase();\r\nconst opera = window.opera;\r\n// 常量\r\nconst NUM_2 = 2;\r\nconst NUM_6 = 6;\r\nconst NUM_7 = 7;\r\nconst NUM_8 = 8;\r\nconst NUM_9 = 9;\r\nconst NUM_9_5 = 9.5;\r\nconst NUM_10 = 10;\r\nconst NUM_11 = 11;\r\nconst NUM_100 = 100;\r\nconst NUM_522 = 522;\r\nconst NUM_10000 = 10000;\r\nconst NUM_10801 = 10801;\r\n// 对象\r\nconst browser = {\r\n\r\n    /**\r\n     * @memberof browser\r\n     * @description  检测当前浏览器是否为移动端\r\n     * @return  {boolean} 返回一个boolean值\r\n     * @example\r\n     * if (browser.isMobile()) {\r\n         *     console.log('当前浏览器是isMobile');\r\n         * }\r\n     */\r\n    isMobile:() => {\r\n        const isIphone = agent.indexOf('iphone') !== -1;\r\n        const isAndroid = agent.indexOf('android') !== -1;\r\n        const isIPad = agent.indexOf('ipad') !== -1;\r\n        const isIPod = agent.indexOf('ipod') !== -1;\r\n        const isIEMobile = agent.indexOf('iemobile') !== -1;\r\n        const isWebOS = agent.indexOf('webos') !== -1;\r\n        const isBlackBerry = agent.indexOf('blackberry') !== -1;\r\n        const isOperaMini = agent.indexOf('opera mini') !== -1;\r\n        return (isIphone || isAndroid || isIPad || isIPod || isIEMobile || isWebOS || isBlackBerry || isOperaMini);\r\n    },\r\n\r\n    /**\r\n         * @function\r\n         * @name isIe\r\n         * @memberof browser\r\n         * @description  检测当前浏览器是否为IE\r\n         * @param {Number} [version]  可选参数，如果传了，判断当前浏览器的ie什么版本，否则只判断当前浏览器是否属于ie\r\n         * @return  {boolean} 返回一个boolean值\r\n         * @property {boolean} ie 检测当前浏览器是否为IE\r\n         * @example\r\n         * if (browser.isIe()) {\r\n         *   console.log('当前浏览器是IE');\r\n         * }\r\n         */\r\n    isIe: (version) => {\r\n        if (typeof version === 'number') {\r\n            // 是ie浏览器，并且版本号相等\r\n            return browser.isIe() && browser.getVersion() === version;\r\n        }\r\n        return (/(msie\\s|trident.*rv:)([\\w.]+)/).test(agent);\r\n    },\r\n\r\n    /**\r\n         * @memberof browser\r\n         * @description  检测当前浏览器是否为Opera\r\n         * @return  {boolean} 返回一个boolean值\r\n         * @example\r\n         * if (browser.isOpera()) {\r\n         *     console.log('当前浏览器是Opera');\r\n         * }\r\n         */\r\n    isOpera: () => (Boolean(opera) && opera.version),\r\n\r\n    /**\r\n         * @memberof browser\r\n         * @description  检测当前浏览器是否为chrome\r\n         * @return  {boolean} 返回一个boolean值\r\n         * @example\r\n         * if (browser.isChrome()) {\r\n         *     console.log('当前浏览器是chrome');\r\n         * }\r\n         */\r\n    isChrome: () => (/chrome\\/(\\d+\\.\\d)/i).test(agent),\r\n\r\n    /**\r\n         * @memberof browser\r\n         * @description  检测当前浏览器是否为Safari\r\n         * @return  {boolean} 返回一个boolean值\r\n         * @example\r\n         * if (browser.isSafari()) {\r\n         *     console.log('当前浏览器是Safari');\r\n         * }\r\n         */\r\n    isSafari: () => (/(\\d+\\.\\d)?(?:\\.\\d)?\\s+safari\\/?(\\d+\\.\\d+)?/i).test(agent) && !(/chrome/i).test(agent),\r\n\r\n    /**\r\n         * @memberof browser\r\n         * @description  检测当前浏览器是否是webkit内核的浏览器\r\n         * @return  {boolean} 返回一个boolean值\r\n         * @example\r\n         * if (browser.isWebkit()) {\r\n         *     console.log('当前浏览器是webkit内核浏览器');\r\n         * }\r\n         */\r\n    isWebkit: () => (agent.indexOf('applewebkit/') > -1),\r\n\r\n    /**\r\n         * @memberof browser\r\n         * @description 检测当前浏览器是否是运行在mac平台下\r\n         * @return  {boolean} 返回一个boolean值\r\n         * @example\r\n         * if (browser.isMac()) {\r\n         *     console.log('当前浏览器运行在mac平台下');\r\n         * }\r\n         */\r\n    isMac: () => (agent.indexOf('macintosh') > -1),\r\n\r\n    /**\r\n         * @memberof browser\r\n         * @description  检测当前浏览器是否处于quirks(“怪异模式”)下\r\n         * @return  {boolean} 返回一个boolean值\r\n         * @example\r\n         * if (browser.isQuirks()) {\r\n         *    console.log('当前浏览器运行处于“怪异模式”');\r\n         * }\r\n         */\r\n    isQuirks: () => (document.compatMode === 'BackCompat'),\r\n\r\n    /**\r\n         * @memberof browser\r\n         * @description  检测当前浏览器内核是否是gecko内核\r\n         * @return  {boolean} 返回一个boolean值\r\n         * @example\r\n         * if (browser.isGecko()) {\r\n        *     console.log('当前浏览器内核是gecko内核');\r\n        * }\r\n         */\r\n    isGecko: () => (navigator.product === 'Gecko' && !browser.isWebkit() && !browser.isOpera() && !browser.isIe()),\r\n\r\n    /**\r\n         * @memberof browser\r\n         * @description  获取当前浏览器的版本号\r\n         *  <ul>\r\n         *     <li>IE系列返回值为5,6,7,8,9,10等</li>\r\n         *     <li>gecko系列会返回10900，158900等, </li>\r\n         *     <li>webkit系列会返回其build号 (如 522等)</li>\r\n         * </ul>\r\n         * @return  {String} 返回当前浏览器的版本号\r\n         * @example\r\n         *     console.log('当前浏览器版本号是' + browser.getVersion());\r\n         */\r\n    getVersion: () => {\r\n        let version = 0;\r\n        // 【ie】Internet Explorer 6.0+\r\n        if (browser.isIe()) {\r\n            const v1 = agent.match(/(?:msie\\s([\\w.]+))/);\r\n            const v2 = agent.match(/(?:trident.*rv:([\\w.]+))/);\r\n            if (v1 && v2 && v1[1] && v2[1]) {\r\n                version = Math.max(Number(v1[1]), Number(v2[1]));\r\n            } else if (v1 && v1[1]) {\r\n                version = Number(v1[1]);\r\n            } else if (v2 && v2[1]) {\r\n                version = Number(v2[1]);\r\n            } else {\r\n                version = 0;\r\n            }\r\n        }\r\n        // WebKit 522+ (Safari 3+)\r\n        if (browser.isWebkit()) {\r\n            version = parseFloat(agent.match(/ applewebkit\\/(\\d+)/)[1]);\r\n        }\r\n        // 【Gecko】\r\n        if (browser.isGecko()) {\r\n            let geckoRelease = agent.match(/rv:([\\d.]+)/);\r\n            if (geckoRelease) {\r\n                geckoRelease = geckoRelease[1].split('.');\r\n                version = geckoRelease[0] * NUM_10000 + (Number(geckoRelease[1]) || 0) * NUM_100 + (Number(geckoRelease[NUM_2]) || 0);\r\n            }\r\n        }\r\n        // 【chrome】 检测当前浏览器是否为Chrome, 如果是，则返回Chrome的大版本号\r\n        if (/chrome\\/(\\d+\\.\\d)/i.test(agent)) {\r\n            // 八进制表示法中 X24 表示 $ 类似x23表示 #\r\n            // 故+ RegExp['\\x241'] 等同RegExp.$1`,用来捕获第一组括号内匹配的数据。\r\n            version = Number(RegExp['\\x241']);\r\n        }\r\n        // 【safari】 检测当前浏览器是否为Safari, 如果是，则返回Safari的大版本号\r\n        if ((/(\\d+\\.\\d)?(?:\\.\\d)?\\s+safari\\/?(\\d+\\.\\d+)?/i).test(agent) && !(/chrome/i).test(agent)) {\r\n            version = Number(RegExp['\\x241'] || RegExp['\\x242']);\r\n        }\r\n\r\n        // 【Opera】 9.50+\r\n        if (browser.isOpera()) {\r\n            version = parseFloat(opera.version());\r\n        }\r\n\r\n        return version;\r\n    },\r\n\r\n    /**\r\n         * @memberof browser\r\n         * @description   检测浏览器模式是否为 IE 兼容模式\r\n         * @param {Number} [version]  可选参数，如果传了，判断当前ie浏览器是什么版本兼容模式，否则只判断当前浏览器是否属于IE 兼容模式\r\n         * @return  {boolean} 返回一个boolean值\r\n         * @example\r\n         * if (browser.isIeCompat()) {\r\n        *     console.log('当前浏览器是IE兼容模式');\r\n        * }\r\n         *   if (browser.isIeCompat(11)) {\r\n        *     console.log('当前浏览器是IE 11 兼容模式');\r\n        * }\r\n         */\r\n    isIeCompat: function (version) {\r\n        // 检测浏览器模式是否为 IE11 兼容模式\r\n        const isIe11Compat = browser.isIe() && document.documentMode === NUM_11;\r\n        //  检测浏览器模式是否为 IE10 兼容模式\r\n        const isIe10Compat = browser.isIe() && document.documentMode === NUM_10;\r\n        //  检测浏览器模式是否为 IE9 兼容模式\r\n        const isIe9Compat = browser.isIe() && document.documentMode === NUM_9;\r\n        // 检测浏览器模式是否为 IE8兼容模式\r\n        const isIe8Compat = browser.isIe() && document.documentMode === NUM_8;\r\n        // 检测浏览器模式是否为 IE7兼容模式\r\n        const isIe7Compat = browser.isIe() && ((browser.getVersion() === NUM_7 && !document.documentMode) || document.documentMode === NUM_7);\r\n        // 检测浏览器模式是否为 IE6兼容模式\r\n        const isIe6Compat = browser.isIe() && (browser.getVersion() < NUM_7 || browser.isQuirks());\r\n        // 结论\r\n        let _flag = false;\r\n        switch (version) {\r\n            case NUM_11 :\r\n                _flag = isIe11Compat;\r\n                break;\r\n            case NUM_10 :\r\n                _flag = isIe10Compat;\r\n                break;\r\n            case NUM_9 :\r\n                _flag = isIe9Compat;\r\n                break;\r\n            case NUM_8 :\r\n                _flag = isIe8Compat;\r\n                break;\r\n            case NUM_7 :\r\n                _flag = isIe7Compat;\r\n                break;\r\n            case NUM_6 :\r\n                _flag = isIe6Compat;\r\n                break;\r\n            default :\r\n                _flag = (isIe11Compat || isIe10Compat || isIe9Compat || isIe8Compat || isIe7Compat || isIe6Compat);\r\n                break;\r\n        }\r\n        return _flag;\r\n    },\r\n\r\n    /**\r\n         * @memberof browser\r\n         * @description   检测当前浏览器是否能够与UEditor良好兼容\r\n         * @return  {boolean} 返回一个boolean值\r\n         * @example\r\n         * if (browser.isCompatible()) {\r\n         *     console.log('浏览器与UEditor能够良好兼容');\r\n         * }\r\n         */\r\n    isCompatible: () => (!browser.mobile && ((browser.isIe() && browser.getVersion() >= NUM_6) ||\r\n        (browser.isGecko() && browser.getVersion() >= NUM_10801) ||\r\n        (browser.isOpera() && browser.getVersion() >= NUM_9_5) ||\r\n        (browser.isWebkit() && browser.getVersion() >= NUM_522) || false))\r\n};\r\n\r\n/*    return browser;\r\n});*/\r\n\r\nexport default browser;\r\n\r\n","/**\r\n *@file ajax\r\n *@version 1.0.1\r\n *@author wuwg\r\n *@createTime 2019/8/27 - 10:53\r\n *@updateTime 2019/8/27 - 10:53\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n *      [axios github]{@link https://github.com/axios/axios}\r\n *      [axios 简书]{@link https://www.jianshu.com/p/7a9fbcbb1114}\r\n *      [axios 简书]{@link https://www.jianshu.com/p/df464b26ae58}\r\n *      [axios 中文文档]{@link https://www.kancloud.cn/yunye/axios/234845 }\r\n @description ajax 的描述\r\n */\r\nimport ajax from 'axios';\r\nimport Vue from 'vue';\r\n// 开始\r\najax.globalBefore = function () {\r\n    // ajax 开始加载\r\n    Vue.prototype.$AjaxLoading.start();\r\n    // 开始加载\r\n    window.postMessage(JSON.stringify({cmd: 'loading-start'}), '*');\r\n};\r\n// 结束\r\najax.globalAfter = function () {\r\n    // ajax 加载结束\r\n    Vue.prototype.$AjaxLoading.finish();\r\n    // 开始加载\r\n    window.postMessage(JSON.stringify({cmd: 'loading-finish'}), '*');\r\n};\r\n// 前置拦截器\r\najax.interceptors.request.use(function (config) {\r\n    const _config = config || {};\r\n    _config.headers = _config.headers || {};\r\n    //  _config.headers['X-Requested-With'] = 'XMLHttpRequest';\r\n    // 如果启用全局事件\r\n    if (!_config.forbidGlobal) {\r\n        // 执行全局函数\r\n        ajax.globalBefore();\r\n    }\r\n    // debugger\r\n    // 前置函数\r\n    if (typeof _config.before === 'function') {\r\n        _config.before();\r\n    }\r\n    return config;\r\n}, function (error) {\r\n    // 对请求错误做些什么\r\n    return Promise.reject(error);\r\n});\r\n// 后置拦截器\r\najax.interceptors.response.use(function (response) {\r\n    if (!response.config.forbidGlobal) {\r\n        // 执行全局函数\r\n        ajax.globalAfter();\r\n    }\r\n    // 后置函数\r\n    if (typeof response.config.after === 'function') {\r\n        response.config.after();\r\n    }\r\n    // 对响应数据做点什么\r\n    return response;\r\n}, function (error) {\r\n    // 执行全局函数\r\n    ajax.globalAfter();\r\n    // 对响应错误做点什么\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default ajax;\r\n\r\n// https://github.com/axios/axios\r\n// https://www.jianshu.com/p/7a9fbcbb1114\r\n// https://www.jianshu.com/p/df464b26ae58 (中文文档)\r\n// https://www.kancloud.cn/yunye/axios/234845   (中文文档)\r\n/*\r\n * request\r\n * config  options\r\n {\r\n // `url` is the server URL that will be used for the request\r\n url: '/user',\r\n\r\n // `method` is the request method to be used when making the request\r\n method: 'get', // default\r\n\r\n // `baseURL` will be prepended to `url` unless `url` is absolute.\r\n // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\r\n // to methods of that instance.\r\n baseURL: 'https://some-domain.com/api/',\r\n\r\n // `transformRequest` allows changes to the request data before it is sent to the server\r\n // This is only applicable for request methods 'PUT', 'POST', and 'PATCH'\r\n // The last function in the array must return spb string or an instance of Buffer, ArrayBuffer,\r\n // FormData or Stream\r\n // You may modify the headers object.\r\n transformRequest: [function (data, headers) {\r\n // Do whatever you want to transform the data\r\n return data;\r\n }],\r\n\r\n // `transformResponse` allows changes to the response data to be made before\r\n // it is passed to then/catch\r\n transformResponse: [function (data) {\r\n // Do whatever you want to transform the data\r\n return data;\r\n }],\r\n\r\n // `headers` are custom headers to be sent\r\n headers: {'X-Requested-With': 'XMLHttpRequest'},\r\n\r\n // `params` are the URL parameters to be sent with the request\r\n // Must be spb plain object or spb URLSearchParams object\r\n params: {\r\n ID: 12345\r\n },\r\n\r\n // `paramsSerializer` is an optional function in charge of serializing `params`\r\n // (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)\r\n paramsSerializer: function(params) {\r\n return Qs.stringify(params, {arrayFormat: 'brackets'})\r\n },\r\n\r\n // `data` is the data to be sent as the request body\r\n // Only applicable for request methods 'PUT', 'POST', and 'PATCH'\r\n // When no `transformRequest` is set, must be of one of the following types:\r\n // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\r\n // - Browser only: FormData, File, Blob\r\n // - Node only: Stream, Buffer\r\n data: {\r\n firstName: 'Fred'\r\n },\r\n\r\n // `timeout` specifies the number of milliseconds before the request times out.\r\n // If the request takes longer than `timeout`, the request will be aborted.\r\n timeout: 1000,\r\n\r\n // `withCredentials` indicates whether or not cross-site Access-Control requests\r\n // should be made using credentials\r\n withCredentials: false, // default\r\n\r\n // `adapter` allows custom handling of requests which makes testing easier.\r\n // Return spb promise and supply spb valid response (see lib/adapters/README.md).\r\n adapter: function (config) {\r\n /!* ... *!/\r\n },\r\n\r\n // `auth` indicates that HTTP Basic auth should be used, and supplies credentials.\r\n // This will set an `Authorization` header, overwriting any existing\r\n // `Authorization` custom headers you have set using `headers`.\r\n auth: {\r\n username: 'janedoe',\r\n password: 's00pers3cret'\r\n },\r\n\r\n // `responseType` indicates the type of data that the server will respond with\r\n // options are 'arraybuffer', 'blob', 'document', 'json', 'text', 'stream'\r\n responseType: 'json', // default\r\n\r\n // `responseEncoding` indicates encoding to use for decoding responses\r\n // Note: Ignored for `responseType` of 'stream' or client-side requests\r\n responseEncoding: 'utf8', // default\r\n\r\n // `xsrfCookieName` is the name of the cookie to use as spb value for xsrf token\r\n xsrfCookieName: 'XSRF-TOKEN', // default\r\n\r\n // `xsrfHeaderName` is the name of the http header that carries the xsrf token value\r\n xsrfHeaderName: 'X-XSRF-TOKEN', // default\r\n\r\n // `onUploadProgress` allows handling of progress events for uploads\r\n onUploadProgress: function (progressEvent) {\r\n // Do whatever you want with the native progress event\r\n },\r\n\r\n // `onDownloadProgress` allows handling of progress events for downloads\r\n onDownloadProgress: function (progressEvent) {\r\n // Do whatever you want with the native progress event\r\n },\r\n\r\n // `maxContentLength` defines the max size of the http response content in bytes allowed\r\n maxContentLength: 2000,\r\n\r\n // `validateStatus` defines whether to resolve or reject the promise for spb given\r\n // HTTP response status code. If `validateStatus` returns `true` (or is set to `null`\r\n // or `undefined`), the promise will be resolved; otherwise, the promise will be\r\n // rejected.\r\n validateStatus: function (status) {\r\n return status >= 200 && status < 300; // default\r\n },\r\n\r\n // `maxRedirects` defines the maximum number of redirects to follow in node.js.\r\n // If set to 0, no redirects will be followed.\r\n maxRedirects: 5, // default\r\n\r\n // `socketPath` defines spb UNIX Socket to be used in node.js.\r\n // e.g. '/var/run/docker.sock' to send requests to the docker daemon.\r\n // Only either `socketPath` or `proxy` can be specified.\r\n // If both are specified, `socketPath` is used.\r\n socketPath: null, // default\r\n\r\n // `httpAgent` and `httpsAgent` define spb custom agent to be used when performing http\r\n // and https requests, respectively, in node.js. This allows options to be added like\r\n // `keepAlive` that are not enabled by default.\r\n httpAgent: new http.Agent({ keepAlive: true }),\r\n httpsAgent: new https.Agent({ keepAlive: true }),\r\n\r\n // 'proxy' defines the hostname and port of the proxy server\r\n // Use `false` to disable proxies, ignoring environment variables.\r\n // `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and\r\n // supplies credentials.\r\n // This will set an `Proxy-Authorization` header, overwriting any existing\r\n // `Proxy-Authorization` custom headers you have set using `headers`.\r\n proxy: {\r\n host: '127.0.0.1',\r\n port: 9000,\r\n auth: {\r\n username: 'mikeymike',\r\n password: 'rapunz3l'\r\n }\r\n },\r\n\r\n // `cancelToken` specifies spb cancel token that can be used to cancel the request\r\n // (see Cancellation section below for details)\r\n cancelToken: new CancelToken(function (cancel) {\r\n })\r\n }*/\r\n\r\n/**\r\n *\r\n axios.request(config)\r\n\r\n axios.get(url[, config])\r\n\r\n axios.delete(url[, config])\r\n\r\n axios.head(url[, config])\r\n\r\n axios.options(url[, config])\r\n\r\n axios.post(url[, data[, config]])\r\n\r\n axios.put(url[, data[, config]])\r\n\r\n axios.patch(url[, data[, config]])\r\n\r\n axios.all(iterable)\r\n\r\n axios.spread(callback)\r\n */\r\n/**\r\n * Response\r\n * {\r\n  // `data` is the response that was provided by the server\r\n  data: {},\r\n\r\n  // `status` is the HTTP status code from the server response\r\n  status: 200,\r\n\r\n  // `statusText` is the HTTP status message from the server response\r\n  statusText: 'OK',\r\n\r\n  // `headers` the headers that the server responded with\r\n  // All header names are lower cased\r\n  headers: {},\r\n\r\n  // `config` is the config that was provided to `axios` for the request\r\n  config: {},\r\n\r\n  // `request` is the request that generated this response\r\n  // It is the last ClientRequest instance in node.js (in redirects)\r\n  // and an XMLHttpRequest instance the browser\r\n  request: {}\r\n}\r\n // 实例\r\n axios.get('/user/12345')\r\n .then(function(response) {\r\n    console.log(response.data);\r\n    console.log(response.status);\r\n    console.log(response.statusText);\r\n    console.log(response.headers);\r\n    console.log(response.config);\r\n  });\r\n */\r\n","/**\r\n * version:                2015.01.01\r\n * creatTime:             2015.11.11\r\n * updateTime:            2020.11.03\r\n * author:                wuwg\r\n * name:                setHtmlFontSize\r\n */\r\n// 事件对象\r\nimport eventObject from './event.js';\r\n\r\n/**\r\n *\r\n * @param {object} options  需要配置的参数\r\n * @param {Number} options.minWidth  页面最小宽度\r\n * @param {Number} options.minHeight  页面最小高度\r\n * @param {Number} options.fontSize  页面参照的换算单位（视觉图的字体大小按照这个进行换算成rem）\r\n * @param {Number} options.visualWidth  视觉图的宽\r\n * @param {Number} options.visualHeight  视觉图的高\r\n * @constructor\r\n * @description 构造函数\r\n * @returns  {void} 无返回值\r\n */\r\nfunction SetHtmlSize(options) {\r\n    // html 元素\r\n    this.htmlElement = document.querySelector('html');\r\n    // 初始化参数\r\n    this.init(options);\r\n}\r\n\r\n// 构造函数的原型\r\nSetHtmlSize.prototype = {\r\n    // 合并参数\r\n    mergeOptions: function (options) {\r\n        this.author = 'wuwg';\r\n        this.updateTime = '20201103';\r\n        //  默认参数\r\n        const defaultOptions = {\r\n            //  最小宽\r\n            minWidth: 1440,\r\n            //  最小高\r\n            minHeight: 800,\r\n            //  页面参照的换算单位（视觉图的字体大小按照这个进行换算成rem）\r\n            fontSize: 36,\r\n            // 视觉图的宽\r\n            visualWidth: 1920,\r\n            // 视觉图的高\r\n            visualHeight: 980\r\n        };\r\n        // 判断是否是对象\r\n        if (Object.prototype.toString.call(options, null) === '[object Object]') {\r\n            // 合并参数\r\n            for (const _name in options) {\r\n                defaultOptions[_name] = options[_name];\r\n            }\r\n        }\r\n        // 重新赋值\r\n        this.options = defaultOptions;\r\n    },\r\n    // 设置字体大小\r\n    setHtmlSize: function () {\r\n        // 字体大小\r\n        let htmlSize = 18;\r\n        //  client  width\r\n        let clientWidth = Math.max(window.innerWidth, this.options.minWidth);\r\n        //  client  height\r\n        let clientHeight = Math.max(window.innerHeight, this.options.minHeight);\r\n        try {\r\n            //  client  width\r\n            clientWidth = Math.max(window.top.innerWidth, this.options.minWidth);\r\n            //  client  height\r\n            clientHeight = Math.max(window.top.innerHeight, this.options.minHeight);\r\n        } catch (e) {\r\n            window.console.error('跨域了,动态设置html字体大小，可能不精准，请自己注意！');\r\n        }\r\n        // 最终的字体大小\r\n        htmlSize = Math.min(clientWidth * this.options.fontSize / this.options.visualWidth, clientHeight * this.options.fontSize / this.options.visualHeight);\r\n        // 设置html 字体大小\r\n        this.htmlElement.style.fontSize = `${htmlSize}px`;\r\n    },\r\n    // 重置函数\r\n    resizeHandle: function () {\r\n        // 清除定时器\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n        // 设置定时器\r\n        this.timer = setTimeout(() => {\r\n            // 设置大小\r\n            setHtmlObject.setHtmlSize();\r\n        }, 50);  // eslint-disable-line\r\n    },\r\n    //  绑定事件\r\n    bindEvent: function () {\r\n        // 解除事件绑定\r\n        this.unbindEvent();\r\n        // 绑定事件\r\n        eventObject.on(window, 'resize', this.resizeHandle);\r\n    },\r\n    //  解除绑定\r\n    unbindEvent: function () {\r\n        // 绑定事件\r\n        eventObject.off(window, 'resize', this.resizeHandle);\r\n    },\r\n    // 初始化函数\r\n    init: function (options) {\r\n        // 合并参数\r\n        this.mergeOptions(options);\r\n        // 首次调用方法\r\n        this.setHtmlSize();\r\n        // 绑定事件\r\n        this.bindEvent();\r\n    }\r\n};\r\n//  设置html  size 的对象\r\nlet setHtmlObject = null;\r\n// 导出模块\r\nexport default (options) => {\r\n    // 判断是否存在\r\n    if (!setHtmlObject) {\r\n        setHtmlObject = new SetHtmlSize(options);\r\n    } else {\r\n        // 重新初始化\r\n        setHtmlObject.init(options);\r\n    }\r\n    // 返回对象\r\n    return setHtmlObject;\r\n};\r\n\r\n\r\n// set  html  size\r\n/* (function (factory) {\r\n    if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        module.exports = factory();\r\n    } else if (typeof define === 'function' && define.amd) {\r\n        define('setHtmlFontSize', [], factory);\r\n    } else if (typeof define === 'function' && define.cmd) {\r\n        define(function (require, exports, module) {\r\n            module.exports = factory();\r\n        });\r\n    } else {\r\n        window.setHtmlFontSize = factory();\r\n    }\r\n})(function () {\r\n    return function (options) {\r\n        // 判断是否存在\r\n        if (!setHtmlObject) {\r\n            setHtmlObject = new SetHtmlSize(options);\r\n        } else {\r\n            // 重新初始化\r\n            setHtmlObject.init(options);\r\n        }\r\n        // 返回对象\r\n        return setHtmlObject;\r\n    };\r\n});*/\r\n","/**\r\n * @file  fdGlobal.js\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @createTime  2019-08-13\r\n * @copyright thunisoft fd\r\n * @see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n * @description fdGlobal 这是全局的一个对象，里面有各种工具类\r\n * @updateTime  2019-08-13\r\n */\r\n/* global console */\r\n// 函数防抖\r\nimport debounce from '@/components/tools/extend/debounce.js';\r\n// 函数节流\r\nimport throttle from '@/components/tools/extend/throttle.js';\r\n// 获取兼容ie和非ie的event对象\r\nimport getEvent from '@/components/tools/extend/getEvent.js';\r\n// 阻止默认事件\r\nimport stopEvent from '@/components/tools/extend/stopEvent.js';\r\n// 绑定|取消事件函数\r\nimport eventObject from '@/components/tools/extend/event.js';\r\n// 执行时间记录工具\r\nimport fdPerformance from '@/components/tools/extend/performance.js';\r\n// 日志工具\r\nimport fdLog from '@/components/tools/extend/log.js';\r\n// console日志模块， 因为console为全局对象，所以用$console为变量名\r\nimport $console from '@/components/tools/extend/console.js';\r\n// 判断浏览器的对象\r\nimport browser from '@/components/tools/extend/browser.js';\r\n// 处理了的ajax\r\nimport ajax from '@/components/tools/extend/ajax.js';\r\n// 未处理的axios\r\nimport axios from 'axios';\r\n// 设置字体大小\r\nimport setHtmlFontSize from '@/components/tools/extend/setHtmlFontSize.js';\r\n// 设置滚动条位置\r\nimport setScrollBarPosition from '@/components/tools/extend/setScrollBarPosition.js';\r\n\r\n/**\r\n * @constructor\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @createTime:2019-08-13,\r\n * @updateTime:2019-08-13\r\n * @copyright thunisoft fd\r\n * @description\r\n * ##这是全局方法,\r\n * @see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n * @see [个人博客]{@link  http://www.wuweigang.com}\r\n */\r\nfunction FdGlobal() {\r\n    this.author = 'wuwg';\r\n}\r\n\r\nFdGlobal.prototype = {\r\n    // 处理了的ajax\r\n    ajax,\r\n    // 未处理的axios\r\n    axios,\r\n    // 绑定|取消事件函数\r\n    ...eventObject,\r\n    // 函数防抖\r\n    debounce,\r\n    // 函数节流\r\n    throttle,\r\n    // 获取兼容ie和非ie的event对象\r\n    getEvent,\r\n    // 阻止默认事件\r\n    stopEvent,\r\n    // 日志模块\r\n    ...$console,\r\n\r\n    /**\r\n     * @type {object}\r\n     * @description 记录消耗时间的对象，其以下有6个方法。详情请看{@link performance}对象文档\r\n     * @see  {@link performance}\r\n     * @property {Function} performance.start() 开启【时间消耗工具】\r\n     * @property {Function} performance.stop() 终止【时间消耗工具】\r\n     * @property {Function} performance.create()  创建记录【时间消耗的面板】\r\n     * @property {Function} performance.setStartTime() 重新设置【时间消耗工具】的开始时间\r\n     * @property {Function} performance.getCurrentTime() 获取当前时间，毫秒时间\r\n     * @property {Function} performance.execute()  记录代码运行到这里，消耗的时间日志\r\n\r\n     */\r\n    performance: fdPerformance,\r\n\r\n    /**\r\n     * @type {object}\r\n     * @description  记录流程性日志的对象，其以下有6个方法。详情请看{@link log}对象文档\r\n     * @see {@link log}\r\n     * @property {Function} log.start()  开启【日志记录工具】\r\n     * @property {Function} log.stop() 终止【日志记录工具】\r\n     * @property {Function} log.create()  创建记录【日志的面板】\r\n     * @property {Function} log.setRecodeLog()  重新设置【日志记录工具】的记录状态\r\n     * @property {Function} log.execute()  生成日志的方法\r\n     */\r\n    log: fdLog,\r\n\r\n    /**\r\n     * @type {object}\r\n     * @description  判断浏览器的对象，其以下有11个方法。详情请看{@link browser}对象文档\r\n     * @see {@link browser}\r\n     * @property {Function} browser.getVersion()  获取当前浏览器的版本号\r\n     * @property {Function} browser.isChrome() 检测当前浏览器是否为chrome\r\n     * @property {Function} browser.isCompatible()  检测当前浏览器是否能够与UEditor良好兼容\r\n     * @property {Function} browser.isGecko()  检测当前浏览器内核是否是gecko内核\r\n     * @property {Function} browser.isIe()  检测当前浏览器是否为IE\r\n     * @property {Function} browser.isIeCompat()  检测浏览器模式是否为 IE 兼容模式\r\n     * @property {Function} browser.isMac()  检测当前浏览器是否是运行在mac平台下\r\n     * @property {Function} browser.isOpera()  检测当前浏览器是否为Opera\r\n     * @property {Function} browser.isQuirks()  检测当前浏览器是否处于quirks(“怪异模式”)下\r\n     * @property {Function} browser.isSafari()  检测当前浏览器是否为Safari\r\n     * @property {Function} browser.isWebkit()  检测当前浏览器是否是webkit内核的浏览器\r\n     */\r\n    browser: browser,\r\n    // 设置html的fontSize\r\n    setHtmlFontSize,\r\n    // 设置滚动条位置\r\n    setScrollBarPosition\r\n};\r\n\r\nexport default FdGlobal;\r\n","/**\r\n * @version 20190401\r\n * @author wuwg\r\n * @createTime  20190410\r\n * @updateTime  20190410\r\n */\r\n\r\n/**\r\n * @function\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @alias FdGlobal.throttle\r\n * @description  函数节流，用于性能优化\r\n * @param {function} fn  需要节流的函数\r\n * @param {object} contentText 上下文，也就是对象本身\r\n * @param {number} delay 需要延迟的时间（毫秒数）\r\n * @returns {Function} 返回一个函数\r\n * @example\r\n * <h1>【实例1】addEventListener 方式</h1>\r\n *<input type=\"text\" name=\"test\"  id=\"jsInput\"  >\r\n * <script>\r\n * function doThing() {\r\n *     console.log(this)\r\n *     console.log('需要做的事情 ')\r\n * }\r\n * //  addEventListener 方式\r\n * document.querySelector('#jsInput').addEventListener('input',throttle(doThing,document.querySelector('#jsInput'),1000),false);\r\n * </script>\r\n * <h1>【实例2】元素上直接绑定的方式</h1>\r\n *<input type=\"text\" name=\"test\" oninput=\"inputMethod()\"   >\r\n * <script>\r\n * function doThing() {\r\n *     console.log(this)\r\n *     console.log('需要做的事情 ')\r\n * }\r\n * // 先声明方法\r\n * let inputMethod = throttle.(doThing,document.querySelector('#jsInput'), 1000);\r\n * </script>\r\n *【vue实例3】\r\n *<div id=\"jsApp\">\r\n *   <button  @click=\"clickThrottle(5)\" id=\"jsButton\">click</button>\r\n *   <test  @change=\"changeHandler\"></test>\r\n *</div>\r\n *<script>\r\n * function doThing(num) {\r\n *     console.log(num)\r\n *     console.log(this)\r\n *     console.log('需要做的事情 ')\r\n * }\r\n *   new Vue({\r\n *    el:'#jsApp',\r\n *    components:{\r\n *        test:{\r\n *          template: '<div><button @click=\"clickHandler\">點擊我</button></div>',\r\n *          methods:{\r\n *             clickHandler:function () {\r\n *              this.$emit('change', 5)\r\n *             }\r\n *\r\n *          }\r\n *        }\r\n *\r\n *    },\r\n *    methods:{\r\n *      clickThrottle:throttle(doThing,document.querySelector('#jsButton'), 1000),\r\n *      changeHandler:throttle(doThing)\r\n *    }\r\n *  })\r\n * </script>\r\n */\r\nexport default (fn, contentText, delay) => {\r\n    let waiting;\r\n    let _lastTime = 0;\r\n    let _delay = 50;\r\n    _delay = typeof delay === 'number' ? delay : _delay;\r\n    const later = (_arguments) => {\r\n        waiting = false;\r\n        fn.apply(contentText, _arguments);\r\n    };\r\n    // 注意，這裏不用使用箭頭函數， 否則獲取不到傳遞的參數\r\n    return function () {\r\n        const _arguments = arguments;\r\n        // 当前时间\r\n        const _currentTime = new Date().getTime();\r\n        // 清楚定时器\r\n        if (waiting) {\r\n            clearTimeout(waiting);\r\n        }\r\n        // 当前时间超出，立即执行\r\n        if (_currentTime - _lastTime > _delay) {\r\n            // 执行回调函数\r\n            later(_arguments);\r\n            // 结束时间\r\n            _lastTime = _currentTime;\r\n        } else {\r\n            // 执行回调函数\r\n            waiting = setTimeout(() => {\r\n                // 执行回调函数\r\n                later(_arguments);\r\n            }, _delay);\r\n        }\r\n    };\r\n};\r\n","/**\r\n * @version 20190301\r\n * @author wuwg\r\n * @createTime  20190412\r\n * @updateTime  20190412\r\n */\r\n/**\r\n *\r\n * @function\r\n * @name getEvent\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @memberOf   FdGlobal\r\n * @description  获取兼容ie和非ie的event对象\r\n * @param {object} event  当前的event对象\r\n * @return {event} 返回兼容ie和非ie的event对象\r\n * @example  FdGlobal.getEvent(event)\r\n */\r\nexport default (event) => event || window.event;\r\n","/**\r\n *@file stopEvent\r\n *@version 1.0.1\r\n *@author wuwg\r\n *@createTime 2019/9/7 - 21:16\r\n *@updateTime 2019/9/7 - 21:16\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n @description stopEvent 的描述\r\n */\r\n/**\r\n *\r\n * @function\r\n * @name stopEvent\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @memberOf   FdGlobal\r\n * @description  阻止默认事件\r\n * @param {object} event  当前的event对象\r\n * @return {undefined} 无返回值\r\n * @example  FdGlobal.stopEvent(event)\r\n */\r\nexport default (event) => {\r\n    const _event = event || window.event;\r\n    if (_event.preventDefault) {\r\n        _event.preventDefault();\r\n    } else {\r\n        _event.returnValue = false;\r\n    }\r\n};\r\n","/**\r\n * @version  1.0.1\r\n * @author wuwg\r\n * @createTime  20190816\r\n * @updateTime  20190816\r\n */\r\n\r\n/**\r\n * @function\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @name  adjustScrollBarPosition\r\n * @memberof FdGlobal\r\n * @param {object} element 目标元素\r\n * @param {object} scrollContain 滚动条所在的容器元素（出现滚动条的元素）\r\n * @param {number} distance  滚动条偏移位置\r\n * @description  调整滚动条位置，如果目标(element)不在滚动条容器(scrollContain)的可视区域内，那么将设置滚动条到目标位置，并返回true， 否则返回false\r\n * @returns {boolean}  返回一个boolean值，如果滚动条发生变动，那么将返回true, 否则返回false\r\n * @example\r\n *  <style>\r\n *       ul {\r\n *          width:200px;\r\n *          height: 300px;\r\n *          overflow: auto;\r\n *      }\r\n *       li {\r\n *           padding:5px;\r\n *           line-height:200px;\r\n *           text-align: center;\r\n *           border: 1px solid #000;\r\n *        }\r\n *       li:nth-child(5) {\r\n *           background-color: red;\r\n *       }\r\n *       li:nth-child(2) {\r\n *          background-color: blue\r\n *      }\r\n *  </style>\r\n *  <ul class=\"js-scrollContain\">\r\n *      <li>1</li>\r\n *      <li>2</li>\r\n *      <li>3</li>\r\n *      <li>4</li>\r\n *      <li>5</li>\r\n *      <li>6</li>\r\n *  </ul>\r\n *  <button onclick=\"gotoTarget(5)\">到达5目标位置</button>\r\n *  <button onclick=\"gotoTarget(2)\">到达2目标位置</button>\r\n * <script>\r\n *       function gotoTarget(num) {\r\n *          // 设置滚动条位置\r\n *          FdGlobal.adjustScrollBarPosition(document.querySelector('.js-scrollContain li:nth-child('+ num +')'), document.querySelector('.js-scrollContain'))\r\n *       }\r\n * </script>\r\n */\r\nexport default (element, scrollContain, distance) => {\r\n    const _element = element;\r\n    const _scrollContain = scrollContain;\r\n    const _distance = distance || 0;\r\n    //  获取矩形容器\r\n    const rectTarget = _element.getBoundingClientRect();\r\n    const rectContain = _scrollContain.getBoundingClientRect();\r\n    // debugger\r\n    const bottomOverflowDistance = rectContain.bottom - rectTarget.bottom;\r\n    // bottomOverflowDistance小于0，说明目标元素不在可视范围之内\r\n    if (bottomOverflowDistance < 0) {\r\n        _scrollContain.scrollTop += Math.abs(bottomOverflowDistance) + _distance;\r\n        return true;\r\n    }\r\n    const topOverflowDistance = rectContain.top - rectTarget.top;\r\n    // topOverflowDistance 大于0，说明目标元素不在可视范围之内\r\n    if (topOverflowDistance > 0) {\r\n        _scrollContain.scrollTop -= Math.abs(topOverflowDistance) + _distance;\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n","export default {\r\n\r\n    /**\r\n     * @description 请求单值代码\r\n     * @returns {Promise}  返回promise\r\n     */\r\n    requestCode() {\r\n        return new Promise(function (resolve, reject) {\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal.performance.getCurrentTime();\r\n            const _showLog = window.fdConfig.showLog;\r\n            const _name = '【前置请求】=> 【获取单值代码】';\r\n            const _method = window.fdConfig.methodGet;\r\n            // 单值代码路径\r\n            const _url = `${window.fdConfig.url.spb.getCodes}?${new Date().getTime()}`;\r\n            const _data = {};\r\n            // 输出日志\r\n            window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n            //  返回数据\r\n            window.fdGlobal.ajax({\r\n                method: _method,\r\n                url: _url,\r\n                // URL参数\r\n                // 必须是一个纯对象或者 URL参数对象\r\n                params: _data,\r\n                // 默认值是json\r\n                responseType: 'json'\r\n            })\r\n                .then((data) => {\r\n                    const _serverData = data.data;\r\n                    window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                    // 后端输出日志\r\n                    window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                    resolve(_serverData);\r\n                }, (data) => {\r\n                    window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                    const _serverData = data.data;\r\n                    // 后端输出日志\r\n                    window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                    reject(data);\r\n                });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * @description 请求登录的接口，判断是否登录\r\n     * @returns {Promise} 返回promise\r\n     */\r\n    requestAdjustLogin() {\r\n        return new Promise(function (resolve, reject) {\r\n            // 设置开始时间\r\n            const _startTime = window.fdGlobal.performance.getCurrentTime();\r\n            const _showLog = window.fdConfig.showLog;\r\n            const _name = '【前置请求】=> 【获取用户数据】';\r\n            const _method = window.fdConfig.methodGet;\r\n            const _url = window.fdConfig.url.login;\r\n            const _data = {};\r\n            // 输出日志\r\n            window.fdGlobal.consoleLogRequest(_showLog, _name, _method, _url, _data);\r\n            //  返回数据\r\n            window.fdGlobal.ajax({\r\n                method: _method,\r\n                url: _url,\r\n                // URL参数\r\n                // 必须是一个纯对象或者 URL参数对象\r\n                params: _data,\r\n                // 默认值是json\r\n                responseType: 'json'\r\n            })\r\n                .then((data) => {\r\n                    const _serverData = data.data;\r\n                    window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据的时间 :`, _startTime);\r\n                    // 后端输出日志\r\n                    window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                    resolve(_serverData);\r\n                }, (data) => {\r\n                    window.fdGlobal.performance.execute(`${_name}ajax 结束时间，拿到数据报错 :`, _startTime);\r\n                    const _serverData = data.data;\r\n                    // 后端输出日志\r\n                    window.fdGlobal.consoleLogResponse(_showLog, _name, _serverData);\r\n                    reject(data);\r\n                });\r\n        });\r\n    }\r\n\r\n};\r\n","/**\r\n * @function\r\n * @name getUrlParams\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @memberOf   FdGlobal\r\n * @createTime 2019.08.13\r\n * @description 获取url中的参数，可以\r\n * @param {String} [url] 可选参数，一个url地址，可以不传，默认会取window.location.href\r\n * @returns {object|null} 如果匹配到参数，那么就会返回一个目标对象，否则返回null\r\n * @update\r\n * 1.2020-02-10:\r\n *   1.1 部分url会出现=后无值， 所以将  const _urlParams = _url.match(/[?&](.+?=[^&]+)/igm);\r\n *       修改为   const _urlParams = _url.match(/[?&](.+?=[^&]*)/igm);\r\n *   1.2 url中文字一般都会编码，所以将 spb[value[0]] = value[1]; 修改为  spb[decodeURIComponent(value[0])] = decodeURIComponent(value[1]);\r\n *\r\n */\r\nfunction getUrlParams(url) {\r\n    const _url = url || window.location.href;\r\n    const _urlParams = _url.match(/[?&](.+?=[^&]*)/igm);\r\n    // 默认参数对象\r\n    const _defaultParmas = {};\r\n    return _urlParams ? _urlParams.reduce((a, b) => {\r\n        const value = b.slice(1).split('=');\r\n        a[decodeURIComponent(value[0])] = decodeURIComponent(value[1]);\r\n        return a;\r\n    }, _defaultParmas) : null;\r\n}\r\nexport default getUrlParams;\r\n","/**\r\n *@file fdDataTable\r\n *@version 1.0.1\r\n *@author wanghuifeng\r\n *@createTime 2020/12/28 - 20:48\r\n *@updateTime 2020/12/28 - 20:48\r\n *@see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n *@description 前置请求库， 程序中所有的前置请求全部放到该文件中\r\n */\r\n// 通用的请求模块\r\nimport fdRequest from './fdRequest.js';\r\n// 获取url中的参数\r\nimport getUrlParams from '@/components/tools/extend/getUrlParams.js';\r\n// 全局的eventBus\r\nimport globalBus from '@/components/globalBus/index.js';\r\n\r\n// 导出前置请求\r\nexport default {\r\n    // 处理url中的参数\r\n    operateUrlParams() {\r\n        return new Promise((resolve) => {\r\n            const commonUrlParams = getUrlParams() || {cBh: '', nZt: -1, cCxbs:''};\r\n            globalBus.$emit('global-common-urlParams', commonUrlParams);\r\n            resolve(commonUrlParams);\r\n        });\r\n    },\r\n    // 判断是否登录\r\n    adjustLogined() {\r\n        return new Promise((resolve, reject) => {\r\n            // 请求登录信息\r\n            fdRequest.requestAdjustLogin()\r\n                .then((data) => {\r\n                    // 登录成功\r\n                    resolve(data);\r\n                }, (data) => {\r\n                    // 跳转到登录页\r\n                    if (typeof data.data.data !== 'undefined' && data.data.data.gw_code === 401) {\r\n                        const login = 'login';\r\n                        window.top.location.href = `${window.origin}${login}${encodeURIComponent(window.top.location)}`;\r\n                    } else {\r\n                        window.top.location.href = `${window.location.origin + window.projectName}/page/500/index.html`;\r\n                    }\r\n                    // 登录失败\r\n                    reject(data);\r\n                });\r\n        });\r\n    },\r\n\r\n    // 处理单值代码\r\n    operateCode() {\r\n        return new Promise((resolve, reject) => {\r\n            // 请求单值代码\r\n            fdRequest.requestCode()\r\n                .then((serverData) => {\r\n                    // 【基本信息/自然人】==》【干部管理权限】列表\r\n                    const _gbglqxList = serverData.data.gbglqxList;\r\n                    const _gbglqxCodeType = _gbglqxList[0].codeType;\r\n                    // 【基本信息/自然人】==》【职级】列表\r\n                    const _zjList = serverData.data.zjList;\r\n                    const _zjCodeType = _zjList[0].codeType;\r\n                    // 【基本信息】==》【事由】列表\r\n                    const _syList = serverData.data.cxsyList;\r\n                    const _syCodeType = _syList[0].codeType;\r\n                    // 【其他】==》【查询类型】 列表\r\n                    const _cxlxList = serverData.data.cxdxlxList;\r\n                    const _cxlxCodeType = _cxlxList[0].codeType;\r\n                    // 【自然人】==》【证件类型】 列表\r\n                    const _zjlxList = serverData.data.zjlxList;\r\n                    const _zjlxCodeType = _zjlxList[0].codeType;\r\n                    // 【企业/机构】==》【证照类型】 列表\r\n                    const _zzlxList = serverData.data.zzlxList;\r\n                    const _zzlxCodeType = _zzlxList[0].codeType;\r\n                    // @todo wanghuifeng 获取codeType  20210130\r\n                    // 【基本信息/自然人】==》【干部管理权限】列表\r\n                    window.fdDataTable.gbglqxCodeType = _gbglqxCodeType;\r\n                    // 【基本信息/自然人】==》【职级】列表\r\n                    window.fdDataTable.zJCodeType = _zjCodeType;\r\n                    // 【基本信息】==》【事由】列表\r\n                    window.fdDataTable.syCodeType = _syCodeType;\r\n                    // 【其他】==》【查询类型】 列表\r\n                    window.fdDataTable.cxlxCodeType = _cxlxCodeType;\r\n                    // 【自然人】==》【证件类型】 列表\r\n                    window.fdDataTable.zjlxCodeType = _zjlxCodeType;\r\n                    // 【企业/机构】==》【证照类型】 列表\r\n                    window.fdDataTable.zzlxCodeType = _zzlxCodeType;\r\n                    // @todo wanghuifeng 重组数据  20210130\r\n                    // 【基本信息/自然人】==》【干部管理权限】列表\r\n                    window.fdDataTable.setCodeTypeData(_gbglqxCodeType, _gbglqxList);\r\n                    // 【基本信息/自然人】==》【职级】列表\r\n                    window.fdDataTable.setCodeTypeData(_zjCodeType, _zjList);\r\n                    // 【基本信息】==》【事由】列表\r\n                    window.fdDataTable.setCodeTypeData(_syCodeType, _syList);\r\n                    // 【其他】==》【查询类型】 列表\r\n                    window.fdDataTable.setCodeTypeData(_cxlxCodeType, _cxlxList);\r\n                    // 【自然人】==》【证件类型】 列表\r\n                    window.fdDataTable.setCodeTypeData(_zjlxCodeType, _zjlxList);\r\n                    // 【企业/机构】==》【证照类型】 列表\r\n                    window.fdDataTable.setCodeTypeData(_zzlxCodeType, _zzlxList);\r\n                    resolve('处理单值代码成功');\r\n                }, function () {\r\n                    reject(new Error('处理单值代码失败'));\r\n                });\r\n        });\r\n    }\r\n};\r\n","// The Vue build version to load with the `import` command\r\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\r\n// index.js\r\n// 注意babel-polyfill会影响打包大小，非常影响性能， 20200228-wuwg，\r\n// 解决方案可以参考doc>问题处理文档>babel-polyfill太大问题.md\r\nimport 'babel-polyfill';\r\nimport Vue from 'vue';\r\nimport App from './App';\r\nimport router from './router';\r\n// 全局组件\r\nimport './components/common/index.js';\r\n// 全局指令\r\nimport './js/app/directive/fdDirective.js';\r\n// 全局过滤器\r\nimport './js/app/filter/fdFilter.js';\r\n// 全局消息\r\nimport './js/app/message/fdMessage.js';\r\n//  全局的数据字典\r\nimport './js/app/dataTable/fdDataTable.js';\r\n// 全局配置\r\nimport './js/config.js';\r\n// 全局方法类\r\nimport FdGlobal from './js/app/common/fdGlobal.js';\r\n// import Swiper from 'swiper';\r\n// import 'swiper/swiper.css';\r\n// artery-ui.css需要在入口中引入\r\n// 也可以将artery-ui.css从依赖包中拷贝到项目里或CDN上，然后在index.html的head中通过link方式引入\r\nimport '@com.thunisoft.artery/artery-ui/dist/styles/artery-ui.css';\r\nimport ArteryUI from '@com.thunisoft.artery/artery-ui';\r\n// 前置请求\r\nimport preRequest from './js/app/common/preRequest.js';\r\n// Vue.use(Swiper);\r\nVue.use(ArteryUI);\r\n// 开始时间\r\n// const startTime = new Date().getTime();\r\n// 全局对象\r\nwindow.fdGlobal = new FdGlobal();\r\nVue.config.productionTip = false;\r\n// window.fdGlobal.performance.start(startTime);\r\nwindow.fdGlobal.performance.execute('【app start】:');\r\n// 设置浏览器的cookie  【线上】\r\ndocument.cookie = 'JSESSIONID=node01jq6kf3smnmpoyvlbb1eldoy0.node0';\r\n// 设置html font  size 的方法， 用rem计算的项目可以打开这项目\r\n// window.fdGlobal.setHtmlFontSize();\r\n/* eslint-disable no-new */\r\n// 所有的前置请求\r\nconst _preRequestArr = [\r\n    // 处理url\r\n    preRequest.operateUrlParams(),\r\n    // 判断是否登录\r\n    // preRequest.adjustLogined(),\r\n    // 处理单值代码\r\n    preRequest.operateCode()\r\n];\r\n// 1.执行前置请求\r\nPromise.all(_preRequestArr)\r\n    .then(() => {\r\n        new Vue({\r\n            el: '#app',\r\n            router,\r\n            components: {App},\r\n            template: '<App/>',\r\n            beforeCreate() {\r\n                // 开始时间\r\n                this.beforeCreateTime = window.fdGlobal.performance.getCurrentTime();\r\n            },\r\n            created() {\r\n                window.fdGlobal.performance.execute('【app created】:', this.beforeCreateTime);\r\n                window.fdGlobal.performance.execute('【app created】:');\r\n            },\r\n            mounted() {\r\n                window.fdGlobal.performance.execute('【app mounted】:', this.beforeCreateTime);\r\n                window.fdGlobal.performance.execute('【app mounted】:');\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n","/**\r\n * @file  requestAnimationFrame.js\r\n * @version 1.0.1\r\n * @author wuwg  <wuwg@thunisoft.com>\r\n * @description  requestAnimationFrame 兼容性方法， 兼容所有浏览器， requestAnimationFrame属于window对象，只需要引入文件即可\r\n * @createTime  2019-09-09\r\n * @copyright thunisoft fd\r\n * @see [jsDoc中文文档]{@link  http://www.dba.cn/book/jsdoc/JSDOCKuaiBiaoQianBLOCKTAGS/CONSTRUCTS.html}\r\n * @updateTime  2019-09-09\r\n */\r\n(function () {\r\n    let lastTime = 0;\r\n    const NUM_16 = 16;\r\n    // 渲染内核\r\n    const vendors = ['webkit', 'moz', 'ms', 'o'];\r\n    const vendorsLen = vendors.length;\r\n    for (let i = 0; i < vendorsLen && !window.requestAnimationFrame; i++) {\r\n        window.requestAnimationFrame = window[`${vendors[i]}RequestAnimationFrame`];\r\n        window.cancelAnimationFrame = window[`${vendors[i]}CancelAnimationFrame`] || window[`${vendors[i]}CancelRequestAnimationFrame`];\r\n    }\r\n    // 如果还不存在 requestAnimationFrame 就用setTimeout 替代\r\n    if (!window.requestAnimationFrame) {\r\n        window.requestAnimationFrame = function (callback) {\r\n            // 当前时间\r\n            const currentTime = new Date().getTime();\r\n            // 时间差\r\n            const timeDifference = Math.max(0, NUM_16 - (currentTime - lastTime));\r\n            // setTimeout 的实现方式\r\n            const id = window.setTimeout(() => {\r\n                callback();\r\n            }, timeDifference);\r\n            lastTime = currentTime + timeDifference;\r\n            return id;\r\n        };\r\n    }\r\n    // 取消定时器的方法\r\n    if (!window.cancelAnimationFrame) {\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n    }\r\n})();\r\n","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/index.js??ref--6-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/lib/index.js??ref--6-2!../node_modules/less-loader/dist/cjs.js??ref--6-3!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=0f8034aa&lang=less&scoped=true&\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--6-3!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=less&\""],"sourceRoot":""}